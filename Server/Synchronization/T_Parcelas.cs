// ###################################################### 
// ## SyCraf Engine Codegen                          #### 
// ###################################################### 
// ## This file is entirely written by               #### 
// ## the construction bot. DO NOT EDIT THIS FILE.   #### 
// ###################################################### 

using System;
using System.IO;
using System.Threading;
using System.Collections;

namespace SyCrafEngine
{
	public class T_Parcelas : Synchronization
	{
		private string i_unique = "0";
		private string nu_nsu = "0";
		private string fk_empresa = "0";
		private string fk_cartao = "0";
		private string dt_inclusao = "1900-01-01 00:00:00";
		private string nu_parcela = "0";
		private string vr_valor = "0";
		private string nu_indice = "0";
		private string tg_pago = "";
		private string fk_loja = "0";
		private string nu_tot_parcelas = "0";
		private string fk_terminal = "0";
		private string fk_log_transacoes = "0";
		
		public int var_FieldCount = 13;
		
		public T_Parcelas ()
		{
			var_Serial = TB_T_PARCELAS.serial;
			var_Tablename = TB_T_PARCELAS.Alias;
		}
		
		public T_Parcelas ( Transaction trx )
		{
			AcquireTransaction ( ref trx );
			
			var_Serial = TB_T_PARCELAS.serial;
			var_Tablename = TB_T_PARCELAS.Alias;
			
			TraceLog ( var_Tablename + " serial : " + var_serialNumber);
		}
		
		public string exportNames()
		{
			return "nu_nsu,fk_empresa,fk_cartao,dt_inclusao,nu_parcela,vr_valor,nu_indice,tg_pago,fk_loja,nu_tot_parcelas,fk_terminal,fk_log_transacoes";
		}
		
		public string exportCSV()
		{
			return i_unique + str_field_sep + nu_nsu + str_field_sep + fk_empresa + str_field_sep + fk_cartao + str_field_sep + dt_inclusao + str_field_sep + nu_parcela + str_field_sep + vr_valor + str_field_sep + nu_indice + str_field_sep + tg_pago + str_field_sep + fk_loja + str_field_sep + nu_tot_parcelas + str_field_sep + fk_terminal + str_field_sep + fk_log_transacoes;
		}
		
		public void Reset()
		{
			i_unique = "0";
			nu_nsu = "0";
			fk_empresa = "0";
			fk_cartao = "0";
			dt_inclusao = "1900-01-01 00:00:00";
			nu_parcela = "0";
			vr_valor = "0";
			nu_indice = "0";
			tg_pago = "";
			fk_loja = "0";
			nu_tot_parcelas = "0";
			fk_terminal = "0";
			fk_log_transacoes = "0";
		
			ReleaseExclusive();
		}
		
		public void copy ( ref T_Parcelas cpy )
		{
			nu_nsu = cpy.nu_nsu;
			fk_empresa = cpy.fk_empresa;
			fk_cartao = cpy.fk_cartao;
			dt_inclusao = cpy.dt_inclusao;
			nu_parcela = cpy.nu_parcela;
			vr_valor = cpy.vr_valor;
			nu_indice = cpy.nu_indice;
			tg_pago = cpy.tg_pago;
			fk_loja = cpy.fk_loja;
			nu_tot_parcelas = cpy.nu_tot_parcelas;
			fk_terminal = cpy.fk_terminal;
			fk_log_transacoes = cpy.fk_log_transacoes;
		}
		
		public override void fetchRetrieve ( ref DB_Row row )
		{
			i_unique = row.GetField ( TB_T_PARCELAS.i_unique );
			nu_nsu = row.GetField ( TB_T_PARCELAS.nu_nsu );
			fk_empresa = row.GetField ( TB_T_PARCELAS.fk_empresa );
			fk_cartao = row.GetField ( TB_T_PARCELAS.fk_cartao );
			dt_inclusao = ConvertTime ( row.GetField ( TB_T_PARCELAS.dt_inclusao ) );
			nu_parcela = row.GetField ( TB_T_PARCELAS.nu_parcela );
			vr_valor = row.GetField ( TB_T_PARCELAS.vr_valor );
			nu_indice = row.GetField ( TB_T_PARCELAS.nu_indice );
			tg_pago = row.GetField ( TB_T_PARCELAS.tg_pago );
			fk_loja = row.GetField ( TB_T_PARCELAS.fk_loja );
			nu_tot_parcelas = row.GetField ( TB_T_PARCELAS.nu_tot_parcelas );
			fk_terminal = row.GetField ( TB_T_PARCELAS.fk_terminal );
			fk_log_transacoes = row.GetField ( TB_T_PARCELAS.fk_log_transacoes );
		}
		
		public bool synchronize_T_Parcelas ( )
		{
			try{
			
			if ( m_hshChangedFields.Count == 0 )
				return true;
			
			StartUpdate();
		
			if ( m_hshChangedFields [ "nu_nsu" ] != null )
				m_gen_dbStatement.AddUpdate ( TB_T_PARCELAS.nu_nsu , nu_nsu , TB_T_PARCELAS.type_nu_nsu );
			if ( m_hshChangedFields [ "fk_empresa" ] != null )
				m_gen_dbStatement.AddUpdate ( TB_T_PARCELAS.fk_empresa , fk_empresa , TB_T_PARCELAS.type_fk_empresa );
			if ( m_hshChangedFields [ "fk_cartao" ] != null )
				m_gen_dbStatement.AddUpdate ( TB_T_PARCELAS.fk_cartao , fk_cartao , TB_T_PARCELAS.type_fk_cartao );
			if ( m_hshChangedFields [ "dt_inclusao" ] != null )
				m_gen_dbStatement.AddUpdate ( TB_T_PARCELAS.dt_inclusao , dt_inclusao , TB_T_PARCELAS.type_dt_inclusao );
			if ( m_hshChangedFields [ "nu_parcela" ] != null )
				m_gen_dbStatement.AddUpdate ( TB_T_PARCELAS.nu_parcela , nu_parcela , TB_T_PARCELAS.type_nu_parcela );
			if ( m_hshChangedFields [ "vr_valor" ] != null )
				m_gen_dbStatement.AddUpdate ( TB_T_PARCELAS.vr_valor , vr_valor , TB_T_PARCELAS.type_vr_valor );
			if ( m_hshChangedFields [ "nu_indice" ] != null )
				m_gen_dbStatement.AddUpdate ( TB_T_PARCELAS.nu_indice , nu_indice , TB_T_PARCELAS.type_nu_indice );
			if ( m_hshChangedFields [ "tg_pago" ] != null )
				m_gen_dbStatement.AddUpdate ( TB_T_PARCELAS.tg_pago , tg_pago , TB_T_PARCELAS.type_tg_pago );
			if ( m_hshChangedFields [ "fk_loja" ] != null )
				m_gen_dbStatement.AddUpdate ( TB_T_PARCELAS.fk_loja , fk_loja , TB_T_PARCELAS.type_fk_loja );
			if ( m_hshChangedFields [ "nu_tot_parcelas" ] != null )
				m_gen_dbStatement.AddUpdate ( TB_T_PARCELAS.nu_tot_parcelas , nu_tot_parcelas , TB_T_PARCELAS.type_nu_tot_parcelas );
			if ( m_hshChangedFields [ "fk_terminal" ] != null )
				m_gen_dbStatement.AddUpdate ( TB_T_PARCELAS.fk_terminal , fk_terminal , TB_T_PARCELAS.type_fk_terminal );
			if ( m_hshChangedFields [ "fk_log_transacoes" ] != null )
				m_gen_dbStatement.AddUpdate ( TB_T_PARCELAS.fk_log_transacoes , fk_log_transacoes , TB_T_PARCELAS.type_fk_log_transacoes );
		
			m_gen_dbStatement.AddWhere ( TB_T_PARCELAS.i_unique, i_unique, TB_T_PARCELAS.type_i_unique );
		
			} catch ( System.Exception ex ) {
				StreamWriter wr = new StreamWriter ( 	"CRITICAL_" + var_Tablename + "_" + "_" + DateTime.Now.Year.ToString() + DateTime.Now.Month.ToString().PadLeft ( 2, '0' ) + DateTime.Now.Day.ToString().PadLeft ( 2, '0' ) + "_" + DateTime.Now.Hour.ToString().PadLeft ( 2, '0' ) + DateTime.Now.Minute.ToString().PadLeft ( 2, '0' ) + DateTime.Now.Second.ToString().PadLeft ( 2, '0' ) + ".txt" );
				wr.WriteLine ( ex.ToString() );
				wr.Flush();
				wr.Close();
			}
		
			return Update();
		}
			
		public string get_identity() { return i_unique; } 
		public string get_nu_nsu() { return nu_nsu; } 
		public string get_fk_empresa() { return fk_empresa; } 
		public string get_fk_cartao() { return fk_cartao; } 
		public string get_dt_inclusao() { return dt_inclusao; } 
		public string get_nu_parcela() { return nu_parcela; } 
		public string get_vr_valor() { return vr_valor; } 
		public string get_nu_indice() { return nu_indice; } 
		public string get_tg_pago() { return tg_pago; } 
		public string get_fk_loja() { return fk_loja; } 
		public string get_nu_tot_parcelas() { return nu_tot_parcelas; } 
		public string get_fk_terminal() { return fk_terminal; } 
		public string get_fk_log_transacoes() { return fk_log_transacoes; } 
			
		public long get_int_nu_nsu() { return Convert.ToInt64 ( nu_nsu ); } 
		public long get_int_fk_empresa() { return Convert.ToInt64 ( fk_empresa ); } 
		public long get_int_fk_cartao() { return Convert.ToInt64 ( fk_cartao ); } 
		public long get_int_nu_parcela() { return Convert.ToInt64 ( nu_parcela ); } 
		public long get_int_vr_valor() { return Convert.ToInt64 ( vr_valor ); } 
		public long get_int_nu_indice() { return Convert.ToInt64 ( nu_indice ); } 
		public long get_int_fk_loja() { return Convert.ToInt64 ( fk_loja ); } 
		public long get_int_nu_tot_parcelas() { return Convert.ToInt64 ( nu_tot_parcelas ); } 
		public long get_int_fk_terminal() { return Convert.ToInt64 ( fk_terminal ); } 
		public long get_int_fk_log_transacoes() { return Convert.ToInt64 ( fk_log_transacoes ); } 
			
		public void set_nu_nsu ( string val ) { nu_nsu = val; m_hshChangedFields [ "nu_nsu" ]="."; } 
		public void set_fk_empresa ( string val ) { fk_empresa = val; m_hshChangedFields [ "fk_empresa" ]="."; } 
		public void set_fk_cartao ( string val ) { fk_cartao = val; m_hshChangedFields [ "fk_cartao" ]="."; } 
		public void set_dt_inclusao ( string val ) { dt_inclusao = val; m_hshChangedFields [ "dt_inclusao" ]="."; } 
		public void set_nu_parcela ( string val ) { nu_parcela = val; m_hshChangedFields [ "nu_parcela" ]="."; } 
		public void set_vr_valor ( string val ) { vr_valor = val; m_hshChangedFields [ "vr_valor" ]="."; } 
		public void set_nu_indice ( string val ) { nu_indice = val; m_hshChangedFields [ "nu_indice" ]="."; } 
		public void set_tg_pago ( string val ) { tg_pago = val; m_hshChangedFields [ "tg_pago" ]="."; } 
		public void set_fk_loja ( string val ) { fk_loja = val; m_hshChangedFields [ "fk_loja" ]="."; } 
		public void set_nu_tot_parcelas ( string val ) { nu_tot_parcelas = val; m_hshChangedFields [ "nu_tot_parcelas" ]="."; } 
		public void set_fk_terminal ( string val ) { fk_terminal = val; m_hshChangedFields [ "fk_terminal" ]="."; } 
		public void set_fk_log_transacoes ( string val ) { fk_log_transacoes = val; m_hshChangedFields [ "fk_log_transacoes" ]="."; } 
		
		public void set_nu_nsu ( long val ) { nu_nsu = Convert.ToString(val); m_hshChangedFields [ "nu_nsu" ]="."; } 
		public void set_fk_empresa ( long val ) { fk_empresa = Convert.ToString(val); m_hshChangedFields [ "fk_empresa" ]="."; } 
		public void set_fk_cartao ( long val ) { fk_cartao = Convert.ToString(val); m_hshChangedFields [ "fk_cartao" ]="."; } 
		public void set_nu_parcela ( long val ) { nu_parcela = Convert.ToString(val); m_hshChangedFields [ "nu_parcela" ]="."; } 
		public void set_vr_valor ( long val ) { vr_valor = Convert.ToString(val); m_hshChangedFields [ "vr_valor" ]="."; } 
		public void set_nu_indice ( long val ) { nu_indice = Convert.ToString(val); m_hshChangedFields [ "nu_indice" ]="."; } 
		public void set_fk_loja ( long val ) { fk_loja = Convert.ToString(val); m_hshChangedFields [ "fk_loja" ]="."; } 
		public void set_nu_tot_parcelas ( long val ) { nu_tot_parcelas = Convert.ToString(val); m_hshChangedFields [ "nu_tot_parcelas" ]="."; } 
		public void set_fk_terminal ( long val ) { fk_terminal = Convert.ToString(val); m_hshChangedFields [ "fk_terminal" ]="."; } 
		public void set_fk_log_transacoes ( long val ) { fk_log_transacoes = Convert.ToString(val); m_hshChangedFields [ "fk_log_transacoes" ]="."; } 
			
		public void fieldSelection()
		{
			m_gen_dbStatement.AddSelect ( TB_T_PARCELAS.i_unique );
			m_gen_dbStatement.AddSelect ( TB_T_PARCELAS.nu_nsu );
			m_gen_dbStatement.AddSelect ( TB_T_PARCELAS.fk_empresa );
			m_gen_dbStatement.AddSelect ( TB_T_PARCELAS.fk_cartao );
			m_gen_dbStatement.AddSelect ( TB_T_PARCELAS.dt_inclusao );
			m_gen_dbStatement.AddSelect ( TB_T_PARCELAS.nu_parcela );
			m_gen_dbStatement.AddSelect ( TB_T_PARCELAS.vr_valor );
			m_gen_dbStatement.AddSelect ( TB_T_PARCELAS.nu_indice );
			m_gen_dbStatement.AddSelect ( TB_T_PARCELAS.tg_pago );
			m_gen_dbStatement.AddSelect ( TB_T_PARCELAS.fk_loja );
			m_gen_dbStatement.AddSelect ( TB_T_PARCELAS.nu_tot_parcelas );
			m_gen_dbStatement.AddSelect ( TB_T_PARCELAS.fk_terminal );
			m_gen_dbStatement.AddSelect ( TB_T_PARCELAS.fk_log_transacoes );
		}
			
		public bool selectAll()
		{
			do
			{
				StartSelect();
				fieldSelection();
				
				if ( !executeQuery() )
					return false;
			}
			while ( EndSelect() == false ); // row lock
			
			return  HasRows();
		}
		
		public bool selectIdentity ( string identity )
		{
			do
			{
				StartSelect();
				fieldSelection();
			
				m_gen_dbStatement.AddWhere ( TB_T_PARCELAS.i_unique, identity, TB_T_PARCELAS.type_i_unique );
			
				if ( !executeQuery())
					return false;
			}
			while ( EndSelect() == false ); // row lock
			
			if ( HasRows() == true)
			{
				DB_Row row = m_db_result.GetFirstRow();
				fetchRetrieve ( ref row );
				return true;
			}
			
			return false;
		}
		
		public bool create_T_Parcelas ( )
		{
			try{
			string new_id = "";
			
			StartInsert();
			
			m_gen_dbStatement.AddValue ( TB_T_PARCELAS.nu_nsu, nu_nsu, TB_T_PARCELAS.type_nu_nsu );
			m_gen_dbStatement.AddValue ( TB_T_PARCELAS.fk_empresa, fk_empresa, TB_T_PARCELAS.type_fk_empresa );
			m_gen_dbStatement.AddValue ( TB_T_PARCELAS.fk_cartao, fk_cartao, TB_T_PARCELAS.type_fk_cartao );
			m_gen_dbStatement.AddValue ( TB_T_PARCELAS.dt_inclusao, dt_inclusao, TB_T_PARCELAS.type_dt_inclusao );
			m_gen_dbStatement.AddValue ( TB_T_PARCELAS.nu_parcela, nu_parcela, TB_T_PARCELAS.type_nu_parcela );
			m_gen_dbStatement.AddValue ( TB_T_PARCELAS.vr_valor, vr_valor, TB_T_PARCELAS.type_vr_valor );
			m_gen_dbStatement.AddValue ( TB_T_PARCELAS.nu_indice, nu_indice, TB_T_PARCELAS.type_nu_indice );
			m_gen_dbStatement.AddValue ( TB_T_PARCELAS.tg_pago, tg_pago, TB_T_PARCELAS.type_tg_pago );
			m_gen_dbStatement.AddValue ( TB_T_PARCELAS.fk_loja, fk_loja, TB_T_PARCELAS.type_fk_loja );
			m_gen_dbStatement.AddValue ( TB_T_PARCELAS.nu_tot_parcelas, nu_tot_parcelas, TB_T_PARCELAS.type_nu_tot_parcelas );
			m_gen_dbStatement.AddValue ( TB_T_PARCELAS.fk_terminal, fk_terminal, TB_T_PARCELAS.type_fk_terminal );
			m_gen_dbStatement.AddValue ( TB_T_PARCELAS.fk_log_transacoes, fk_log_transacoes, TB_T_PARCELAS.type_fk_log_transacoes );
			
			if ( !ExecuteScalar ( ref new_id ) )
				return false;
			
			i_unique = new_id;
			
			} catch ( System.Exception ex ) {
				StreamWriter wr = new StreamWriter ( 	"CRITICAL_" + var_Tablename + "_" + "_" + DateTime.Now.Year.ToString() + DateTime.Now.Month.ToString().PadLeft ( 2, '0' ) + DateTime.Now.Day.ToString().PadLeft ( 2, '0' ) + "_" + DateTime.Now.Hour.ToString().PadLeft ( 2, '0' ) + DateTime.Now.Minute.ToString().PadLeft ( 2, '0' ) + DateTime.Now.Second.ToString().PadLeft ( 2, '0' ) + ".txt" );
				wr.WriteLine ( ex.ToString() );
				wr.Flush();
				wr.Close();
			}
			
			return true;
		}
			
		public bool delete ( )
		{
		
			bool ret = false;
		
			try{
			StartDelete();
			
			if ( i_unique != "0" )
				m_gen_dbStatement.AddWhere ( TB_T_PARCELAS.i_unique, i_unique, TB_T_PARCELAS.type_i_unique );
			
			ret = Execute();
			
			} catch ( System.Exception ex ) {
				StreamWriter wr = new StreamWriter ( 	"CRITICAL_" + var_Tablename + "_" + "_" + DateTime.Now.Year.ToString() + DateTime.Now.Month.ToString().PadLeft ( 2, '0' ) + DateTime.Now.Day.ToString().PadLeft ( 2, '0' ) + "_" + DateTime.Now.Hour.ToString().PadLeft ( 2, '0' ) + DateTime.Now.Minute.ToString().PadLeft ( 2, '0' ) + DateTime.Now.Second.ToString().PadLeft ( 2, '0' ) + ".txt" );
				wr.WriteLine ( ex.ToString() );
				wr.Flush();
				wr.Close();
			}
			
			return ret; 
		}
			
		public bool select_fk_log_trans ( string val_fk_log_transacoes )
		{
			do
			{
				StartSelect();
				fieldSelection();
			
				m_gen_dbStatement.AddWhere ( TB_T_PARCELAS.fk_log_transacoes, val_fk_log_transacoes , TB_T_PARCELAS.type_fk_log_transacoes);
			
				m_gen_dbStatement.AddOrderBy ( TB_T_PARCELAS.nu_indice );
			
				if ( !executeQuery() )
					return false;
			}
			while ( EndSelect() == false ); // row lock
			
			return HasRows();
		}
			
		public bool select_rows_cartao ( ref ArrayList lst_fk_cartao_0, string val_nu_parcela )
		{
			do
			{
				StartSelect();
				fieldSelection();
			
				m_gen_dbStatement.AddWhereIn ( TB_T_PARCELAS.fk_cartao, ref lst_fk_cartao_0 );
				m_gen_dbStatement.AddWhereGreaterEqual ( TB_T_PARCELAS.nu_parcela, val_nu_parcela , TB_T_PARCELAS.type_nu_parcela);
			
				if ( !executeQuery() )
					return false;
			}
			while ( EndSelect() == false ); // row lock
			
			return HasRows();
		}
			
		public bool select_rows_nsu ( string val_nu_nsu, string val_dt_inclusao, string val_dt_inclusao1 )
		{
			do
			{
				StartSelect();
				fieldSelection();
			
				m_gen_dbStatement.AddWhere ( TB_T_PARCELAS.nu_nsu, val_nu_nsu , TB_T_PARCELAS.type_nu_nsu);
				m_gen_dbStatement.AddWhereGreaterEqual ( TB_T_PARCELAS.dt_inclusao, val_dt_inclusao , TB_T_PARCELAS.type_dt_inclusao);
				m_gen_dbStatement.AddWhereLessThan ( TB_T_PARCELAS.dt_inclusao, val_dt_inclusao1 , TB_T_PARCELAS.type_dt_inclusao);
			
				if ( !executeQuery() )
					return false;
			}
			while ( EndSelect() == false ); // row lock
			
			return HasRows();
		}
			
		public bool select_rows_data ( string val_dt_inclusao, string val_dt_inclusao1, string val_tg_pago, string val_nu_indice )
		{
			do
			{
				StartSelect();
				fieldSelection();
			
				m_gen_dbStatement.AddWhereGreaterEqual ( TB_T_PARCELAS.dt_inclusao, val_dt_inclusao , TB_T_PARCELAS.type_dt_inclusao);
				m_gen_dbStatement.AddWhereLessThan ( TB_T_PARCELAS.dt_inclusao, val_dt_inclusao1 , TB_T_PARCELAS.type_dt_inclusao);
				m_gen_dbStatement.AddWhere ( TB_T_PARCELAS.tg_pago, val_tg_pago , TB_T_PARCELAS.type_tg_pago);
				m_gen_dbStatement.AddWhere ( TB_T_PARCELAS.nu_indice, val_nu_indice , TB_T_PARCELAS.type_nu_indice);
			
				if ( !executeQuery() )
					return false;
			}
			while ( EndSelect() == false ); // row lock
			
			return HasRows();
		}
			
		public bool select_rows_cartao_mensal ( ref ArrayList lst_fk_cartao_0, string val_nu_parcela )
		{
			do
			{
				StartSelect();
				fieldSelection();
			
				m_gen_dbStatement.AddWhereIn ( TB_T_PARCELAS.fk_cartao, ref lst_fk_cartao_0 );
				m_gen_dbStatement.AddWhere ( TB_T_PARCELAS.nu_parcela, val_nu_parcela , TB_T_PARCELAS.type_nu_parcela);
			
				if ( !executeQuery() )
					return false;
			}
			while ( EndSelect() == false ); // row lock
			
			return HasRows();
		}
			
		public bool select_rows_data_empresa ( string val_dt_inclusao, string val_dt_inclusao1, string val_tg_pago, string val_nu_indice, string val_fk_empresa )
		{
			do
			{
				StartSelect();
				fieldSelection();
			
				m_gen_dbStatement.AddWhereGreaterEqual ( TB_T_PARCELAS.dt_inclusao, val_dt_inclusao , TB_T_PARCELAS.type_dt_inclusao);
				m_gen_dbStatement.AddWhereLessThan ( TB_T_PARCELAS.dt_inclusao, val_dt_inclusao1 , TB_T_PARCELAS.type_dt_inclusao);
				m_gen_dbStatement.AddWhere ( TB_T_PARCELAS.tg_pago, val_tg_pago , TB_T_PARCELAS.type_tg_pago);
				m_gen_dbStatement.AddWhere ( TB_T_PARCELAS.nu_indice, val_nu_indice , TB_T_PARCELAS.type_nu_indice);
				m_gen_dbStatement.AddWhere ( TB_T_PARCELAS.fk_empresa, val_fk_empresa , TB_T_PARCELAS.type_fk_empresa);
			
				if ( !executeQuery() )
					return false;
			}
			while ( EndSelect() == false ); // row lock
			
			return HasRows();
		}
			
		public bool select_rows_emp_fechamento ( string val_fk_empresa, string val_nu_parcela )
		{
			do
			{
				StartSelect();
				fieldSelection();
			
				m_gen_dbStatement.AddWhere ( TB_T_PARCELAS.fk_empresa, val_fk_empresa , TB_T_PARCELAS.type_fk_empresa);
				m_gen_dbStatement.AddWhereGreater ( TB_T_PARCELAS.nu_parcela, val_nu_parcela , TB_T_PARCELAS.type_nu_parcela);
			
				if ( !executeQuery() )
					return false;
			}
			while ( EndSelect() == false ); // row lock
			
			return HasRows();
		}
			
		public bool select_rows_nsu_dt ( string val_nu_nsu, string val_dt_inclusao )
		{
			do
			{
				StartSelect();
				fieldSelection();
			
				m_gen_dbStatement.AddWhere ( TB_T_PARCELAS.nu_nsu, val_nu_nsu , TB_T_PARCELAS.type_nu_nsu);
				m_gen_dbStatement.AddWhere ( TB_T_PARCELAS.dt_inclusao, val_dt_inclusao , TB_T_PARCELAS.type_dt_inclusao);
			
				if ( !executeQuery() )
					return false;
			}
			while ( EndSelect() == false ); // row lock
			
			return HasRows();
		}
			
		public bool select_rows_repasse ( string val_fk_loja, string val_tg_pago )
		{
			do
			{
				StartSelect();
				fieldSelection();
			
				m_gen_dbStatement.AddWhere ( TB_T_PARCELAS.fk_loja, val_fk_loja , TB_T_PARCELAS.type_fk_loja);
				m_gen_dbStatement.AddWhere ( TB_T_PARCELAS.tg_pago, val_tg_pago , TB_T_PARCELAS.type_tg_pago);
			
				if ( !executeQuery() )
					return false;
			}
			while ( EndSelect() == false ); // row lock
			
			return HasRows();
		}
			
		public bool select_rows_lojista ( string val_fk_loja, string val_dt_inclusao, string val_dt_inclusao1, string val_nu_parcela )
		{
			do
			{
				StartSelect();
				fieldSelection();
			
				m_gen_dbStatement.AddWhere ( TB_T_PARCELAS.fk_loja, val_fk_loja , TB_T_PARCELAS.type_fk_loja);
				m_gen_dbStatement.AddWhereGreaterEqual ( TB_T_PARCELAS.dt_inclusao, val_dt_inclusao , TB_T_PARCELAS.type_dt_inclusao);
				m_gen_dbStatement.AddWhereLessThan ( TB_T_PARCELAS.dt_inclusao, val_dt_inclusao1 , TB_T_PARCELAS.type_dt_inclusao);
				m_gen_dbStatement.AddWhere ( TB_T_PARCELAS.nu_parcela, val_nu_parcela , TB_T_PARCELAS.type_nu_parcela);
			
				m_gen_dbStatement.AddOrderBy ( TB_T_PARCELAS.dt_inclusao );
			
				if ( !executeQuery() )
					return false;
			}
			while ( EndSelect() == false ); // row lock
			
			return HasRows();
		}
			
		public bool select_rows_empresa_gift ( string val_fk_empresa, string val_dt_inclusao, string val_dt_inclusao1 )
		{
			do
			{
				StartSelect();
				fieldSelection();
			
				m_gen_dbStatement.AddWhere ( TB_T_PARCELAS.fk_empresa, val_fk_empresa , TB_T_PARCELAS.type_fk_empresa);
				m_gen_dbStatement.AddWhereGreaterEqual ( TB_T_PARCELAS.dt_inclusao, val_dt_inclusao , TB_T_PARCELAS.type_dt_inclusao);
				m_gen_dbStatement.AddWhereLessThan ( TB_T_PARCELAS.dt_inclusao, val_dt_inclusao1 , TB_T_PARCELAS.type_dt_inclusao);
			
				if ( !executeQuery() )
					return false;
			}
			while ( EndSelect() == false ); // row lock
			
			return HasRows();
		}
			
		public bool select_rows_dt ( string val_dt_inclusao )
		{
			do
			{
				StartSelect();
				fieldSelection();
			
				m_gen_dbStatement.AddWhereGreaterEqual ( TB_T_PARCELAS.dt_inclusao, val_dt_inclusao , TB_T_PARCELAS.type_dt_inclusao);
			
				if ( !executeQuery() )
					return false;
			}
			while ( EndSelect() == false ); // row lock
			
			return HasRows();
		}
			
		public bool select_rows_fix_nu_parc ( string val_nu_indice )
		{
			do
			{
				StartSelect();
				fieldSelection();
			
				m_gen_dbStatement.AddWhereGreater ( TB_T_PARCELAS.nu_indice, val_nu_indice , TB_T_PARCELAS.type_nu_indice);
			
				if ( !executeQuery() )
					return false;
			}
			while ( EndSelect() == false ); // row lock
			
			return HasRows();
		}
			
		public bool select_rows_fix_nsu_dt_parc ( string val_nu_nsu, string val_dt_inclusao )
		{
			do
			{
				StartSelect();
				fieldSelection();
			
				m_gen_dbStatement.AddWhere ( TB_T_PARCELAS.nu_nsu, val_nu_nsu , TB_T_PARCELAS.type_nu_nsu);
				m_gen_dbStatement.AddWhere ( TB_T_PARCELAS.dt_inclusao, val_dt_inclusao , TB_T_PARCELAS.type_dt_inclusao);
			
				if ( !executeQuery() )
					return false;
			}
			while ( EndSelect() == false ); // row lock
			
			return HasRows();
		}
			
		public bool select_rows_relat_parc ( string val_nu_parcela, ref ArrayList lst_fk_cartao_1 )
		{
			do
			{
				StartSelect();
				fieldSelection();
			
				m_gen_dbStatement.AddWhere ( TB_T_PARCELAS.nu_parcela, val_nu_parcela , TB_T_PARCELAS.type_nu_parcela);
				m_gen_dbStatement.AddWhereIn ( TB_T_PARCELAS.fk_cartao, ref lst_fk_cartao_1 );
			
				m_gen_dbStatement.AddOrderBy ( TB_T_PARCELAS.nu_indice );
			
				if ( !executeQuery() )
					return false;
			}
			while ( EndSelect() == false ); // row lock
			
			return HasRows();
		}
			
		public bool select_rows_lojista_emp ( string val_fk_loja, string val_fk_empresa, string val_nu_parcela )
		{
			do
			{
				StartSelect();
				fieldSelection();
			
				m_gen_dbStatement.AddWhere ( TB_T_PARCELAS.fk_loja, val_fk_loja , TB_T_PARCELAS.type_fk_loja);
				m_gen_dbStatement.AddWhere ( TB_T_PARCELAS.fk_empresa, val_fk_empresa , TB_T_PARCELAS.type_fk_empresa);
				m_gen_dbStatement.AddWhere ( TB_T_PARCELAS.nu_parcela, val_nu_parcela , TB_T_PARCELAS.type_nu_parcela);
			
				m_gen_dbStatement.AddOrderBy ( TB_T_PARCELAS.dt_inclusao );
			
				if ( !executeQuery() )
					return false;
			}
			while ( EndSelect() == false ); // row lock
			
			return HasRows();
		}
			
		public bool select_rows_ult_compra ( string val_fk_cartao )
		{
			do
			{
				StartSelect();
				fieldSelection();
			
				m_gen_dbStatement.AddWhere ( TB_T_PARCELAS.fk_cartao, val_fk_cartao , TB_T_PARCELAS.type_fk_cartao);
			
				m_gen_dbStatement.AddOrderBy ( TB_T_PARCELAS.dt_inclusao );
			
				if ( !executeQuery() )
					return false;
			}
			while ( EndSelect() == false ); // row lock
			
			return HasRows();
		}
		
		#if DEBUG
		
		public bool setup ( bool IsTruncate, ref string id, string var_nu_nsu, string var_fk_empresa, string var_fk_cartao, string var_dt_inclusao, string var_nu_parcela, string var_vr_valor, string var_nu_indice, string var_tg_pago, string var_fk_loja, string var_nu_tot_parcelas, string var_fk_terminal, string var_fk_log_transacoes )
		{
			if ( IsTruncate ) 
			{
				i_unique = "";
				this.delete();
			}
		
			set_nu_nsu ( var_nu_nsu );
			set_fk_empresa ( var_fk_empresa );
			set_fk_cartao ( var_fk_cartao );
			set_dt_inclusao ( var_dt_inclusao );
			set_nu_parcela ( var_nu_parcela );
			set_vr_valor ( var_vr_valor );
			set_nu_indice ( var_nu_indice );
			set_tg_pago ( var_tg_pago );
			set_fk_loja ( var_fk_loja );
			set_nu_tot_parcelas ( var_nu_tot_parcelas );
			set_fk_terminal ( var_fk_terminal );
			set_fk_log_transacoes ( var_fk_log_transacoes );
			
			if ( create_T_Parcelas() == false )
			{
				return false;
			}
			
			id = get_identity();
			return true;
		}
		
		#endif
		
	}
}
