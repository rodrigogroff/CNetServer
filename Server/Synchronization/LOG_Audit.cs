// ###################################################### 
// ## SyCraf Engine Codegen                          #### 
// ###################################################### 
// ## This file is entirely written by               #### 
// ## the construction bot. DO NOT EDIT THIS FILE.   #### 
// ###################################################### 

using System;
using System.IO;
using System.Threading;
using System.Collections;

namespace SyCrafEngine
{
	public class LOG_Audit : Synchronization
	{
		private string i_unique = "0";
		private string fk_usuario = "0";
		private string tg_operacao = "0";
		private string dt_operacao = "1900-01-01 00:00:00";
		private string st_observacao = "";
		private string fk_generic = "0";
		
		public int var_FieldCount = 6;
		
		public LOG_Audit ()
		{
			var_Serial = TB_LOG_AUDIT.serial;
			var_Tablename = TB_LOG_AUDIT.Alias;
		}
		
		public LOG_Audit ( Transaction trx )
		{
			AcquireTransaction ( ref trx );
			
			var_Serial = TB_LOG_AUDIT.serial;
			var_Tablename = TB_LOG_AUDIT.Alias;
			
			TraceLog ( var_Tablename + " serial : " + var_serialNumber);
		}
		
		public string exportNames()
		{
			return "fk_usuario,tg_operacao,dt_operacao,st_observacao,fk_generic";
		}
		
		public string exportCSV()
		{
			return i_unique + str_field_sep + fk_usuario + str_field_sep + tg_operacao + str_field_sep + dt_operacao + str_field_sep + st_observacao + str_field_sep + fk_generic;
		}
		
		public void Reset()
		{
			i_unique = "0";
			fk_usuario = "0";
			tg_operacao = "0";
			dt_operacao = "1900-01-01 00:00:00";
			st_observacao = "";
			fk_generic = "0";
		
			ReleaseExclusive();
		}
		
		public void copy ( ref LOG_Audit cpy )
		{
			fk_usuario = cpy.fk_usuario;
			tg_operacao = cpy.tg_operacao;
			dt_operacao = cpy.dt_operacao;
			st_observacao = cpy.st_observacao;
			fk_generic = cpy.fk_generic;
		}
		
		public override void fetchRetrieve ( ref DB_Row row )
		{
			i_unique = row.GetField ( TB_LOG_AUDIT.i_unique );
			fk_usuario = row.GetField ( TB_LOG_AUDIT.fk_usuario );
			tg_operacao = row.GetField ( TB_LOG_AUDIT.tg_operacao );
			dt_operacao = ConvertTime ( row.GetField ( TB_LOG_AUDIT.dt_operacao ) );
			st_observacao = row.GetField ( TB_LOG_AUDIT.st_observacao );
			fk_generic = row.GetField ( TB_LOG_AUDIT.fk_generic );
		}
		
		public bool synchronize_LOG_Audit ( )
		{
			try{
			
			if ( m_hshChangedFields.Count == 0 )
				return true;
			
			StartUpdate();
		
			if ( m_hshChangedFields [ "fk_usuario" ] != null )
				m_gen_dbStatement.AddUpdate ( TB_LOG_AUDIT.fk_usuario , fk_usuario , TB_LOG_AUDIT.type_fk_usuario );
			if ( m_hshChangedFields [ "tg_operacao" ] != null )
				m_gen_dbStatement.AddUpdate ( TB_LOG_AUDIT.tg_operacao , tg_operacao , TB_LOG_AUDIT.type_tg_operacao );
			if ( m_hshChangedFields [ "dt_operacao" ] != null )
				m_gen_dbStatement.AddUpdate ( TB_LOG_AUDIT.dt_operacao , dt_operacao , TB_LOG_AUDIT.type_dt_operacao );
			if ( m_hshChangedFields [ "st_observacao" ] != null )
				m_gen_dbStatement.AddUpdate ( TB_LOG_AUDIT.st_observacao , st_observacao , TB_LOG_AUDIT.type_st_observacao );
			if ( m_hshChangedFields [ "fk_generic" ] != null )
				m_gen_dbStatement.AddUpdate ( TB_LOG_AUDIT.fk_generic , fk_generic , TB_LOG_AUDIT.type_fk_generic );
		
			m_gen_dbStatement.AddWhere ( TB_LOG_AUDIT.i_unique, i_unique, TB_LOG_AUDIT.type_i_unique );
		
			} catch ( System.Exception ex ) {
				StreamWriter wr = new StreamWriter ( 	"CRITICAL_" + var_Tablename + "_" + "_" + DateTime.Now.Year.ToString() + DateTime.Now.Month.ToString().PadLeft ( 2, '0' ) + DateTime.Now.Day.ToString().PadLeft ( 2, '0' ) + "_" + DateTime.Now.Hour.ToString().PadLeft ( 2, '0' ) + DateTime.Now.Minute.ToString().PadLeft ( 2, '0' ) + DateTime.Now.Second.ToString().PadLeft ( 2, '0' ) + ".txt" );
				wr.WriteLine ( ex.ToString() );
				wr.Flush();
				wr.Close();
			}
		
			return Update();
		}
			
		public string get_identity() { return i_unique; } 
		public string get_fk_usuario() { return fk_usuario; } 
		public string get_tg_operacao() { return tg_operacao; } 
		public string get_dt_operacao() { return dt_operacao; } 
		public string get_st_observacao() { return st_observacao; } 
		public string get_fk_generic() { return fk_generic; } 
			
		public long get_int_fk_usuario() { return Convert.ToInt64 ( fk_usuario ); } 
		public long get_int_tg_operacao() { return Convert.ToInt64 ( tg_operacao ); } 
		public long get_int_fk_generic() { return Convert.ToInt64 ( fk_generic ); } 
			
		public void set_fk_usuario ( string val ) { fk_usuario = val; m_hshChangedFields [ "fk_usuario" ]="."; } 
		public void set_tg_operacao ( string val ) { tg_operacao = val; m_hshChangedFields [ "tg_operacao" ]="."; } 
		public void set_dt_operacao ( string val ) { dt_operacao = val; m_hshChangedFields [ "dt_operacao" ]="."; } 
		public void set_st_observacao ( string val ) { st_observacao = val; m_hshChangedFields [ "st_observacao" ]="."; } 
		public void set_fk_generic ( string val ) { fk_generic = val; m_hshChangedFields [ "fk_generic" ]="."; } 
		
		public void set_fk_usuario ( long val ) { fk_usuario = Convert.ToString(val); m_hshChangedFields [ "fk_usuario" ]="."; } 
		public void set_tg_operacao ( long val ) { tg_operacao = Convert.ToString(val); m_hshChangedFields [ "tg_operacao" ]="."; } 
		public void set_fk_generic ( long val ) { fk_generic = Convert.ToString(val); m_hshChangedFields [ "fk_generic" ]="."; } 
			
		public void fieldSelection()
		{
			m_gen_dbStatement.AddSelect ( TB_LOG_AUDIT.i_unique );
			m_gen_dbStatement.AddSelect ( TB_LOG_AUDIT.fk_usuario );
			m_gen_dbStatement.AddSelect ( TB_LOG_AUDIT.tg_operacao );
			m_gen_dbStatement.AddSelect ( TB_LOG_AUDIT.dt_operacao );
			m_gen_dbStatement.AddSelect ( TB_LOG_AUDIT.st_observacao );
			m_gen_dbStatement.AddSelect ( TB_LOG_AUDIT.fk_generic );
		}
			
		public bool selectAll()
		{
			do
			{
				StartSelect();
				fieldSelection();
				
				if ( !executeQuery() )
					return false;
			}
			while ( EndSelect() == false ); // row lock
			
			return  HasRows();
		}
		
		public bool selectIdentity ( string identity )
		{
			do
			{
				StartSelect();
				fieldSelection();
			
				m_gen_dbStatement.AddWhere ( TB_LOG_AUDIT.i_unique, identity, TB_LOG_AUDIT.type_i_unique );
			
				if ( !executeQuery())
					return false;
			}
			while ( EndSelect() == false ); // row lock
			
			if ( HasRows() == true)
			{
				DB_Row row = m_db_result.GetFirstRow();
				fetchRetrieve ( ref row );
				return true;
			}
			
			return false;
		}
		
		public bool create_LOG_Audit ( )
		{
			try{
			string new_id = "";
			
			StartInsert();
			
			m_gen_dbStatement.AddValue ( TB_LOG_AUDIT.fk_usuario, fk_usuario, TB_LOG_AUDIT.type_fk_usuario );
			m_gen_dbStatement.AddValue ( TB_LOG_AUDIT.tg_operacao, tg_operacao, TB_LOG_AUDIT.type_tg_operacao );
			m_gen_dbStatement.AddValue ( TB_LOG_AUDIT.dt_operacao, dt_operacao, TB_LOG_AUDIT.type_dt_operacao );
			m_gen_dbStatement.AddValue ( TB_LOG_AUDIT.st_observacao, st_observacao, TB_LOG_AUDIT.type_st_observacao );
			m_gen_dbStatement.AddValue ( TB_LOG_AUDIT.fk_generic, fk_generic, TB_LOG_AUDIT.type_fk_generic );
			
			if ( !ExecuteScalar ( ref new_id ) )
				return false;
			
			i_unique = new_id;
			
			} catch ( System.Exception ex ) {
				StreamWriter wr = new StreamWriter ( 	"CRITICAL_" + var_Tablename + "_" + "_" + DateTime.Now.Year.ToString() + DateTime.Now.Month.ToString().PadLeft ( 2, '0' ) + DateTime.Now.Day.ToString().PadLeft ( 2, '0' ) + "_" + DateTime.Now.Hour.ToString().PadLeft ( 2, '0' ) + DateTime.Now.Minute.ToString().PadLeft ( 2, '0' ) + DateTime.Now.Second.ToString().PadLeft ( 2, '0' ) + ".txt" );
				wr.WriteLine ( ex.ToString() );
				wr.Flush();
				wr.Close();
			}
			
			return true;
		}
			
		public bool delete ( )
		{
		
			bool ret = false;
		
			try{
			StartDelete();
			
			if ( i_unique != "0" )
				m_gen_dbStatement.AddWhere ( TB_LOG_AUDIT.i_unique, i_unique, TB_LOG_AUDIT.type_i_unique );
			
			ret = Execute();
			
			} catch ( System.Exception ex ) {
				StreamWriter wr = new StreamWriter ( 	"CRITICAL_" + var_Tablename + "_" + "_" + DateTime.Now.Year.ToString() + DateTime.Now.Month.ToString().PadLeft ( 2, '0' ) + DateTime.Now.Day.ToString().PadLeft ( 2, '0' ) + "_" + DateTime.Now.Hour.ToString().PadLeft ( 2, '0' ) + DateTime.Now.Minute.ToString().PadLeft ( 2, '0' ) + DateTime.Now.Second.ToString().PadLeft ( 2, '0' ) + ".txt" );
				wr.WriteLine ( ex.ToString() );
				wr.Flush();
				wr.Close();
			}
			
			return ret; 
		}
			
		public bool select_fk_usuario ( string val_fk_usuario )
		{
			do
			{
				StartSelect();
				fieldSelection();
			
				m_gen_dbStatement.AddWhere ( TB_LOG_AUDIT.fk_usuario, val_fk_usuario , TB_LOG_AUDIT.type_fk_usuario);
			
				if ( !executeQuery() )
					return false;
			}
			while ( EndSelect() == false ); // row lock
			
			return HasRows();
		}
			
		public bool select_rows_obs ( string val_st_observacao )
		{
			do
			{
				StartSelect();
				fieldSelection();
			
				m_gen_dbStatement.AddLike ( TB_LOG_AUDIT.st_observacao, val_st_observacao , TB_LOG_AUDIT.type_st_observacao);
			
				m_gen_dbStatement.AddOrderBy ( TB_LOG_AUDIT.dt_operacao );
			
				if ( !executeQuery() )
					return false;
			}
			while ( EndSelect() == false ); // row lock
			
			return HasRows();
		}
			
		public bool select_rows_dt_ini ( string val_dt_operacao )
		{
			do
			{
				StartSelect();
				fieldSelection();
			
				m_gen_dbStatement.AddWhereGreaterEqual ( TB_LOG_AUDIT.dt_operacao, val_dt_operacao , TB_LOG_AUDIT.type_dt_operacao);
			
				if ( !executeQuery() )
					return false;
			}
			while ( EndSelect() == false ); // row lock
			
			return HasRows();
		}
			
		public bool select_rows_dt_fim ( string val_dt_operacao )
		{
			do
			{
				StartSelect();
				fieldSelection();
			
				m_gen_dbStatement.AddWhereLessThanEqual ( TB_LOG_AUDIT.dt_operacao, val_dt_operacao , TB_LOG_AUDIT.type_dt_operacao);
			
				if ( !executeQuery() )
					return false;
			}
			while ( EndSelect() == false ); // row lock
			
			return HasRows();
		}
			
		public bool select_rows_dt_ini_fim ( string val_dt_operacao, string val_dt_operacao1 )
		{
			do
			{
				StartSelect();
				fieldSelection();
			
				m_gen_dbStatement.AddWhereGreaterEqual ( TB_LOG_AUDIT.dt_operacao, val_dt_operacao , TB_LOG_AUDIT.type_dt_operacao);
				m_gen_dbStatement.AddWhereLessThanEqual ( TB_LOG_AUDIT.dt_operacao, val_dt_operacao1 , TB_LOG_AUDIT.type_dt_operacao);
			
				if ( !executeQuery() )
					return false;
			}
			while ( EndSelect() == false ); // row lock
			
			return HasRows();
		}
			
		public bool select_rows_generic ( string val_fk_generic, string val_tg_operacao )
		{
			do
			{
				StartSelect();
				fieldSelection();
			
				m_gen_dbStatement.AddWhere ( TB_LOG_AUDIT.fk_generic, val_fk_generic , TB_LOG_AUDIT.type_fk_generic);
				m_gen_dbStatement.AddWhere ( TB_LOG_AUDIT.tg_operacao, val_tg_operacao , TB_LOG_AUDIT.type_tg_operacao);
			
				if ( !executeQuery() )
					return false;
			}
			while ( EndSelect() == false ); // row lock
			
			return HasRows();
		}
		
		#if DEBUG
		
		public bool setup ( bool IsTruncate, ref string id, string var_fk_usuario, string var_tg_operacao, string var_dt_operacao, string var_st_observacao, string var_fk_generic )
		{
			if ( IsTruncate ) 
			{
				i_unique = "";
				this.delete();
			}
		
			set_fk_usuario ( var_fk_usuario );
			set_tg_operacao ( var_tg_operacao );
			set_dt_operacao ( var_dt_operacao );
			set_st_observacao ( var_st_observacao );
			set_fk_generic ( var_fk_generic );
			
			if ( create_LOG_Audit() == false )
			{
				return false;
			}
			
			id = get_identity();
			return true;
		}
		
		#endif
		
	}
}
