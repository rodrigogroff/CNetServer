// ###################################################### 
// ## SyCraf Engine Codegen                          #### 
// ###################################################### 
// ## This file is entirely written by               #### 
// ## the construction bot. DO NOT EDIT THIS FILE.   #### 
// ###################################################### 

using System;
using System.IO;
using System.Threading;
using System.Collections;

namespace SyCrafEngine
{
	public class LINK_RepasseParcela : Synchronization
	{
		private string i_unique = "0";
		private string fk_repasseLoja = "0";
		private string fk_parcela = "0";
		
		public int var_FieldCount = 3;
		
		public LINK_RepasseParcela ()
		{
			var_Serial = TB_LINK_REPASSEPARCELA.serial;
			var_Tablename = TB_LINK_REPASSEPARCELA.Alias;
		}
		
		public LINK_RepasseParcela ( Transaction trx )
		{
			AcquireTransaction ( ref trx );
			
			var_Serial = TB_LINK_REPASSEPARCELA.serial;
			var_Tablename = TB_LINK_REPASSEPARCELA.Alias;
			
			TraceLog ( var_Tablename + " serial : " + var_serialNumber);
		}
		
		public string exportNames()
		{
			return "fk_repasseLoja,fk_parcela";
		}
		
		public string exportCSV()
		{
			return i_unique + str_field_sep + fk_repasseLoja + str_field_sep + fk_parcela;
		}
		
		public void Reset()
		{
			i_unique = "0";
			fk_repasseLoja = "0";
			fk_parcela = "0";
		
			ReleaseExclusive();
		}
		
		public void copy ( ref LINK_RepasseParcela cpy )
		{
			fk_repasseLoja = cpy.fk_repasseLoja;
			fk_parcela = cpy.fk_parcela;
		}
		
		public override void fetchRetrieve ( ref DB_Row row )
		{
			i_unique = row.GetField ( TB_LINK_REPASSEPARCELA.i_unique );
			fk_repasseLoja = row.GetField ( TB_LINK_REPASSEPARCELA.fk_repasseLoja );
			fk_parcela = row.GetField ( TB_LINK_REPASSEPARCELA.fk_parcela );
		}
		
		public bool synchronize_LINK_RepasseParcela ( )
		{
			try{
			
			if ( m_hshChangedFields.Count == 0 )
				return true;
			
			StartUpdate();
		
			if ( m_hshChangedFields [ "fk_repasseLoja" ] != null )
				m_gen_dbStatement.AddUpdate ( TB_LINK_REPASSEPARCELA.fk_repasseLoja , fk_repasseLoja , TB_LINK_REPASSEPARCELA.type_fk_repasseLoja );
			if ( m_hshChangedFields [ "fk_parcela" ] != null )
				m_gen_dbStatement.AddUpdate ( TB_LINK_REPASSEPARCELA.fk_parcela , fk_parcela , TB_LINK_REPASSEPARCELA.type_fk_parcela );
		
			m_gen_dbStatement.AddWhere ( TB_LINK_REPASSEPARCELA.i_unique, i_unique, TB_LINK_REPASSEPARCELA.type_i_unique );
		
			} catch ( System.Exception ex ) {
				StreamWriter wr = new StreamWriter ( 	"CRITICAL_" + var_Tablename + "_" + "_" + DateTime.Now.Year.ToString() + DateTime.Now.Month.ToString().PadLeft ( 2, '0' ) + DateTime.Now.Day.ToString().PadLeft ( 2, '0' ) + "_" + DateTime.Now.Hour.ToString().PadLeft ( 2, '0' ) + DateTime.Now.Minute.ToString().PadLeft ( 2, '0' ) + DateTime.Now.Second.ToString().PadLeft ( 2, '0' ) + ".txt" );
				wr.WriteLine ( ex.ToString() );
				wr.Flush();
				wr.Close();
			}
		
			return Update();
		}
			
		public string get_identity() { return i_unique; } 
		public string get_fk_repasseLoja() { return fk_repasseLoja; } 
		public string get_fk_parcela() { return fk_parcela; } 
			
		public long get_int_fk_repasseLoja() { return Convert.ToInt64 ( fk_repasseLoja ); } 
		public long get_int_fk_parcela() { return Convert.ToInt64 ( fk_parcela ); } 
			
		public void set_fk_repasseLoja ( string val ) { fk_repasseLoja = val; m_hshChangedFields [ "fk_repasseLoja" ]="."; } 
		public void set_fk_parcela ( string val ) { fk_parcela = val; m_hshChangedFields [ "fk_parcela" ]="."; } 
		
		public void set_fk_repasseLoja ( long val ) { fk_repasseLoja = Convert.ToString(val); m_hshChangedFields [ "fk_repasseLoja" ]="."; } 
		public void set_fk_parcela ( long val ) { fk_parcela = Convert.ToString(val); m_hshChangedFields [ "fk_parcela" ]="."; } 
			
		public void fieldSelection()
		{
			m_gen_dbStatement.AddSelect ( TB_LINK_REPASSEPARCELA.i_unique );
			m_gen_dbStatement.AddSelect ( TB_LINK_REPASSEPARCELA.fk_repasseLoja );
			m_gen_dbStatement.AddSelect ( TB_LINK_REPASSEPARCELA.fk_parcela );
		}
			
		public bool selectAll()
		{
			do
			{
				StartSelect();
				fieldSelection();
				
				if ( !executeQuery() )
					return false;
			}
			while ( EndSelect() == false ); // row lock
			
			return  HasRows();
		}
		
		public bool selectIdentity ( string identity )
		{
			do
			{
				StartSelect();
				fieldSelection();
			
				m_gen_dbStatement.AddWhere ( TB_LINK_REPASSEPARCELA.i_unique, identity, TB_LINK_REPASSEPARCELA.type_i_unique );
			
				if ( !executeQuery())
					return false;
			}
			while ( EndSelect() == false ); // row lock
			
			if ( HasRows() == true)
			{
				DB_Row row = m_db_result.GetFirstRow();
				fetchRetrieve ( ref row );
				return true;
			}
			
			return false;
		}
		
		public bool create_LINK_RepasseParcela ( )
		{
			try{
			string new_id = "";
			
			StartInsert();
			
			m_gen_dbStatement.AddValue ( TB_LINK_REPASSEPARCELA.fk_repasseLoja, fk_repasseLoja, TB_LINK_REPASSEPARCELA.type_fk_repasseLoja );
			m_gen_dbStatement.AddValue ( TB_LINK_REPASSEPARCELA.fk_parcela, fk_parcela, TB_LINK_REPASSEPARCELA.type_fk_parcela );
			
			if ( !ExecuteScalar ( ref new_id ) )
				return false;
			
			i_unique = new_id;
			
			} catch ( System.Exception ex ) {
				StreamWriter wr = new StreamWriter ( 	"CRITICAL_" + var_Tablename + "_" + "_" + DateTime.Now.Year.ToString() + DateTime.Now.Month.ToString().PadLeft ( 2, '0' ) + DateTime.Now.Day.ToString().PadLeft ( 2, '0' ) + "_" + DateTime.Now.Hour.ToString().PadLeft ( 2, '0' ) + DateTime.Now.Minute.ToString().PadLeft ( 2, '0' ) + DateTime.Now.Second.ToString().PadLeft ( 2, '0' ) + ".txt" );
				wr.WriteLine ( ex.ToString() );
				wr.Flush();
				wr.Close();
			}
			
			return true;
		}
			
		public bool delete ( )
		{
		
			bool ret = false;
		
			try{
			StartDelete();
			
			if ( i_unique != "0" )
				m_gen_dbStatement.AddWhere ( TB_LINK_REPASSEPARCELA.i_unique, i_unique, TB_LINK_REPASSEPARCELA.type_i_unique );
			
			ret = Execute();
			
			} catch ( System.Exception ex ) {
				StreamWriter wr = new StreamWriter ( 	"CRITICAL_" + var_Tablename + "_" + "_" + DateTime.Now.Year.ToString() + DateTime.Now.Month.ToString().PadLeft ( 2, '0' ) + DateTime.Now.Day.ToString().PadLeft ( 2, '0' ) + "_" + DateTime.Now.Hour.ToString().PadLeft ( 2, '0' ) + DateTime.Now.Minute.ToString().PadLeft ( 2, '0' ) + DateTime.Now.Second.ToString().PadLeft ( 2, '0' ) + ".txt" );
				wr.WriteLine ( ex.ToString() );
				wr.Flush();
				wr.Close();
			}
			
			return ret; 
		}
			
		public bool select_fk_rep ( string val_fk_repasseLoja )
		{
			do
			{
				StartSelect();
				fieldSelection();
			
				m_gen_dbStatement.AddWhere ( TB_LINK_REPASSEPARCELA.fk_repasseLoja, val_fk_repasseLoja , TB_LINK_REPASSEPARCELA.type_fk_repasseLoja);
			
				if ( !executeQuery() )
					return false;
			}
			while ( EndSelect() == false ); // row lock
			
			return HasRows();
		}
		
		#if DEBUG
		
		public bool setup ( bool IsTruncate, ref string id, string var_fk_repasseLoja, string var_fk_parcela )
		{
			if ( IsTruncate ) 
			{
				i_unique = "";
				this.delete();
			}
		
			set_fk_repasseLoja ( var_fk_repasseLoja );
			set_fk_parcela ( var_fk_parcela );
			
			if ( create_LINK_RepasseParcela() == false )
			{
				return false;
			}
			
			id = get_identity();
			return true;
		}
		
		#endif
		
	}
}
