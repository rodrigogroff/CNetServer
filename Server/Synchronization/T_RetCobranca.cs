// ###################################################### 
// ## SyCraf Engine Codegen                          #### 
// ###################################################### 
// ## This file is entirely written by               #### 
// ## the construction bot. DO NOT EDIT THIS FILE.   #### 
// ###################################################### 

using System;
using System.IO;
using System.Threading;
using System.Collections;

namespace SyCrafEngine
{
	public class T_RetCobranca : Synchronization
	{
		private string i_unique = "0";
		private string nu_codBanco = "0";
		private string nu_cod = "0";
		private string tg_tipoCob = "";
		private string st_codMsg = "";
		
		public int var_FieldCount = 5;
		
		public T_RetCobranca ()
		{
			var_Serial = TB_T_RETCOBRANCA.serial;
			var_Tablename = TB_T_RETCOBRANCA.Alias;
		}
		
		public T_RetCobranca ( Transaction trx )
		{
			AcquireTransaction ( ref trx );
			
			var_Serial = TB_T_RETCOBRANCA.serial;
			var_Tablename = TB_T_RETCOBRANCA.Alias;
			
			TraceLog ( var_Tablename + " serial : " + var_serialNumber);
		}
		
		public string exportNames()
		{
			return "nu_codBanco,nu_cod,tg_tipoCob,st_codMsg";
		}
		
		public string exportCSV()
		{
			return i_unique + str_field_sep + nu_codBanco + str_field_sep + nu_cod + str_field_sep + tg_tipoCob + str_field_sep + st_codMsg;
		}
		
		public void Reset()
		{
			i_unique = "0";
			nu_codBanco = "0";
			nu_cod = "0";
			tg_tipoCob = "";
			st_codMsg = "";
		
			ReleaseExclusive();
		}
		
		public void copy ( ref T_RetCobranca cpy )
		{
			nu_codBanco = cpy.nu_codBanco;
			nu_cod = cpy.nu_cod;
			tg_tipoCob = cpy.tg_tipoCob;
			st_codMsg = cpy.st_codMsg;
		}
		
		public override void fetchRetrieve ( ref DB_Row row )
		{
			i_unique = row.GetField ( TB_T_RETCOBRANCA.i_unique );
			nu_codBanco = row.GetField ( TB_T_RETCOBRANCA.nu_codBanco );
			nu_cod = row.GetField ( TB_T_RETCOBRANCA.nu_cod );
			tg_tipoCob = row.GetField ( TB_T_RETCOBRANCA.tg_tipoCob );
			st_codMsg = row.GetField ( TB_T_RETCOBRANCA.st_codMsg );
		}
		
		public bool synchronize_T_RetCobranca ( )
		{
			try{
			
			if ( m_hshChangedFields.Count == 0 )
				return true;
			
			StartUpdate();
		
			if ( m_hshChangedFields [ "nu_codBanco" ] != null )
				m_gen_dbStatement.AddUpdate ( TB_T_RETCOBRANCA.nu_codBanco , nu_codBanco , TB_T_RETCOBRANCA.type_nu_codBanco );
			if ( m_hshChangedFields [ "nu_cod" ] != null )
				m_gen_dbStatement.AddUpdate ( TB_T_RETCOBRANCA.nu_cod , nu_cod , TB_T_RETCOBRANCA.type_nu_cod );
			if ( m_hshChangedFields [ "tg_tipoCob" ] != null )
				m_gen_dbStatement.AddUpdate ( TB_T_RETCOBRANCA.tg_tipoCob , tg_tipoCob , TB_T_RETCOBRANCA.type_tg_tipoCob );
			if ( m_hshChangedFields [ "st_codMsg" ] != null )
				m_gen_dbStatement.AddUpdate ( TB_T_RETCOBRANCA.st_codMsg , st_codMsg , TB_T_RETCOBRANCA.type_st_codMsg );
		
			m_gen_dbStatement.AddWhere ( TB_T_RETCOBRANCA.i_unique, i_unique, TB_T_RETCOBRANCA.type_i_unique );
		
			} catch ( System.Exception ex ) {
				StreamWriter wr = new StreamWriter ( 	"CRITICAL_" + var_Tablename + "_" + "_" + DateTime.Now.Year.ToString() + DateTime.Now.Month.ToString().PadLeft ( 2, '0' ) + DateTime.Now.Day.ToString().PadLeft ( 2, '0' ) + "_" + DateTime.Now.Hour.ToString().PadLeft ( 2, '0' ) + DateTime.Now.Minute.ToString().PadLeft ( 2, '0' ) + DateTime.Now.Second.ToString().PadLeft ( 2, '0' ) + ".txt" );
				wr.WriteLine ( ex.ToString() );
				wr.Flush();
				wr.Close();
			}
		
			return Update();
		}
			
		public string get_identity() { return i_unique; } 
		public string get_nu_codBanco() { return nu_codBanco; } 
		public string get_nu_cod() { return nu_cod; } 
		public string get_tg_tipoCob() { return tg_tipoCob; } 
		public string get_st_codMsg() { return st_codMsg; } 
			
		public long get_int_nu_codBanco() { return Convert.ToInt64 ( nu_codBanco ); } 
		public long get_int_nu_cod() { return Convert.ToInt64 ( nu_cod ); } 
			
		public void set_nu_codBanco ( string val ) { nu_codBanco = val; m_hshChangedFields [ "nu_codBanco" ]="."; } 
		public void set_nu_cod ( string val ) { nu_cod = val; m_hshChangedFields [ "nu_cod" ]="."; } 
		public void set_tg_tipoCob ( string val ) { tg_tipoCob = val; m_hshChangedFields [ "tg_tipoCob" ]="."; } 
		public void set_st_codMsg ( string val ) { st_codMsg = val; m_hshChangedFields [ "st_codMsg" ]="."; } 
		
		public void set_nu_codBanco ( long val ) { nu_codBanco = Convert.ToString(val); m_hshChangedFields [ "nu_codBanco" ]="."; } 
		public void set_nu_cod ( long val ) { nu_cod = Convert.ToString(val); m_hshChangedFields [ "nu_cod" ]="."; } 
			
		public void fieldSelection()
		{
			m_gen_dbStatement.AddSelect ( TB_T_RETCOBRANCA.i_unique );
			m_gen_dbStatement.AddSelect ( TB_T_RETCOBRANCA.nu_codBanco );
			m_gen_dbStatement.AddSelect ( TB_T_RETCOBRANCA.nu_cod );
			m_gen_dbStatement.AddSelect ( TB_T_RETCOBRANCA.tg_tipoCob );
			m_gen_dbStatement.AddSelect ( TB_T_RETCOBRANCA.st_codMsg );
		}
			
		public bool selectAll()
		{
			do
			{
				StartSelect();
				fieldSelection();
				
				if ( !executeQuery() )
					return false;
			}
			while ( EndSelect() == false ); // row lock
			
			return  HasRows();
		}
		
		public bool selectIdentity ( string identity )
		{
			do
			{
				StartSelect();
				fieldSelection();
			
				m_gen_dbStatement.AddWhere ( TB_T_RETCOBRANCA.i_unique, identity, TB_T_RETCOBRANCA.type_i_unique );
			
				if ( !executeQuery())
					return false;
			}
			while ( EndSelect() == false ); // row lock
			
			if ( HasRows() == true)
			{
				DB_Row row = m_db_result.GetFirstRow();
				fetchRetrieve ( ref row );
				return true;
			}
			
			return false;
		}
		
		public bool create_T_RetCobranca ( )
		{
			try{
			string new_id = "";
			
			StartInsert();
			
			m_gen_dbStatement.AddValue ( TB_T_RETCOBRANCA.nu_codBanco, nu_codBanco, TB_T_RETCOBRANCA.type_nu_codBanco );
			m_gen_dbStatement.AddValue ( TB_T_RETCOBRANCA.nu_cod, nu_cod, TB_T_RETCOBRANCA.type_nu_cod );
			m_gen_dbStatement.AddValue ( TB_T_RETCOBRANCA.tg_tipoCob, tg_tipoCob, TB_T_RETCOBRANCA.type_tg_tipoCob );
			m_gen_dbStatement.AddValue ( TB_T_RETCOBRANCA.st_codMsg, st_codMsg, TB_T_RETCOBRANCA.type_st_codMsg );
			
			if ( !ExecuteScalar ( ref new_id ) )
				return false;
			
			i_unique = new_id;
			
			} catch ( System.Exception ex ) {
				StreamWriter wr = new StreamWriter ( 	"CRITICAL_" + var_Tablename + "_" + "_" + DateTime.Now.Year.ToString() + DateTime.Now.Month.ToString().PadLeft ( 2, '0' ) + DateTime.Now.Day.ToString().PadLeft ( 2, '0' ) + "_" + DateTime.Now.Hour.ToString().PadLeft ( 2, '0' ) + DateTime.Now.Minute.ToString().PadLeft ( 2, '0' ) + DateTime.Now.Second.ToString().PadLeft ( 2, '0' ) + ".txt" );
				wr.WriteLine ( ex.ToString() );
				wr.Flush();
				wr.Close();
			}
			
			return true;
		}
			
		public bool delete ( )
		{
		
			bool ret = false;
		
			try{
			StartDelete();
			
			if ( i_unique != "0" )
				m_gen_dbStatement.AddWhere ( TB_T_RETCOBRANCA.i_unique, i_unique, TB_T_RETCOBRANCA.type_i_unique );
			
			ret = Execute();
			
			} catch ( System.Exception ex ) {
				StreamWriter wr = new StreamWriter ( 	"CRITICAL_" + var_Tablename + "_" + "_" + DateTime.Now.Year.ToString() + DateTime.Now.Month.ToString().PadLeft ( 2, '0' ) + DateTime.Now.Day.ToString().PadLeft ( 2, '0' ) + "_" + DateTime.Now.Hour.ToString().PadLeft ( 2, '0' ) + DateTime.Now.Minute.ToString().PadLeft ( 2, '0' ) + DateTime.Now.Second.ToString().PadLeft ( 2, '0' ) + ".txt" );
				wr.WriteLine ( ex.ToString() );
				wr.Flush();
				wr.Close();
			}
			
			return ret; 
		}
			
		public bool select_rows_cod ( string val_nu_codBanco, string val_nu_cod, string val_tg_tipoCob )
		{
			do
			{
				StartSelect();
				fieldSelection();
			
				m_gen_dbStatement.AddWhere ( TB_T_RETCOBRANCA.nu_codBanco, val_nu_codBanco , TB_T_RETCOBRANCA.type_nu_codBanco);
				m_gen_dbStatement.AddWhere ( TB_T_RETCOBRANCA.nu_cod, val_nu_cod , TB_T_RETCOBRANCA.type_nu_cod);
				m_gen_dbStatement.AddWhere ( TB_T_RETCOBRANCA.tg_tipoCob, val_tg_tipoCob , TB_T_RETCOBRANCA.type_tg_tipoCob);
			
				if ( !executeQuery() )
					return false;
			}
			while ( EndSelect() == false ); // row lock
			
			return HasRows();
		}
		
		#if DEBUG
		
		public bool setup ( bool IsTruncate, ref string id, string var_nu_codBanco, string var_nu_cod, string var_tg_tipoCob, string var_st_codMsg )
		{
			if ( IsTruncate ) 
			{
				i_unique = "";
				this.delete();
			}
		
			set_nu_codBanco ( var_nu_codBanco );
			set_nu_cod ( var_nu_cod );
			set_tg_tipoCob ( var_tg_tipoCob );
			set_st_codMsg ( var_st_codMsg );
			
			if ( create_T_RetCobranca() == false )
			{
				return false;
			}
			
			id = get_identity();
			return true;
		}
		
		#endif
		
	}
}
