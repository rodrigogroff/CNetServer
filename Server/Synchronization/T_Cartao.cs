// ###################################################### 
// ## SyCraf Engine Codegen                          #### 
// ###################################################### 
// ## This file is entirely written by               #### 
// ## the construction bot. DO NOT EDIT THIS FILE.   #### 
// ###################################################### 

using System;
using System.IO;
using System.Threading;
using System.Collections;

namespace SyCrafEngine
{
	public class T_Cartao : Synchronization
	{
		private string i_unique = "0";
		private string st_empresa = "";
		private string st_matricula = "";
		private string st_titularidade = "";
		private string st_senha = "";
		private string tg_tipoCartao = "";
		private string st_venctoCartao = "";
		private string tg_status = "";
		private string dt_utlPagto = "1900-01-01 00:00:00";
		private string nu_senhaErrada = "0";
		private string dt_inclusao = "1900-01-01 00:00:00";
		private string dt_bloqueio = "1900-01-01 00:00:00";
		private string tg_motivoBloqueio = "";
		private string st_banco = "";
		private string st_agencia = "";
		private string st_conta = "";
		private string st_matriculaExtra = "";
		private string st_celCartao = "";
		private string fk_dadosProprietario = "0";
		private string fk_infoAdicionais = "0";
		private string nu_viaCartao = "0";
		private string vr_limiteTotal = "0";
		private string vr_limiteMensal = "0";
		private string vr_limiteRotativo = "0";
		private string vr_extraCota = "0";
		private string vr_educacional = "0";
		private string vr_disp_educacional = "0";
		private string vr_edu_diario = "0";
		private string st_aluno = "";
		private string tg_emitido = "0";
		private string vr_edu_disp_virtual = "0";
		private string nu_rankVirtual = "0";
		private string vr_edu_total_ranking = "0";
		private string nu_webSenhaErrada = "0";
		private string tg_semanaCompleta = "0";
		private string tg_excluido = "0";
		
		public int var_FieldCount = 36;
		
		public T_Cartao ()
		{
			var_Serial = TB_T_CARTAO.serial;
			var_Tablename = TB_T_CARTAO.Alias;
		}
		
		public T_Cartao ( Transaction trx )
		{
			AcquireTransaction ( ref trx );
			
			var_Serial = TB_T_CARTAO.serial;
			var_Tablename = TB_T_CARTAO.Alias;
			
			TraceLog ( var_Tablename + " serial : " + var_serialNumber);
		}
		
		public string exportNames()
		{
			return "st_empresa,st_matricula,st_titularidade,st_senha,tg_tipoCartao,st_venctoCartao,tg_status,dt_utlPagto,nu_senhaErrada,dt_inclusao,dt_bloqueio,tg_motivoBloqueio,st_banco,st_agencia,st_conta,st_matriculaExtra,st_celCartao,fk_dadosProprietario,fk_infoAdicionais,nu_viaCartao,vr_limiteTotal,vr_limiteMensal,vr_limiteRotativo,vr_extraCota,vr_educacional,vr_disp_educacional,vr_edu_diario,st_aluno,tg_emitido,vr_edu_disp_virtual,nu_rankVirtual,vr_edu_total_ranking,nu_webSenhaErrada,tg_semanaCompleta,tg_excluido";
		}
		
		public string exportCSV()
		{
			return i_unique + str_field_sep + st_empresa + str_field_sep + st_matricula + str_field_sep + st_titularidade + str_field_sep + st_senha + str_field_sep + tg_tipoCartao + str_field_sep + st_venctoCartao + str_field_sep + tg_status + str_field_sep + dt_utlPagto + str_field_sep + nu_senhaErrada + str_field_sep + dt_inclusao + str_field_sep + dt_bloqueio + str_field_sep + tg_motivoBloqueio + str_field_sep + st_banco + str_field_sep + st_agencia + str_field_sep + st_conta + str_field_sep + st_matriculaExtra + str_field_sep + st_celCartao + str_field_sep + fk_dadosProprietario + str_field_sep + fk_infoAdicionais + str_field_sep + nu_viaCartao + str_field_sep + vr_limiteTotal + str_field_sep + vr_limiteMensal + str_field_sep + vr_limiteRotativo + str_field_sep + vr_extraCota + str_field_sep + vr_educacional + str_field_sep + vr_disp_educacional + str_field_sep + vr_edu_diario + str_field_sep + st_aluno + str_field_sep + tg_emitido + str_field_sep + vr_edu_disp_virtual + str_field_sep + nu_rankVirtual + str_field_sep + vr_edu_total_ranking + str_field_sep + nu_webSenhaErrada + str_field_sep + tg_semanaCompleta + str_field_sep + tg_excluido;
		}
		
		public void Reset()
		{
			i_unique = "0";
			st_empresa = "";
			st_matricula = "";
			st_titularidade = "";
			st_senha = "";
			tg_tipoCartao = "";
			st_venctoCartao = "";
			tg_status = "";
			dt_utlPagto = "1900-01-01 00:00:00";
			nu_senhaErrada = "0";
			dt_inclusao = "1900-01-01 00:00:00";
			dt_bloqueio = "1900-01-01 00:00:00";
			tg_motivoBloqueio = "";
			st_banco = "";
			st_agencia = "";
			st_conta = "";
			st_matriculaExtra = "";
			st_celCartao = "";
			fk_dadosProprietario = "0";
			fk_infoAdicionais = "0";
			nu_viaCartao = "0";
			vr_limiteTotal = "0";
			vr_limiteMensal = "0";
			vr_limiteRotativo = "0";
			vr_extraCota = "0";
			vr_educacional = "0";
			vr_disp_educacional = "0";
			vr_edu_diario = "0";
			st_aluno = "";
			tg_emitido = "0";
			vr_edu_disp_virtual = "0";
			nu_rankVirtual = "0";
			vr_edu_total_ranking = "0";
			nu_webSenhaErrada = "0";
			tg_semanaCompleta = "0";
			tg_excluido = "0";
		
			ReleaseExclusive();
		}
		
		public void copy ( ref T_Cartao cpy )
		{
			st_empresa = cpy.st_empresa;
			st_matricula = cpy.st_matricula;
			st_titularidade = cpy.st_titularidade;
			st_senha = cpy.st_senha;
			tg_tipoCartao = cpy.tg_tipoCartao;
			st_venctoCartao = cpy.st_venctoCartao;
			tg_status = cpy.tg_status;
			dt_utlPagto = cpy.dt_utlPagto;
			nu_senhaErrada = cpy.nu_senhaErrada;
			dt_inclusao = cpy.dt_inclusao;
			dt_bloqueio = cpy.dt_bloqueio;
			tg_motivoBloqueio = cpy.tg_motivoBloqueio;
			st_banco = cpy.st_banco;
			st_agencia = cpy.st_agencia;
			st_conta = cpy.st_conta;
			st_matriculaExtra = cpy.st_matriculaExtra;
			st_celCartao = cpy.st_celCartao;
			fk_dadosProprietario = cpy.fk_dadosProprietario;
			fk_infoAdicionais = cpy.fk_infoAdicionais;
			nu_viaCartao = cpy.nu_viaCartao;
			vr_limiteTotal = cpy.vr_limiteTotal;
			vr_limiteMensal = cpy.vr_limiteMensal;
			vr_limiteRotativo = cpy.vr_limiteRotativo;
			vr_extraCota = cpy.vr_extraCota;
			vr_educacional = cpy.vr_educacional;
			vr_disp_educacional = cpy.vr_disp_educacional;
			vr_edu_diario = cpy.vr_edu_diario;
			st_aluno = cpy.st_aluno;
			tg_emitido = cpy.tg_emitido;
			vr_edu_disp_virtual = cpy.vr_edu_disp_virtual;
			nu_rankVirtual = cpy.nu_rankVirtual;
			vr_edu_total_ranking = cpy.vr_edu_total_ranking;
			nu_webSenhaErrada = cpy.nu_webSenhaErrada;
			tg_semanaCompleta = cpy.tg_semanaCompleta;
			tg_excluido = cpy.tg_excluido;
		}
		
		public override void fetchRetrieve ( ref DB_Row row )
		{
			i_unique = row.GetField ( TB_T_CARTAO.i_unique );
			st_empresa = row.GetField ( TB_T_CARTAO.st_empresa );
			st_matricula = row.GetField ( TB_T_CARTAO.st_matricula );
			st_titularidade = row.GetField ( TB_T_CARTAO.st_titularidade );
			st_senha = row.GetField ( TB_T_CARTAO.st_senha );
			tg_tipoCartao = row.GetField ( TB_T_CARTAO.tg_tipoCartao );
			st_venctoCartao = row.GetField ( TB_T_CARTAO.st_venctoCartao );
			tg_status = row.GetField ( TB_T_CARTAO.tg_status );
			dt_utlPagto = ConvertTime ( row.GetField ( TB_T_CARTAO.dt_utlPagto ) );
			nu_senhaErrada = row.GetField ( TB_T_CARTAO.nu_senhaErrada );
			dt_inclusao = ConvertTime ( row.GetField ( TB_T_CARTAO.dt_inclusao ) );
			dt_bloqueio = ConvertTime ( row.GetField ( TB_T_CARTAO.dt_bloqueio ) );
			tg_motivoBloqueio = row.GetField ( TB_T_CARTAO.tg_motivoBloqueio );
			st_banco = row.GetField ( TB_T_CARTAO.st_banco );
			st_agencia = row.GetField ( TB_T_CARTAO.st_agencia );
			st_conta = row.GetField ( TB_T_CARTAO.st_conta );
			st_matriculaExtra = row.GetField ( TB_T_CARTAO.st_matriculaExtra );
			st_celCartao = row.GetField ( TB_T_CARTAO.st_celCartao );
			fk_dadosProprietario = row.GetField ( TB_T_CARTAO.fk_dadosProprietario );
			fk_infoAdicionais = row.GetField ( TB_T_CARTAO.fk_infoAdicionais );
			nu_viaCartao = row.GetField ( TB_T_CARTAO.nu_viaCartao );
			vr_limiteTotal = row.GetField ( TB_T_CARTAO.vr_limiteTotal );
			vr_limiteMensal = row.GetField ( TB_T_CARTAO.vr_limiteMensal );
			vr_limiteRotativo = row.GetField ( TB_T_CARTAO.vr_limiteRotativo );
			vr_extraCota = row.GetField ( TB_T_CARTAO.vr_extraCota );
			vr_educacional = row.GetField ( TB_T_CARTAO.vr_educacional );
			vr_disp_educacional = row.GetField ( TB_T_CARTAO.vr_disp_educacional );
			vr_edu_diario = row.GetField ( TB_T_CARTAO.vr_edu_diario );
			st_aluno = row.GetField ( TB_T_CARTAO.st_aluno );
			tg_emitido = row.GetField ( TB_T_CARTAO.tg_emitido );
			vr_edu_disp_virtual = row.GetField ( TB_T_CARTAO.vr_edu_disp_virtual );
			nu_rankVirtual = row.GetField ( TB_T_CARTAO.nu_rankVirtual );
			vr_edu_total_ranking = row.GetField ( TB_T_CARTAO.vr_edu_total_ranking );
			nu_webSenhaErrada = row.GetField ( TB_T_CARTAO.nu_webSenhaErrada );
			tg_semanaCompleta = row.GetField ( TB_T_CARTAO.tg_semanaCompleta );
			tg_excluido = row.GetField ( TB_T_CARTAO.tg_excluido );
		}
		
		public bool synchronize_T_Cartao ( )
		{
			try{
			
			if ( m_hshChangedFields.Count == 0 )
				return true;
			
			StartUpdate();
		
			if ( m_hshChangedFields [ "st_empresa" ] != null )
				m_gen_dbStatement.AddUpdate ( TB_T_CARTAO.st_empresa , st_empresa , TB_T_CARTAO.type_st_empresa );
			if ( m_hshChangedFields [ "st_matricula" ] != null )
				m_gen_dbStatement.AddUpdate ( TB_T_CARTAO.st_matricula , st_matricula , TB_T_CARTAO.type_st_matricula );
			if ( m_hshChangedFields [ "st_titularidade" ] != null )
				m_gen_dbStatement.AddUpdate ( TB_T_CARTAO.st_titularidade , st_titularidade , TB_T_CARTAO.type_st_titularidade );
			if ( m_hshChangedFields [ "st_senha" ] != null )
				m_gen_dbStatement.AddUpdate ( TB_T_CARTAO.st_senha , st_senha , TB_T_CARTAO.type_st_senha );
			if ( m_hshChangedFields [ "tg_tipoCartao" ] != null )
				m_gen_dbStatement.AddUpdate ( TB_T_CARTAO.tg_tipoCartao , tg_tipoCartao , TB_T_CARTAO.type_tg_tipoCartao );
			if ( m_hshChangedFields [ "st_venctoCartao" ] != null )
				m_gen_dbStatement.AddUpdate ( TB_T_CARTAO.st_venctoCartao , st_venctoCartao , TB_T_CARTAO.type_st_venctoCartao );
			if ( m_hshChangedFields [ "tg_status" ] != null )
				m_gen_dbStatement.AddUpdate ( TB_T_CARTAO.tg_status , tg_status , TB_T_CARTAO.type_tg_status );
			if ( m_hshChangedFields [ "dt_utlPagto" ] != null )
				m_gen_dbStatement.AddUpdate ( TB_T_CARTAO.dt_utlPagto , dt_utlPagto , TB_T_CARTAO.type_dt_utlPagto );
			if ( m_hshChangedFields [ "nu_senhaErrada" ] != null )
				m_gen_dbStatement.AddUpdate ( TB_T_CARTAO.nu_senhaErrada , nu_senhaErrada , TB_T_CARTAO.type_nu_senhaErrada );
			if ( m_hshChangedFields [ "dt_inclusao" ] != null )
				m_gen_dbStatement.AddUpdate ( TB_T_CARTAO.dt_inclusao , dt_inclusao , TB_T_CARTAO.type_dt_inclusao );
			if ( m_hshChangedFields [ "dt_bloqueio" ] != null )
				m_gen_dbStatement.AddUpdate ( TB_T_CARTAO.dt_bloqueio , dt_bloqueio , TB_T_CARTAO.type_dt_bloqueio );
			if ( m_hshChangedFields [ "tg_motivoBloqueio" ] != null )
				m_gen_dbStatement.AddUpdate ( TB_T_CARTAO.tg_motivoBloqueio , tg_motivoBloqueio , TB_T_CARTAO.type_tg_motivoBloqueio );
			if ( m_hshChangedFields [ "st_banco" ] != null )
				m_gen_dbStatement.AddUpdate ( TB_T_CARTAO.st_banco , st_banco , TB_T_CARTAO.type_st_banco );
			if ( m_hshChangedFields [ "st_agencia" ] != null )
				m_gen_dbStatement.AddUpdate ( TB_T_CARTAO.st_agencia , st_agencia , TB_T_CARTAO.type_st_agencia );
			if ( m_hshChangedFields [ "st_conta" ] != null )
				m_gen_dbStatement.AddUpdate ( TB_T_CARTAO.st_conta , st_conta , TB_T_CARTAO.type_st_conta );
			if ( m_hshChangedFields [ "st_matriculaExtra" ] != null )
				m_gen_dbStatement.AddUpdate ( TB_T_CARTAO.st_matriculaExtra , st_matriculaExtra , TB_T_CARTAO.type_st_matriculaExtra );
			if ( m_hshChangedFields [ "st_celCartao" ] != null )
				m_gen_dbStatement.AddUpdate ( TB_T_CARTAO.st_celCartao , st_celCartao , TB_T_CARTAO.type_st_celCartao );
			if ( m_hshChangedFields [ "fk_dadosProprietario" ] != null )
				m_gen_dbStatement.AddUpdate ( TB_T_CARTAO.fk_dadosProprietario , fk_dadosProprietario , TB_T_CARTAO.type_fk_dadosProprietario );
			if ( m_hshChangedFields [ "fk_infoAdicionais" ] != null )
				m_gen_dbStatement.AddUpdate ( TB_T_CARTAO.fk_infoAdicionais , fk_infoAdicionais , TB_T_CARTAO.type_fk_infoAdicionais );
			if ( m_hshChangedFields [ "nu_viaCartao" ] != null )
				m_gen_dbStatement.AddUpdate ( TB_T_CARTAO.nu_viaCartao , nu_viaCartao , TB_T_CARTAO.type_nu_viaCartao );
			if ( m_hshChangedFields [ "vr_limiteTotal" ] != null )
				m_gen_dbStatement.AddUpdate ( TB_T_CARTAO.vr_limiteTotal , vr_limiteTotal , TB_T_CARTAO.type_vr_limiteTotal );
			if ( m_hshChangedFields [ "vr_limiteMensal" ] != null )
				m_gen_dbStatement.AddUpdate ( TB_T_CARTAO.vr_limiteMensal , vr_limiteMensal , TB_T_CARTAO.type_vr_limiteMensal );
			if ( m_hshChangedFields [ "vr_limiteRotativo" ] != null )
				m_gen_dbStatement.AddUpdate ( TB_T_CARTAO.vr_limiteRotativo , vr_limiteRotativo , TB_T_CARTAO.type_vr_limiteRotativo );
			if ( m_hshChangedFields [ "vr_extraCota" ] != null )
				m_gen_dbStatement.AddUpdate ( TB_T_CARTAO.vr_extraCota , vr_extraCota , TB_T_CARTAO.type_vr_extraCota );
			if ( m_hshChangedFields [ "vr_educacional" ] != null )
				m_gen_dbStatement.AddUpdate ( TB_T_CARTAO.vr_educacional , vr_educacional , TB_T_CARTAO.type_vr_educacional );
			if ( m_hshChangedFields [ "vr_disp_educacional" ] != null )
				m_gen_dbStatement.AddUpdate ( TB_T_CARTAO.vr_disp_educacional , vr_disp_educacional , TB_T_CARTAO.type_vr_disp_educacional );
			if ( m_hshChangedFields [ "vr_edu_diario" ] != null )
				m_gen_dbStatement.AddUpdate ( TB_T_CARTAO.vr_edu_diario , vr_edu_diario , TB_T_CARTAO.type_vr_edu_diario );
			if ( m_hshChangedFields [ "st_aluno" ] != null )
				m_gen_dbStatement.AddUpdate ( TB_T_CARTAO.st_aluno , st_aluno , TB_T_CARTAO.type_st_aluno );
			if ( m_hshChangedFields [ "tg_emitido" ] != null )
				m_gen_dbStatement.AddUpdate ( TB_T_CARTAO.tg_emitido , tg_emitido , TB_T_CARTAO.type_tg_emitido );
			if ( m_hshChangedFields [ "vr_edu_disp_virtual" ] != null )
				m_gen_dbStatement.AddUpdate ( TB_T_CARTAO.vr_edu_disp_virtual , vr_edu_disp_virtual , TB_T_CARTAO.type_vr_edu_disp_virtual );
			if ( m_hshChangedFields [ "nu_rankVirtual" ] != null )
				m_gen_dbStatement.AddUpdate ( TB_T_CARTAO.nu_rankVirtual , nu_rankVirtual , TB_T_CARTAO.type_nu_rankVirtual );
			if ( m_hshChangedFields [ "vr_edu_total_ranking" ] != null )
				m_gen_dbStatement.AddUpdate ( TB_T_CARTAO.vr_edu_total_ranking , vr_edu_total_ranking , TB_T_CARTAO.type_vr_edu_total_ranking );
			if ( m_hshChangedFields [ "nu_webSenhaErrada" ] != null )
				m_gen_dbStatement.AddUpdate ( TB_T_CARTAO.nu_webSenhaErrada , nu_webSenhaErrada , TB_T_CARTAO.type_nu_webSenhaErrada );
			if ( m_hshChangedFields [ "tg_semanaCompleta" ] != null )
				m_gen_dbStatement.AddUpdate ( TB_T_CARTAO.tg_semanaCompleta , tg_semanaCompleta , TB_T_CARTAO.type_tg_semanaCompleta );
			if ( m_hshChangedFields [ "tg_excluido" ] != null )
				m_gen_dbStatement.AddUpdate ( TB_T_CARTAO.tg_excluido , tg_excluido , TB_T_CARTAO.type_tg_excluido );
		
			m_gen_dbStatement.AddWhere ( TB_T_CARTAO.i_unique, i_unique, TB_T_CARTAO.type_i_unique );
		
			} catch ( System.Exception ex ) {
				StreamWriter wr = new StreamWriter ( 	"CRITICAL_" + var_Tablename + "_" + "_" + DateTime.Now.Year.ToString() + DateTime.Now.Month.ToString().PadLeft ( 2, '0' ) + DateTime.Now.Day.ToString().PadLeft ( 2, '0' ) + "_" + DateTime.Now.Hour.ToString().PadLeft ( 2, '0' ) + DateTime.Now.Minute.ToString().PadLeft ( 2, '0' ) + DateTime.Now.Second.ToString().PadLeft ( 2, '0' ) + ".txt" );
				wr.WriteLine ( ex.ToString() );
				wr.Flush();
				wr.Close();
			}
		
			return Update();
		}
			
		public string get_identity() { return i_unique; } 
		public string get_st_empresa() { return st_empresa; } 
		public string get_st_matricula() { return st_matricula; } 
		public string get_st_titularidade() { return st_titularidade; } 
		public string get_st_senha() { return st_senha; } 
		public string get_tg_tipoCartao() { return tg_tipoCartao; } 
		public string get_st_venctoCartao() { return st_venctoCartao; } 
		public string get_tg_status() { return tg_status; } 
		public string get_dt_utlPagto() { return dt_utlPagto; } 
		public string get_nu_senhaErrada() { return nu_senhaErrada; } 
		public string get_dt_inclusao() { return dt_inclusao; } 
		public string get_dt_bloqueio() { return dt_bloqueio; } 
		public string get_tg_motivoBloqueio() { return tg_motivoBloqueio; } 
		public string get_st_banco() { return st_banco; } 
		public string get_st_agencia() { return st_agencia; } 
		public string get_st_conta() { return st_conta; } 
		public string get_st_matriculaExtra() { return st_matriculaExtra; } 
		public string get_st_celCartao() { return st_celCartao; } 
		public string get_fk_dadosProprietario() { return fk_dadosProprietario; } 
		public string get_fk_infoAdicionais() { return fk_infoAdicionais; } 
		public string get_nu_viaCartao() { return nu_viaCartao; } 
		public string get_vr_limiteTotal() { return vr_limiteTotal; } 
		public string get_vr_limiteMensal() { return vr_limiteMensal; } 
		public string get_vr_limiteRotativo() { return vr_limiteRotativo; } 
		public string get_vr_extraCota() { return vr_extraCota; } 
		public string get_vr_educacional() { return vr_educacional; } 
		public string get_vr_disp_educacional() { return vr_disp_educacional; } 
		public string get_vr_edu_diario() { return vr_edu_diario; } 
		public string get_st_aluno() { return st_aluno; } 
		public string get_tg_emitido() { return tg_emitido; } 
		public string get_vr_edu_disp_virtual() { return vr_edu_disp_virtual; } 
		public string get_nu_rankVirtual() { return nu_rankVirtual; } 
		public string get_vr_edu_total_ranking() { return vr_edu_total_ranking; } 
		public string get_nu_webSenhaErrada() { return nu_webSenhaErrada; } 
		public string get_tg_semanaCompleta() { return tg_semanaCompleta; } 
		public string get_tg_excluido() { return tg_excluido; } 
			
		public long get_int_nu_senhaErrada() { return Convert.ToInt64 ( nu_senhaErrada ); } 
		public long get_int_fk_dadosProprietario() { return Convert.ToInt64 ( fk_dadosProprietario ); } 
		public long get_int_fk_infoAdicionais() { return Convert.ToInt64 ( fk_infoAdicionais ); } 
		public long get_int_nu_viaCartao() { return Convert.ToInt64 ( nu_viaCartao ); } 
		public long get_int_vr_limiteTotal() { return Convert.ToInt64 ( vr_limiteTotal ); } 
		public long get_int_vr_limiteMensal() { return Convert.ToInt64 ( vr_limiteMensal ); } 
		public long get_int_vr_limiteRotativo() { return Convert.ToInt64 ( vr_limiteRotativo ); } 
		public long get_int_vr_extraCota() { return Convert.ToInt64 ( vr_extraCota ); } 
		public long get_int_vr_educacional() { return Convert.ToInt64 ( vr_educacional ); } 
		public long get_int_vr_disp_educacional() { return Convert.ToInt64 ( vr_disp_educacional ); } 
		public long get_int_vr_edu_diario() { return Convert.ToInt64 ( vr_edu_diario ); } 
		public long get_int_tg_emitido() { return Convert.ToInt64 ( tg_emitido ); } 
		public long get_int_vr_edu_disp_virtual() { return Convert.ToInt64 ( vr_edu_disp_virtual ); } 
		public long get_int_nu_rankVirtual() { return Convert.ToInt64 ( nu_rankVirtual ); } 
		public long get_int_vr_edu_total_ranking() { return Convert.ToInt64 ( vr_edu_total_ranking ); } 
		public long get_int_nu_webSenhaErrada() { return Convert.ToInt64 ( nu_webSenhaErrada ); } 
		public long get_int_tg_semanaCompleta() { return Convert.ToInt64 ( tg_semanaCompleta ); } 
		public long get_int_tg_excluido() { return Convert.ToInt64 ( tg_excluido ); } 
			
		public void set_st_empresa ( string val ) { st_empresa = val; m_hshChangedFields [ "st_empresa" ]="."; } 
		public void set_st_matricula ( string val ) { st_matricula = val; m_hshChangedFields [ "st_matricula" ]="."; } 
		public void set_st_titularidade ( string val ) { st_titularidade = val; m_hshChangedFields [ "st_titularidade" ]="."; } 
		public void set_st_senha ( string val ) { st_senha = val; m_hshChangedFields [ "st_senha" ]="."; } 
		public void set_tg_tipoCartao ( string val ) { tg_tipoCartao = val; m_hshChangedFields [ "tg_tipoCartao" ]="."; } 
		public void set_st_venctoCartao ( string val ) { st_venctoCartao = val; m_hshChangedFields [ "st_venctoCartao" ]="."; } 
		public void set_tg_status ( string val ) { tg_status = val; m_hshChangedFields [ "tg_status" ]="."; } 
		public void set_dt_utlPagto ( string val ) { dt_utlPagto = val; m_hshChangedFields [ "dt_utlPagto" ]="."; } 
		public void set_nu_senhaErrada ( string val ) { nu_senhaErrada = val; m_hshChangedFields [ "nu_senhaErrada" ]="."; } 
		public void set_dt_inclusao ( string val ) { dt_inclusao = val; m_hshChangedFields [ "dt_inclusao" ]="."; } 
		public void set_dt_bloqueio ( string val ) { dt_bloqueio = val; m_hshChangedFields [ "dt_bloqueio" ]="."; } 
		public void set_tg_motivoBloqueio ( string val ) { tg_motivoBloqueio = val; m_hshChangedFields [ "tg_motivoBloqueio" ]="."; } 
		public void set_st_banco ( string val ) { st_banco = val; m_hshChangedFields [ "st_banco" ]="."; } 
		public void set_st_agencia ( string val ) { st_agencia = val; m_hshChangedFields [ "st_agencia" ]="."; } 
		public void set_st_conta ( string val ) { st_conta = val; m_hshChangedFields [ "st_conta" ]="."; } 
		public void set_st_matriculaExtra ( string val ) { st_matriculaExtra = val; m_hshChangedFields [ "st_matriculaExtra" ]="."; } 
		public void set_st_celCartao ( string val ) { st_celCartao = val; m_hshChangedFields [ "st_celCartao" ]="."; } 
		public void set_fk_dadosProprietario ( string val ) { fk_dadosProprietario = val; m_hshChangedFields [ "fk_dadosProprietario" ]="."; } 
		public void set_fk_infoAdicionais ( string val ) { fk_infoAdicionais = val; m_hshChangedFields [ "fk_infoAdicionais" ]="."; } 
		public void set_nu_viaCartao ( string val ) { nu_viaCartao = val; m_hshChangedFields [ "nu_viaCartao" ]="."; } 
		public void set_vr_limiteTotal ( string val ) { vr_limiteTotal = val; m_hshChangedFields [ "vr_limiteTotal" ]="."; } 
		public void set_vr_limiteMensal ( string val ) { vr_limiteMensal = val; m_hshChangedFields [ "vr_limiteMensal" ]="."; } 
		public void set_vr_limiteRotativo ( string val ) { vr_limiteRotativo = val; m_hshChangedFields [ "vr_limiteRotativo" ]="."; } 
		public void set_vr_extraCota ( string val ) { vr_extraCota = val; m_hshChangedFields [ "vr_extraCota" ]="."; } 
		public void set_vr_educacional ( string val ) { vr_educacional = val; m_hshChangedFields [ "vr_educacional" ]="."; } 
		public void set_vr_disp_educacional ( string val ) { vr_disp_educacional = val; m_hshChangedFields [ "vr_disp_educacional" ]="."; } 
		public void set_vr_edu_diario ( string val ) { vr_edu_diario = val; m_hshChangedFields [ "vr_edu_diario" ]="."; } 
		public void set_st_aluno ( string val ) { st_aluno = val; m_hshChangedFields [ "st_aluno" ]="."; } 
		public void set_tg_emitido ( string val ) { tg_emitido = val; m_hshChangedFields [ "tg_emitido" ]="."; } 
		public void set_vr_edu_disp_virtual ( string val ) { vr_edu_disp_virtual = val; m_hshChangedFields [ "vr_edu_disp_virtual" ]="."; } 
		public void set_nu_rankVirtual ( string val ) { nu_rankVirtual = val; m_hshChangedFields [ "nu_rankVirtual" ]="."; } 
		public void set_vr_edu_total_ranking ( string val ) { vr_edu_total_ranking = val; m_hshChangedFields [ "vr_edu_total_ranking" ]="."; } 
		public void set_nu_webSenhaErrada ( string val ) { nu_webSenhaErrada = val; m_hshChangedFields [ "nu_webSenhaErrada" ]="."; } 
		public void set_tg_semanaCompleta ( string val ) { tg_semanaCompleta = val; m_hshChangedFields [ "tg_semanaCompleta" ]="."; } 
		public void set_tg_excluido ( string val ) { tg_excluido = val; m_hshChangedFields [ "tg_excluido" ]="."; } 
		
		public void set_nu_senhaErrada ( long val ) { nu_senhaErrada = Convert.ToString(val); m_hshChangedFields [ "nu_senhaErrada" ]="."; } 
		public void set_fk_dadosProprietario ( long val ) { fk_dadosProprietario = Convert.ToString(val); m_hshChangedFields [ "fk_dadosProprietario" ]="."; } 
		public void set_fk_infoAdicionais ( long val ) { fk_infoAdicionais = Convert.ToString(val); m_hshChangedFields [ "fk_infoAdicionais" ]="."; } 
		public void set_nu_viaCartao ( long val ) { nu_viaCartao = Convert.ToString(val); m_hshChangedFields [ "nu_viaCartao" ]="."; } 
		public void set_vr_limiteTotal ( long val ) { vr_limiteTotal = Convert.ToString(val); m_hshChangedFields [ "vr_limiteTotal" ]="."; } 
		public void set_vr_limiteMensal ( long val ) { vr_limiteMensal = Convert.ToString(val); m_hshChangedFields [ "vr_limiteMensal" ]="."; } 
		public void set_vr_limiteRotativo ( long val ) { vr_limiteRotativo = Convert.ToString(val); m_hshChangedFields [ "vr_limiteRotativo" ]="."; } 
		public void set_vr_extraCota ( long val ) { vr_extraCota = Convert.ToString(val); m_hshChangedFields [ "vr_extraCota" ]="."; } 
		public void set_vr_educacional ( long val ) { vr_educacional = Convert.ToString(val); m_hshChangedFields [ "vr_educacional" ]="."; } 
		public void set_vr_disp_educacional ( long val ) { vr_disp_educacional = Convert.ToString(val); m_hshChangedFields [ "vr_disp_educacional" ]="."; } 
		public void set_vr_edu_diario ( long val ) { vr_edu_diario = Convert.ToString(val); m_hshChangedFields [ "vr_edu_diario" ]="."; } 
		public void set_tg_emitido ( long val ) { tg_emitido = Convert.ToString(val); m_hshChangedFields [ "tg_emitido" ]="."; } 
		public void set_vr_edu_disp_virtual ( long val ) { vr_edu_disp_virtual = Convert.ToString(val); m_hshChangedFields [ "vr_edu_disp_virtual" ]="."; } 
		public void set_nu_rankVirtual ( long val ) { nu_rankVirtual = Convert.ToString(val); m_hshChangedFields [ "nu_rankVirtual" ]="."; } 
		public void set_vr_edu_total_ranking ( long val ) { vr_edu_total_ranking = Convert.ToString(val); m_hshChangedFields [ "vr_edu_total_ranking" ]="."; } 
		public void set_nu_webSenhaErrada ( long val ) { nu_webSenhaErrada = Convert.ToString(val); m_hshChangedFields [ "nu_webSenhaErrada" ]="."; } 
		public void set_tg_semanaCompleta ( long val ) { tg_semanaCompleta = Convert.ToString(val); m_hshChangedFields [ "tg_semanaCompleta" ]="."; } 
		public void set_tg_excluido ( long val ) { tg_excluido = Convert.ToString(val); m_hshChangedFields [ "tg_excluido" ]="."; } 
			
		public void fieldSelection()
		{
			m_gen_dbStatement.AddSelect ( TB_T_CARTAO.i_unique );
			m_gen_dbStatement.AddSelect ( TB_T_CARTAO.st_empresa );
			m_gen_dbStatement.AddSelect ( TB_T_CARTAO.st_matricula );
			m_gen_dbStatement.AddSelect ( TB_T_CARTAO.st_titularidade );
			m_gen_dbStatement.AddSelect ( TB_T_CARTAO.st_senha );
			m_gen_dbStatement.AddSelect ( TB_T_CARTAO.tg_tipoCartao );
			m_gen_dbStatement.AddSelect ( TB_T_CARTAO.st_venctoCartao );
			m_gen_dbStatement.AddSelect ( TB_T_CARTAO.tg_status );
			m_gen_dbStatement.AddSelect ( TB_T_CARTAO.dt_utlPagto );
			m_gen_dbStatement.AddSelect ( TB_T_CARTAO.nu_senhaErrada );
			m_gen_dbStatement.AddSelect ( TB_T_CARTAO.dt_inclusao );
			m_gen_dbStatement.AddSelect ( TB_T_CARTAO.dt_bloqueio );
			m_gen_dbStatement.AddSelect ( TB_T_CARTAO.tg_motivoBloqueio );
			m_gen_dbStatement.AddSelect ( TB_T_CARTAO.st_banco );
			m_gen_dbStatement.AddSelect ( TB_T_CARTAO.st_agencia );
			m_gen_dbStatement.AddSelect ( TB_T_CARTAO.st_conta );
			m_gen_dbStatement.AddSelect ( TB_T_CARTAO.st_matriculaExtra );
			m_gen_dbStatement.AddSelect ( TB_T_CARTAO.st_celCartao );
			m_gen_dbStatement.AddSelect ( TB_T_CARTAO.fk_dadosProprietario );
			m_gen_dbStatement.AddSelect ( TB_T_CARTAO.fk_infoAdicionais );
			m_gen_dbStatement.AddSelect ( TB_T_CARTAO.nu_viaCartao );
			m_gen_dbStatement.AddSelect ( TB_T_CARTAO.vr_limiteTotal );
			m_gen_dbStatement.AddSelect ( TB_T_CARTAO.vr_limiteMensal );
			m_gen_dbStatement.AddSelect ( TB_T_CARTAO.vr_limiteRotativo );
			m_gen_dbStatement.AddSelect ( TB_T_CARTAO.vr_extraCota );
			m_gen_dbStatement.AddSelect ( TB_T_CARTAO.vr_educacional );
			m_gen_dbStatement.AddSelect ( TB_T_CARTAO.vr_disp_educacional );
			m_gen_dbStatement.AddSelect ( TB_T_CARTAO.vr_edu_diario );
			m_gen_dbStatement.AddSelect ( TB_T_CARTAO.st_aluno );
			m_gen_dbStatement.AddSelect ( TB_T_CARTAO.tg_emitido );
			m_gen_dbStatement.AddSelect ( TB_T_CARTAO.vr_edu_disp_virtual );
			m_gen_dbStatement.AddSelect ( TB_T_CARTAO.nu_rankVirtual );
			m_gen_dbStatement.AddSelect ( TB_T_CARTAO.vr_edu_total_ranking );
			m_gen_dbStatement.AddSelect ( TB_T_CARTAO.nu_webSenhaErrada );
			m_gen_dbStatement.AddSelect ( TB_T_CARTAO.tg_semanaCompleta );
			m_gen_dbStatement.AddSelect ( TB_T_CARTAO.tg_excluido );
		}
			
		public bool selectAll()
		{
			do
			{
				StartSelect();
				fieldSelection();
				
				if ( !executeQuery() )
					return false;
			}
			while ( EndSelect() == false ); // row lock
			
			return  HasRows();
		}
		
		public bool selectIdentity ( string identity )
		{
			do
			{
				StartSelect();
				fieldSelection();
			
				m_gen_dbStatement.AddWhere ( TB_T_CARTAO.i_unique, identity, TB_T_CARTAO.type_i_unique );
			
				if ( !executeQuery())
					return false;
			}
			while ( EndSelect() == false ); // row lock
			
			if ( HasRows() == true)
			{
				DB_Row row = m_db_result.GetFirstRow();
				fetchRetrieve ( ref row );
				return true;
			}
			
			return false;
		}
		
		public bool create_T_Cartao ( )
		{
			try{
			string new_id = "";
			
			StartInsert();
			
			m_gen_dbStatement.AddValue ( TB_T_CARTAO.st_empresa, st_empresa, TB_T_CARTAO.type_st_empresa );
			m_gen_dbStatement.AddValue ( TB_T_CARTAO.st_matricula, st_matricula, TB_T_CARTAO.type_st_matricula );
			m_gen_dbStatement.AddValue ( TB_T_CARTAO.st_titularidade, st_titularidade, TB_T_CARTAO.type_st_titularidade );
			m_gen_dbStatement.AddValue ( TB_T_CARTAO.st_senha, st_senha, TB_T_CARTAO.type_st_senha );
			m_gen_dbStatement.AddValue ( TB_T_CARTAO.tg_tipoCartao, tg_tipoCartao, TB_T_CARTAO.type_tg_tipoCartao );
			m_gen_dbStatement.AddValue ( TB_T_CARTAO.st_venctoCartao, st_venctoCartao, TB_T_CARTAO.type_st_venctoCartao );
			m_gen_dbStatement.AddValue ( TB_T_CARTAO.tg_status, tg_status, TB_T_CARTAO.type_tg_status );
			m_gen_dbStatement.AddValue ( TB_T_CARTAO.dt_utlPagto, dt_utlPagto, TB_T_CARTAO.type_dt_utlPagto );
			m_gen_dbStatement.AddValue ( TB_T_CARTAO.nu_senhaErrada, nu_senhaErrada, TB_T_CARTAO.type_nu_senhaErrada );
			m_gen_dbStatement.AddValue ( TB_T_CARTAO.dt_inclusao, dt_inclusao, TB_T_CARTAO.type_dt_inclusao );
			m_gen_dbStatement.AddValue ( TB_T_CARTAO.dt_bloqueio, dt_bloqueio, TB_T_CARTAO.type_dt_bloqueio );
			m_gen_dbStatement.AddValue ( TB_T_CARTAO.tg_motivoBloqueio, tg_motivoBloqueio, TB_T_CARTAO.type_tg_motivoBloqueio );
			m_gen_dbStatement.AddValue ( TB_T_CARTAO.st_banco, st_banco, TB_T_CARTAO.type_st_banco );
			m_gen_dbStatement.AddValue ( TB_T_CARTAO.st_agencia, st_agencia, TB_T_CARTAO.type_st_agencia );
			m_gen_dbStatement.AddValue ( TB_T_CARTAO.st_conta, st_conta, TB_T_CARTAO.type_st_conta );
			m_gen_dbStatement.AddValue ( TB_T_CARTAO.st_matriculaExtra, st_matriculaExtra, TB_T_CARTAO.type_st_matriculaExtra );
			m_gen_dbStatement.AddValue ( TB_T_CARTAO.st_celCartao, st_celCartao, TB_T_CARTAO.type_st_celCartao );
			m_gen_dbStatement.AddValue ( TB_T_CARTAO.fk_dadosProprietario, fk_dadosProprietario, TB_T_CARTAO.type_fk_dadosProprietario );
			m_gen_dbStatement.AddValue ( TB_T_CARTAO.fk_infoAdicionais, fk_infoAdicionais, TB_T_CARTAO.type_fk_infoAdicionais );
			m_gen_dbStatement.AddValue ( TB_T_CARTAO.nu_viaCartao, nu_viaCartao, TB_T_CARTAO.type_nu_viaCartao );
			m_gen_dbStatement.AddValue ( TB_T_CARTAO.vr_limiteTotal, vr_limiteTotal, TB_T_CARTAO.type_vr_limiteTotal );
			m_gen_dbStatement.AddValue ( TB_T_CARTAO.vr_limiteMensal, vr_limiteMensal, TB_T_CARTAO.type_vr_limiteMensal );
			m_gen_dbStatement.AddValue ( TB_T_CARTAO.vr_limiteRotativo, vr_limiteRotativo, TB_T_CARTAO.type_vr_limiteRotativo );
			m_gen_dbStatement.AddValue ( TB_T_CARTAO.vr_extraCota, vr_extraCota, TB_T_CARTAO.type_vr_extraCota );
			m_gen_dbStatement.AddValue ( TB_T_CARTAO.vr_educacional, vr_educacional, TB_T_CARTAO.type_vr_educacional );
			m_gen_dbStatement.AddValue ( TB_T_CARTAO.vr_disp_educacional, vr_disp_educacional, TB_T_CARTAO.type_vr_disp_educacional );
			m_gen_dbStatement.AddValue ( TB_T_CARTAO.vr_edu_diario, vr_edu_diario, TB_T_CARTAO.type_vr_edu_diario );
			m_gen_dbStatement.AddValue ( TB_T_CARTAO.st_aluno, st_aluno, TB_T_CARTAO.type_st_aluno );
			m_gen_dbStatement.AddValue ( TB_T_CARTAO.tg_emitido, tg_emitido, TB_T_CARTAO.type_tg_emitido );
			m_gen_dbStatement.AddValue ( TB_T_CARTAO.vr_edu_disp_virtual, vr_edu_disp_virtual, TB_T_CARTAO.type_vr_edu_disp_virtual );
			m_gen_dbStatement.AddValue ( TB_T_CARTAO.nu_rankVirtual, nu_rankVirtual, TB_T_CARTAO.type_nu_rankVirtual );
			m_gen_dbStatement.AddValue ( TB_T_CARTAO.vr_edu_total_ranking, vr_edu_total_ranking, TB_T_CARTAO.type_vr_edu_total_ranking );
			m_gen_dbStatement.AddValue ( TB_T_CARTAO.nu_webSenhaErrada, nu_webSenhaErrada, TB_T_CARTAO.type_nu_webSenhaErrada );
			m_gen_dbStatement.AddValue ( TB_T_CARTAO.tg_semanaCompleta, tg_semanaCompleta, TB_T_CARTAO.type_tg_semanaCompleta );
			m_gen_dbStatement.AddValue ( TB_T_CARTAO.tg_excluido, tg_excluido, TB_T_CARTAO.type_tg_excluido );
			
			if ( !ExecuteScalar ( ref new_id ) )
				return false;
			
			i_unique = new_id;
			
			} catch ( System.Exception ex ) {
				StreamWriter wr = new StreamWriter ( 	"CRITICAL_" + var_Tablename + "_" + "_" + DateTime.Now.Year.ToString() + DateTime.Now.Month.ToString().PadLeft ( 2, '0' ) + DateTime.Now.Day.ToString().PadLeft ( 2, '0' ) + "_" + DateTime.Now.Hour.ToString().PadLeft ( 2, '0' ) + DateTime.Now.Minute.ToString().PadLeft ( 2, '0' ) + DateTime.Now.Second.ToString().PadLeft ( 2, '0' ) + ".txt" );
				wr.WriteLine ( ex.ToString() );
				wr.Flush();
				wr.Close();
			}
			
			return true;
		}
			
		public bool delete ( )
		{
		
			bool ret = false;
		
			try{
			StartDelete();
			
			if ( i_unique != "0" )
				m_gen_dbStatement.AddWhere ( TB_T_CARTAO.i_unique, i_unique, TB_T_CARTAO.type_i_unique );
			
			ret = Execute();
			
			} catch ( System.Exception ex ) {
				StreamWriter wr = new StreamWriter ( 	"CRITICAL_" + var_Tablename + "_" + "_" + DateTime.Now.Year.ToString() + DateTime.Now.Month.ToString().PadLeft ( 2, '0' ) + DateTime.Now.Day.ToString().PadLeft ( 2, '0' ) + "_" + DateTime.Now.Hour.ToString().PadLeft ( 2, '0' ) + DateTime.Now.Minute.ToString().PadLeft ( 2, '0' ) + DateTime.Now.Second.ToString().PadLeft ( 2, '0' ) + ".txt" );
				wr.WriteLine ( ex.ToString() );
				wr.Flush();
				wr.Close();
			}
			
			return ret; 
		}
			
		public bool select_rows_empresa_matricula ( string val_st_empresa, string val_st_matricula )
		{
			do
			{
				StartSelect();
				fieldSelection();
			
				m_gen_dbStatement.AddWhere ( TB_T_CARTAO.st_empresa, val_st_empresa , TB_T_CARTAO.type_st_empresa);
				m_gen_dbStatement.AddWhere ( TB_T_CARTAO.st_matricula, val_st_matricula , TB_T_CARTAO.type_st_matricula);
			
				if ( !executeQuery() )
					return false;
			}
			while ( EndSelect() == false ); // row lock
			
			return HasRows();
		}
			
		public bool select_rows_empresa ( string val_st_empresa )
		{
			do
			{
				StartSelect();
				fieldSelection();
			
				m_gen_dbStatement.AddWhere ( TB_T_CARTAO.st_empresa, val_st_empresa , TB_T_CARTAO.type_st_empresa);
			
				m_gen_dbStatement.AddOrderBy ( TB_T_CARTAO.dt_inclusao );
			
				if ( !executeQuery() )
					return false;
			}
			while ( EndSelect() == false ); // row lock
			
			return HasRows();
		}
			
		public bool select_rows_tudo ( string val_st_empresa, string val_st_matricula, string val_st_titularidade )
		{
			do
			{
				StartSelect();
				fieldSelection();
			
				m_gen_dbStatement.AddWhere ( TB_T_CARTAO.st_empresa, val_st_empresa , TB_T_CARTAO.type_st_empresa);
				m_gen_dbStatement.AddWhere ( TB_T_CARTAO.st_matricula, val_st_matricula , TB_T_CARTAO.type_st_matricula);
				m_gen_dbStatement.AddWhere ( TB_T_CARTAO.st_titularidade, val_st_titularidade , TB_T_CARTAO.type_st_titularidade);
			
				if ( !executeQuery() )
					return false;
			}
			while ( EndSelect() == false ); // row lock
			
			return HasRows();
		}
			
		public bool select_rows_tipo ( string val_tg_tipoCartao )
		{
			do
			{
				StartSelect();
				fieldSelection();
			
				m_gen_dbStatement.AddWhere ( TB_T_CARTAO.tg_tipoCartao, val_tg_tipoCartao , TB_T_CARTAO.type_tg_tipoCartao);
			
				if ( !executeQuery() )
					return false;
			}
			while ( EndSelect() == false ); // row lock
			
			return HasRows();
		}
			
		public bool select_rows_ranking ( string val_tg_tipoCartao )
		{
			do
			{
				StartSelect();
				fieldSelection();
			
				m_gen_dbStatement.AddWhere ( TB_T_CARTAO.tg_tipoCartao, val_tg_tipoCartao , TB_T_CARTAO.type_tg_tipoCartao);
			
				m_gen_dbStatement.AddOrderBy ( TB_T_CARTAO.nu_rankVirtual );
			
				if ( !executeQuery() )
					return false;
			}
			while ( EndSelect() == false ); // row lock
			
			return HasRows();
		}
			
		public bool select_rows_aluno ( string val_st_aluno )
		{
			do
			{
				StartSelect();
				fieldSelection();
			
				m_gen_dbStatement.AddLike ( TB_T_CARTAO.st_aluno, val_st_aluno , TB_T_CARTAO.type_st_aluno);
			
				if ( !executeQuery() )
					return false;
			}
			while ( EndSelect() == false ); // row lock
			
			return HasRows();
		}
			
		public bool select_rows_emp_edu ( string val_st_empresa, string val_tg_tipoCartao )
		{
			do
			{
				StartSelect();
				fieldSelection();
			
				m_gen_dbStatement.AddWhere ( TB_T_CARTAO.st_empresa, val_st_empresa , TB_T_CARTAO.type_st_empresa);
				m_gen_dbStatement.AddWhere ( TB_T_CARTAO.tg_tipoCartao, val_tg_tipoCartao , TB_T_CARTAO.type_tg_tipoCartao);
			
				if ( !executeQuery() )
					return false;
			}
			while ( EndSelect() == false ); // row lock
			
			return HasRows();
		}
			
		public bool select_rows_mat ( string val_st_matricula )
		{
			do
			{
				StartSelect();
				fieldSelection();
			
				m_gen_dbStatement.AddWhere ( TB_T_CARTAO.st_matricula, val_st_matricula , TB_T_CARTAO.type_st_matricula);
			
				m_gen_dbStatement.AddOrderBy ( TB_T_CARTAO.st_empresa );
			
				if ( !executeQuery() )
					return false;
			}
			while ( EndSelect() == false ); // row lock
			
			return HasRows();
		}
			
		public bool select_rows_prop ( string val_fk_dadosProprietario )
		{
			do
			{
				StartSelect();
				fieldSelection();
			
				m_gen_dbStatement.AddWhere ( TB_T_CARTAO.fk_dadosProprietario, val_fk_dadosProprietario , TB_T_CARTAO.type_fk_dadosProprietario);
			
				m_gen_dbStatement.AddOrderBy ( TB_T_CARTAO.st_empresa );
			
				if ( !executeQuery() )
					return false;
			}
			while ( EndSelect() == false ); // row lock
			
			return HasRows();
		}
			
		public bool select_rows_canc ( string val_st_empresa, string val_dt_bloqueio, string val_dt_bloqueio1, string val_tg_motivoBloqueio, string val_tg_tipoCartao, string val_tg_status )
		{
			do
			{
				StartSelect();
				fieldSelection();
			
				m_gen_dbStatement.AddWhere ( TB_T_CARTAO.st_empresa, val_st_empresa , TB_T_CARTAO.type_st_empresa);
				m_gen_dbStatement.AddWhereGreaterEqual ( TB_T_CARTAO.dt_bloqueio, val_dt_bloqueio , TB_T_CARTAO.type_dt_bloqueio);
				m_gen_dbStatement.AddWhereLessThan ( TB_T_CARTAO.dt_bloqueio, val_dt_bloqueio1 , TB_T_CARTAO.type_dt_bloqueio);
				m_gen_dbStatement.AddWhere ( TB_T_CARTAO.tg_motivoBloqueio, val_tg_motivoBloqueio , TB_T_CARTAO.type_tg_motivoBloqueio);
				m_gen_dbStatement.AddWhere ( TB_T_CARTAO.tg_tipoCartao, val_tg_tipoCartao , TB_T_CARTAO.type_tg_tipoCartao);
				m_gen_dbStatement.AddWhere ( TB_T_CARTAO.tg_status, val_tg_status , TB_T_CARTAO.type_tg_status);
			
				if ( !executeQuery() )
					return false;
			}
			while ( EndSelect() == false ); // row lock
			
			return HasRows();
		}
			
		public bool select_rows_gift_disp ( string val_fk_dadosProprietario, string val_tg_tipoCartao )
		{
			do
			{
				StartSelect();
				fieldSelection();
			
				m_gen_dbStatement.AddWhere ( TB_T_CARTAO.fk_dadosProprietario, val_fk_dadosProprietario , TB_T_CARTAO.type_fk_dadosProprietario);
				m_gen_dbStatement.AddWhere ( TB_T_CARTAO.tg_tipoCartao, val_tg_tipoCartao , TB_T_CARTAO.type_tg_tipoCartao);
			
				if ( !executeQuery() )
					return false;
			}
			while ( EndSelect() == false ); // row lock
			
			return HasRows();
		}
			
		public bool select_rows_edu_nome_prop ( string val_st_aluno, string val_fk_dadosProprietario, string val_tg_tipoCartao )
		{
			do
			{
				StartSelect();
				fieldSelection();
			
				m_gen_dbStatement.AddWhere ( TB_T_CARTAO.st_aluno, val_st_aluno , TB_T_CARTAO.type_st_aluno);
				m_gen_dbStatement.AddWhere ( TB_T_CARTAO.fk_dadosProprietario, val_fk_dadosProprietario , TB_T_CARTAO.type_fk_dadosProprietario);
				m_gen_dbStatement.AddWhere ( TB_T_CARTAO.tg_tipoCartao, val_tg_tipoCartao , TB_T_CARTAO.type_tg_tipoCartao);
			
				if ( !executeQuery() )
					return false;
			}
			while ( EndSelect() == false ); // row lock
			
			return HasRows();
		}
			
		public bool select_rows_emp_valor ( string val_st_empresa )
		{
			do
			{
				StartSelect();
				fieldSelection();
			
				m_gen_dbStatement.AddWhere ( TB_T_CARTAO.st_empresa, val_st_empresa , TB_T_CARTAO.type_st_empresa);
			
				m_gen_dbStatement.AddOrderBy ( TB_T_CARTAO.vr_limiteTotal );
			
				if ( !executeQuery() )
					return false;
			}
			while ( EndSelect() == false ); // row lock
			
			return HasRows();
		}
			
		public bool select_rows_emp_prop ( string val_st_empresa, string val_fk_dadosProprietario )
		{
			do
			{
				StartSelect();
				fieldSelection();
			
				m_gen_dbStatement.AddWhere ( TB_T_CARTAO.st_empresa, val_st_empresa , TB_T_CARTAO.type_st_empresa);
				m_gen_dbStatement.AddWhere ( TB_T_CARTAO.fk_dadosProprietario, val_fk_dadosProprietario , TB_T_CARTAO.type_fk_dadosProprietario);
			
				if ( !executeQuery() )
					return false;
			}
			while ( EndSelect() == false ); // row lock
			
			return HasRows();
		}
		
		#if DEBUG
		
		public bool setup ( bool IsTruncate, ref string id, string var_st_empresa, string var_st_matricula, string var_st_titularidade, string var_st_senha, string var_tg_tipoCartao, string var_st_venctoCartao, string var_tg_status, string var_dt_utlPagto, string var_nu_senhaErrada, string var_dt_inclusao, string var_dt_bloqueio, string var_tg_motivoBloqueio, string var_st_banco, string var_st_agencia, string var_st_conta, string var_st_matriculaExtra, string var_st_celCartao, string var_fk_dadosProprietario, string var_fk_infoAdicionais, string var_nu_viaCartao, string var_vr_limiteTotal, string var_vr_limiteMensal, string var_vr_limiteRotativo, string var_vr_extraCota, string var_vr_educacional, string var_vr_disp_educacional, string var_vr_edu_diario, string var_st_aluno, string var_tg_emitido, string var_vr_edu_disp_virtual, string var_nu_rankVirtual, string var_vr_edu_total_ranking, string var_nu_webSenhaErrada, string var_tg_semanaCompleta, string var_tg_excluido )
		{
			if ( IsTruncate ) 
			{
				i_unique = "";
				this.delete();
			}
		
			set_st_empresa ( var_st_empresa );
			set_st_matricula ( var_st_matricula );
			set_st_titularidade ( var_st_titularidade );
			set_st_senha ( var_st_senha );
			set_tg_tipoCartao ( var_tg_tipoCartao );
			set_st_venctoCartao ( var_st_venctoCartao );
			set_tg_status ( var_tg_status );
			set_dt_utlPagto ( var_dt_utlPagto );
			set_nu_senhaErrada ( var_nu_senhaErrada );
			set_dt_inclusao ( var_dt_inclusao );
			set_dt_bloqueio ( var_dt_bloqueio );
			set_tg_motivoBloqueio ( var_tg_motivoBloqueio );
			set_st_banco ( var_st_banco );
			set_st_agencia ( var_st_agencia );
			set_st_conta ( var_st_conta );
			set_st_matriculaExtra ( var_st_matriculaExtra );
			set_st_celCartao ( var_st_celCartao );
			set_fk_dadosProprietario ( var_fk_dadosProprietario );
			set_fk_infoAdicionais ( var_fk_infoAdicionais );
			set_nu_viaCartao ( var_nu_viaCartao );
			set_vr_limiteTotal ( var_vr_limiteTotal );
			set_vr_limiteMensal ( var_vr_limiteMensal );
			set_vr_limiteRotativo ( var_vr_limiteRotativo );
			set_vr_extraCota ( var_vr_extraCota );
			set_vr_educacional ( var_vr_educacional );
			set_vr_disp_educacional ( var_vr_disp_educacional );
			set_vr_edu_diario ( var_vr_edu_diario );
			set_st_aluno ( var_st_aluno );
			set_tg_emitido ( var_tg_emitido );
			set_vr_edu_disp_virtual ( var_vr_edu_disp_virtual );
			set_nu_rankVirtual ( var_nu_rankVirtual );
			set_vr_edu_total_ranking ( var_vr_edu_total_ranking );
			set_nu_webSenhaErrada ( var_nu_webSenhaErrada );
			set_tg_semanaCompleta ( var_tg_semanaCompleta );
			set_tg_excluido ( var_tg_excluido );
			
			if ( create_T_Cartao() == false )
			{
				return false;
			}
			
			id = get_identity();
			return true;
		}
		
		#endif
		
	}
}
