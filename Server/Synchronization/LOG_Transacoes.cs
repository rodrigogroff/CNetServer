// ###################################################### 
// ## SyCraf Engine Codegen                          #### 
// ###################################################### 
// ## This file is entirely written by               #### 
// ## the construction bot. DO NOT EDIT THIS FILE.   #### 
// ###################################################### 

using System;
using System.IO;
using System.Threading;
using System.Collections;

namespace SyCrafEngine
{
	public class LOG_Transacoes : Synchronization
	{
		private string i_unique = "0";
		private string fk_terminal = "0";
		private string dt_transacao = "1900-01-01 00:00:00";
		private string nu_nsu = "0";
		private string fk_empresa = "0";
		private string fk_cartao = "0";
		private string vr_total = "0";
		private string nu_parcelas = "0";
		private string nu_cod_erro = "0";
		private string tg_confirmada = "";
		private string nu_nsuOrig = "0";
		private string en_operacao = "";
		private string st_msg_transacao = "";
		private string tg_contabil = "";
		private string fk_loja = "0";
		private string vr_saldo_disp = "0";
		private string vr_saldo_disp_tot = "0";
		private string st_doc = "";
		
		public int var_FieldCount = 18;
		
		public LOG_Transacoes ()
		{
			var_Serial = TB_LOG_TRANSACOES.serial;
			var_Tablename = TB_LOG_TRANSACOES.Alias;
		}
		
		public LOG_Transacoes ( Transaction trx )
		{
			AcquireTransaction ( ref trx );
			
			var_Serial = TB_LOG_TRANSACOES.serial;
			var_Tablename = TB_LOG_TRANSACOES.Alias;
			
			TraceLog ( var_Tablename + " serial : " + var_serialNumber);
		}
		
		public string exportNames()
		{
			return "fk_terminal,dt_transacao,nu_nsu,fk_empresa,fk_cartao,vr_total,nu_parcelas,nu_cod_erro,tg_confirmada,nu_nsuOrig,en_operacao,st_msg_transacao,tg_contabil,fk_loja,vr_saldo_disp,vr_saldo_disp_tot,st_doc";
		}
		
		public string exportCSV()
		{
			return i_unique + str_field_sep + fk_terminal + str_field_sep + dt_transacao + str_field_sep + nu_nsu + str_field_sep + fk_empresa + str_field_sep + fk_cartao + str_field_sep + vr_total + str_field_sep + nu_parcelas + str_field_sep + nu_cod_erro + str_field_sep + tg_confirmada + str_field_sep + nu_nsuOrig + str_field_sep + en_operacao + str_field_sep + st_msg_transacao + str_field_sep + tg_contabil + str_field_sep + fk_loja + str_field_sep + vr_saldo_disp + str_field_sep + vr_saldo_disp_tot + str_field_sep + st_doc;
		}
		
		public void Reset()
		{
			i_unique = "0";
			fk_terminal = "0";
			dt_transacao = "1900-01-01 00:00:00";
			nu_nsu = "0";
			fk_empresa = "0";
			fk_cartao = "0";
			vr_total = "0";
			nu_parcelas = "0";
			nu_cod_erro = "0";
			tg_confirmada = "";
			nu_nsuOrig = "0";
			en_operacao = "";
			st_msg_transacao = "";
			tg_contabil = "";
			fk_loja = "0";
			vr_saldo_disp = "0";
			vr_saldo_disp_tot = "0";
			st_doc = "";
		
			ReleaseExclusive();
		}
		
		public void copy ( ref LOG_Transacoes cpy )
		{
			fk_terminal = cpy.fk_terminal;
			dt_transacao = cpy.dt_transacao;
			nu_nsu = cpy.nu_nsu;
			fk_empresa = cpy.fk_empresa;
			fk_cartao = cpy.fk_cartao;
			vr_total = cpy.vr_total;
			nu_parcelas = cpy.nu_parcelas;
			nu_cod_erro = cpy.nu_cod_erro;
			tg_confirmada = cpy.tg_confirmada;
			nu_nsuOrig = cpy.nu_nsuOrig;
			en_operacao = cpy.en_operacao;
			st_msg_transacao = cpy.st_msg_transacao;
			tg_contabil = cpy.tg_contabil;
			fk_loja = cpy.fk_loja;
			vr_saldo_disp = cpy.vr_saldo_disp;
			vr_saldo_disp_tot = cpy.vr_saldo_disp_tot;
			st_doc = cpy.st_doc;
		}
		
		public override void fetchRetrieve ( ref DB_Row row )
		{
			i_unique = row.GetField ( TB_LOG_TRANSACOES.i_unique );
			fk_terminal = row.GetField ( TB_LOG_TRANSACOES.fk_terminal );
			dt_transacao = ConvertTime ( row.GetField ( TB_LOG_TRANSACOES.dt_transacao ) );
			nu_nsu = row.GetField ( TB_LOG_TRANSACOES.nu_nsu );
			fk_empresa = row.GetField ( TB_LOG_TRANSACOES.fk_empresa );
			fk_cartao = row.GetField ( TB_LOG_TRANSACOES.fk_cartao );
			vr_total = row.GetField ( TB_LOG_TRANSACOES.vr_total );
			nu_parcelas = row.GetField ( TB_LOG_TRANSACOES.nu_parcelas );
			nu_cod_erro = row.GetField ( TB_LOG_TRANSACOES.nu_cod_erro );
			tg_confirmada = row.GetField ( TB_LOG_TRANSACOES.tg_confirmada );
			nu_nsuOrig = row.GetField ( TB_LOG_TRANSACOES.nu_nsuOrig );
			en_operacao = row.GetField ( TB_LOG_TRANSACOES.en_operacao );
			st_msg_transacao = row.GetField ( TB_LOG_TRANSACOES.st_msg_transacao );
			tg_contabil = row.GetField ( TB_LOG_TRANSACOES.tg_contabil );
			fk_loja = row.GetField ( TB_LOG_TRANSACOES.fk_loja );
			vr_saldo_disp = row.GetField ( TB_LOG_TRANSACOES.vr_saldo_disp );
			vr_saldo_disp_tot = row.GetField ( TB_LOG_TRANSACOES.vr_saldo_disp_tot );
			st_doc = row.GetField ( TB_LOG_TRANSACOES.st_doc );
		}
		
		public bool synchronize_LOG_Transacoes ( )
		{
			try{
			
			if ( m_hshChangedFields.Count == 0 )
				return true;
			
			StartUpdate();
		
			if ( m_hshChangedFields [ "fk_terminal" ] != null )
				m_gen_dbStatement.AddUpdate ( TB_LOG_TRANSACOES.fk_terminal , fk_terminal , TB_LOG_TRANSACOES.type_fk_terminal );
			if ( m_hshChangedFields [ "dt_transacao" ] != null )
				m_gen_dbStatement.AddUpdate ( TB_LOG_TRANSACOES.dt_transacao , dt_transacao , TB_LOG_TRANSACOES.type_dt_transacao );
			if ( m_hshChangedFields [ "nu_nsu" ] != null )
				m_gen_dbStatement.AddUpdate ( TB_LOG_TRANSACOES.nu_nsu , nu_nsu , TB_LOG_TRANSACOES.type_nu_nsu );
			if ( m_hshChangedFields [ "fk_empresa" ] != null )
				m_gen_dbStatement.AddUpdate ( TB_LOG_TRANSACOES.fk_empresa , fk_empresa , TB_LOG_TRANSACOES.type_fk_empresa );
			if ( m_hshChangedFields [ "fk_cartao" ] != null )
				m_gen_dbStatement.AddUpdate ( TB_LOG_TRANSACOES.fk_cartao , fk_cartao , TB_LOG_TRANSACOES.type_fk_cartao );
			if ( m_hshChangedFields [ "vr_total" ] != null )
				m_gen_dbStatement.AddUpdate ( TB_LOG_TRANSACOES.vr_total , vr_total , TB_LOG_TRANSACOES.type_vr_total );
			if ( m_hshChangedFields [ "nu_parcelas" ] != null )
				m_gen_dbStatement.AddUpdate ( TB_LOG_TRANSACOES.nu_parcelas , nu_parcelas , TB_LOG_TRANSACOES.type_nu_parcelas );
			if ( m_hshChangedFields [ "nu_cod_erro" ] != null )
				m_gen_dbStatement.AddUpdate ( TB_LOG_TRANSACOES.nu_cod_erro , nu_cod_erro , TB_LOG_TRANSACOES.type_nu_cod_erro );
			if ( m_hshChangedFields [ "tg_confirmada" ] != null )
				m_gen_dbStatement.AddUpdate ( TB_LOG_TRANSACOES.tg_confirmada , tg_confirmada , TB_LOG_TRANSACOES.type_tg_confirmada );
			if ( m_hshChangedFields [ "nu_nsuOrig" ] != null )
				m_gen_dbStatement.AddUpdate ( TB_LOG_TRANSACOES.nu_nsuOrig , nu_nsuOrig , TB_LOG_TRANSACOES.type_nu_nsuOrig );
			if ( m_hshChangedFields [ "en_operacao" ] != null )
				m_gen_dbStatement.AddUpdate ( TB_LOG_TRANSACOES.en_operacao , en_operacao , TB_LOG_TRANSACOES.type_en_operacao );
			if ( m_hshChangedFields [ "st_msg_transacao" ] != null )
				m_gen_dbStatement.AddUpdate ( TB_LOG_TRANSACOES.st_msg_transacao , st_msg_transacao , TB_LOG_TRANSACOES.type_st_msg_transacao );
			if ( m_hshChangedFields [ "tg_contabil" ] != null )
				m_gen_dbStatement.AddUpdate ( TB_LOG_TRANSACOES.tg_contabil , tg_contabil , TB_LOG_TRANSACOES.type_tg_contabil );
			if ( m_hshChangedFields [ "fk_loja" ] != null )
				m_gen_dbStatement.AddUpdate ( TB_LOG_TRANSACOES.fk_loja , fk_loja , TB_LOG_TRANSACOES.type_fk_loja );
			if ( m_hshChangedFields [ "vr_saldo_disp" ] != null )
				m_gen_dbStatement.AddUpdate ( TB_LOG_TRANSACOES.vr_saldo_disp , vr_saldo_disp , TB_LOG_TRANSACOES.type_vr_saldo_disp );
			if ( m_hshChangedFields [ "vr_saldo_disp_tot" ] != null )
				m_gen_dbStatement.AddUpdate ( TB_LOG_TRANSACOES.vr_saldo_disp_tot , vr_saldo_disp_tot , TB_LOG_TRANSACOES.type_vr_saldo_disp_tot );
			if ( m_hshChangedFields [ "st_doc" ] != null )
				m_gen_dbStatement.AddUpdate ( TB_LOG_TRANSACOES.st_doc , st_doc , TB_LOG_TRANSACOES.type_st_doc );
		
			m_gen_dbStatement.AddWhere ( TB_LOG_TRANSACOES.i_unique, i_unique, TB_LOG_TRANSACOES.type_i_unique );
		
			} catch ( System.Exception ex ) {
				StreamWriter wr = new StreamWriter ( 	"CRITICAL_" + var_Tablename + "_" + "_" + DateTime.Now.Year.ToString() + DateTime.Now.Month.ToString().PadLeft ( 2, '0' ) + DateTime.Now.Day.ToString().PadLeft ( 2, '0' ) + "_" + DateTime.Now.Hour.ToString().PadLeft ( 2, '0' ) + DateTime.Now.Minute.ToString().PadLeft ( 2, '0' ) + DateTime.Now.Second.ToString().PadLeft ( 2, '0' ) + ".txt" );
				wr.WriteLine ( ex.ToString() );
				wr.Flush();
				wr.Close();
			}
		
			return Update();
		}
			
		public string get_identity() { return i_unique; } 
		public string get_fk_terminal() { return fk_terminal; } 
		public string get_dt_transacao() { return dt_transacao; } 
		public string get_nu_nsu() { return nu_nsu; } 
		public string get_fk_empresa() { return fk_empresa; } 
		public string get_fk_cartao() { return fk_cartao; } 
		public string get_vr_total() { return vr_total; } 
		public string get_nu_parcelas() { return nu_parcelas; } 
		public string get_nu_cod_erro() { return nu_cod_erro; } 
		public string get_tg_confirmada() { return tg_confirmada; } 
		public string get_nu_nsuOrig() { return nu_nsuOrig; } 
		public string get_en_operacao() { return en_operacao; } 
		public string get_st_msg_transacao() { return st_msg_transacao; } 
		public string get_tg_contabil() { return tg_contabil; } 
		public string get_fk_loja() { return fk_loja; } 
		public string get_vr_saldo_disp() { return vr_saldo_disp; } 
		public string get_vr_saldo_disp_tot() { return vr_saldo_disp_tot; } 
		public string get_st_doc() { return st_doc; } 
			
		public long get_int_fk_terminal() { return Convert.ToInt64 ( fk_terminal ); } 
		public long get_int_nu_nsu() { return Convert.ToInt64 ( nu_nsu ); } 
		public long get_int_fk_empresa() { return Convert.ToInt64 ( fk_empresa ); } 
		public long get_int_fk_cartao() { return Convert.ToInt64 ( fk_cartao ); } 
		public long get_int_vr_total() { return Convert.ToInt64 ( vr_total ); } 
		public long get_int_nu_parcelas() { return Convert.ToInt64 ( nu_parcelas ); } 
		public long get_int_nu_cod_erro() { return Convert.ToInt64 ( nu_cod_erro ); } 
		public long get_int_nu_nsuOrig() { return Convert.ToInt64 ( nu_nsuOrig ); } 
		public long get_int_fk_loja() { return Convert.ToInt64 ( fk_loja ); } 
		public long get_int_vr_saldo_disp() { return Convert.ToInt64 ( vr_saldo_disp ); } 
		public long get_int_vr_saldo_disp_tot() { return Convert.ToInt64 ( vr_saldo_disp_tot ); } 
			
		public void set_fk_terminal ( string val ) { fk_terminal = val; m_hshChangedFields [ "fk_terminal" ]="."; } 
		public void set_dt_transacao ( string val ) { dt_transacao = val; m_hshChangedFields [ "dt_transacao" ]="."; } 
		public void set_nu_nsu ( string val ) { nu_nsu = val; m_hshChangedFields [ "nu_nsu" ]="."; } 
		public void set_fk_empresa ( string val ) { fk_empresa = val; m_hshChangedFields [ "fk_empresa" ]="."; } 
		public void set_fk_cartao ( string val ) { fk_cartao = val; m_hshChangedFields [ "fk_cartao" ]="."; } 
		public void set_vr_total ( string val ) { vr_total = val; m_hshChangedFields [ "vr_total" ]="."; } 
		public void set_nu_parcelas ( string val ) { nu_parcelas = val; m_hshChangedFields [ "nu_parcelas" ]="."; } 
		public void set_nu_cod_erro ( string val ) { nu_cod_erro = val; m_hshChangedFields [ "nu_cod_erro" ]="."; } 
		public void set_tg_confirmada ( string val ) { tg_confirmada = val; m_hshChangedFields [ "tg_confirmada" ]="."; } 
		public void set_nu_nsuOrig ( string val ) { nu_nsuOrig = val; m_hshChangedFields [ "nu_nsuOrig" ]="."; } 
		public void set_en_operacao ( string val ) { en_operacao = val; m_hshChangedFields [ "en_operacao" ]="."; } 
		public void set_st_msg_transacao ( string val ) { st_msg_transacao = val; m_hshChangedFields [ "st_msg_transacao" ]="."; } 
		public void set_tg_contabil ( string val ) { tg_contabil = val; m_hshChangedFields [ "tg_contabil" ]="."; } 
		public void set_fk_loja ( string val ) { fk_loja = val; m_hshChangedFields [ "fk_loja" ]="."; } 
		public void set_vr_saldo_disp ( string val ) { vr_saldo_disp = val; m_hshChangedFields [ "vr_saldo_disp" ]="."; } 
		public void set_vr_saldo_disp_tot ( string val ) { vr_saldo_disp_tot = val; m_hshChangedFields [ "vr_saldo_disp_tot" ]="."; } 
		public void set_st_doc ( string val ) { st_doc = val; m_hshChangedFields [ "st_doc" ]="."; } 
		
		public void set_fk_terminal ( long val ) { fk_terminal = Convert.ToString(val); m_hshChangedFields [ "fk_terminal" ]="."; } 
		public void set_nu_nsu ( long val ) { nu_nsu = Convert.ToString(val); m_hshChangedFields [ "nu_nsu" ]="."; } 
		public void set_fk_empresa ( long val ) { fk_empresa = Convert.ToString(val); m_hshChangedFields [ "fk_empresa" ]="."; } 
		public void set_fk_cartao ( long val ) { fk_cartao = Convert.ToString(val); m_hshChangedFields [ "fk_cartao" ]="."; } 
		public void set_vr_total ( long val ) { vr_total = Convert.ToString(val); m_hshChangedFields [ "vr_total" ]="."; } 
		public void set_nu_parcelas ( long val ) { nu_parcelas = Convert.ToString(val); m_hshChangedFields [ "nu_parcelas" ]="."; } 
		public void set_nu_cod_erro ( long val ) { nu_cod_erro = Convert.ToString(val); m_hshChangedFields [ "nu_cod_erro" ]="."; } 
		public void set_nu_nsuOrig ( long val ) { nu_nsuOrig = Convert.ToString(val); m_hshChangedFields [ "nu_nsuOrig" ]="."; } 
		public void set_fk_loja ( long val ) { fk_loja = Convert.ToString(val); m_hshChangedFields [ "fk_loja" ]="."; } 
		public void set_vr_saldo_disp ( long val ) { vr_saldo_disp = Convert.ToString(val); m_hshChangedFields [ "vr_saldo_disp" ]="."; } 
		public void set_vr_saldo_disp_tot ( long val ) { vr_saldo_disp_tot = Convert.ToString(val); m_hshChangedFields [ "vr_saldo_disp_tot" ]="."; } 
			
		public void fieldSelection()
		{
			m_gen_dbStatement.AddSelect ( TB_LOG_TRANSACOES.i_unique );
			m_gen_dbStatement.AddSelect ( TB_LOG_TRANSACOES.fk_terminal );
			m_gen_dbStatement.AddSelect ( TB_LOG_TRANSACOES.dt_transacao );
			m_gen_dbStatement.AddSelect ( TB_LOG_TRANSACOES.nu_nsu );
			m_gen_dbStatement.AddSelect ( TB_LOG_TRANSACOES.fk_empresa );
			m_gen_dbStatement.AddSelect ( TB_LOG_TRANSACOES.fk_cartao );
			m_gen_dbStatement.AddSelect ( TB_LOG_TRANSACOES.vr_total );
			m_gen_dbStatement.AddSelect ( TB_LOG_TRANSACOES.nu_parcelas );
			m_gen_dbStatement.AddSelect ( TB_LOG_TRANSACOES.nu_cod_erro );
			m_gen_dbStatement.AddSelect ( TB_LOG_TRANSACOES.tg_confirmada );
			m_gen_dbStatement.AddSelect ( TB_LOG_TRANSACOES.nu_nsuOrig );
			m_gen_dbStatement.AddSelect ( TB_LOG_TRANSACOES.en_operacao );
			m_gen_dbStatement.AddSelect ( TB_LOG_TRANSACOES.st_msg_transacao );
			m_gen_dbStatement.AddSelect ( TB_LOG_TRANSACOES.tg_contabil );
			m_gen_dbStatement.AddSelect ( TB_LOG_TRANSACOES.fk_loja );
			m_gen_dbStatement.AddSelect ( TB_LOG_TRANSACOES.vr_saldo_disp );
			m_gen_dbStatement.AddSelect ( TB_LOG_TRANSACOES.vr_saldo_disp_tot );
			m_gen_dbStatement.AddSelect ( TB_LOG_TRANSACOES.st_doc );
		}
			
		public bool selectAll()
		{
			do
			{
				StartSelect();
				fieldSelection();
				
				if ( !executeQuery() )
					return false;
			}
			while ( EndSelect() == false ); // row lock
			
			return  HasRows();
		}
		
		public bool selectIdentity ( string identity )
		{
			do
			{
				StartSelect();
				fieldSelection();
			
				m_gen_dbStatement.AddWhere ( TB_LOG_TRANSACOES.i_unique, identity, TB_LOG_TRANSACOES.type_i_unique );
			
				if ( !executeQuery())
					return false;
			}
			while ( EndSelect() == false ); // row lock
			
			if ( HasRows() == true)
			{
				DB_Row row = m_db_result.GetFirstRow();
				fetchRetrieve ( ref row );
				return true;
			}
			
			return false;
		}
		
		public bool create_LOG_Transacoes ( )
		{
			try{
			string new_id = "";
			
			StartInsert();
			
			m_gen_dbStatement.AddValue ( TB_LOG_TRANSACOES.fk_terminal, fk_terminal, TB_LOG_TRANSACOES.type_fk_terminal );
			m_gen_dbStatement.AddValue ( TB_LOG_TRANSACOES.dt_transacao, dt_transacao, TB_LOG_TRANSACOES.type_dt_transacao );
			m_gen_dbStatement.AddValue ( TB_LOG_TRANSACOES.nu_nsu, nu_nsu, TB_LOG_TRANSACOES.type_nu_nsu );
			m_gen_dbStatement.AddValue ( TB_LOG_TRANSACOES.fk_empresa, fk_empresa, TB_LOG_TRANSACOES.type_fk_empresa );
			m_gen_dbStatement.AddValue ( TB_LOG_TRANSACOES.fk_cartao, fk_cartao, TB_LOG_TRANSACOES.type_fk_cartao );
			m_gen_dbStatement.AddValue ( TB_LOG_TRANSACOES.vr_total, vr_total, TB_LOG_TRANSACOES.type_vr_total );
			m_gen_dbStatement.AddValue ( TB_LOG_TRANSACOES.nu_parcelas, nu_parcelas, TB_LOG_TRANSACOES.type_nu_parcelas );
			m_gen_dbStatement.AddValue ( TB_LOG_TRANSACOES.nu_cod_erro, nu_cod_erro, TB_LOG_TRANSACOES.type_nu_cod_erro );
			m_gen_dbStatement.AddValue ( TB_LOG_TRANSACOES.tg_confirmada, tg_confirmada, TB_LOG_TRANSACOES.type_tg_confirmada );
			m_gen_dbStatement.AddValue ( TB_LOG_TRANSACOES.nu_nsuOrig, nu_nsuOrig, TB_LOG_TRANSACOES.type_nu_nsuOrig );
			m_gen_dbStatement.AddValue ( TB_LOG_TRANSACOES.en_operacao, en_operacao, TB_LOG_TRANSACOES.type_en_operacao );
			m_gen_dbStatement.AddValue ( TB_LOG_TRANSACOES.st_msg_transacao, st_msg_transacao, TB_LOG_TRANSACOES.type_st_msg_transacao );
			m_gen_dbStatement.AddValue ( TB_LOG_TRANSACOES.tg_contabil, tg_contabil, TB_LOG_TRANSACOES.type_tg_contabil );
			m_gen_dbStatement.AddValue ( TB_LOG_TRANSACOES.fk_loja, fk_loja, TB_LOG_TRANSACOES.type_fk_loja );
			m_gen_dbStatement.AddValue ( TB_LOG_TRANSACOES.vr_saldo_disp, vr_saldo_disp, TB_LOG_TRANSACOES.type_vr_saldo_disp );
			m_gen_dbStatement.AddValue ( TB_LOG_TRANSACOES.vr_saldo_disp_tot, vr_saldo_disp_tot, TB_LOG_TRANSACOES.type_vr_saldo_disp_tot );
			m_gen_dbStatement.AddValue ( TB_LOG_TRANSACOES.st_doc, st_doc, TB_LOG_TRANSACOES.type_st_doc );
			
			if ( !ExecuteScalar ( ref new_id ) )
				return false;
			
			i_unique = new_id;
			
			} catch ( System.Exception ex ) {
				StreamWriter wr = new StreamWriter ( 	"CRITICAL_" + var_Tablename + "_" + "_" + DateTime.Now.Year.ToString() + DateTime.Now.Month.ToString().PadLeft ( 2, '0' ) + DateTime.Now.Day.ToString().PadLeft ( 2, '0' ) + "_" + DateTime.Now.Hour.ToString().PadLeft ( 2, '0' ) + DateTime.Now.Minute.ToString().PadLeft ( 2, '0' ) + DateTime.Now.Second.ToString().PadLeft ( 2, '0' ) + ".txt" );
				wr.WriteLine ( ex.ToString() );
				wr.Flush();
				wr.Close();
			}
			
			return true;
		}
			
		public bool delete ( )
		{
		
			bool ret = false;
		
			try{
			StartDelete();
			
			if ( i_unique != "0" )
				m_gen_dbStatement.AddWhere ( TB_LOG_TRANSACOES.i_unique, i_unique, TB_LOG_TRANSACOES.type_i_unique );
			
			ret = Execute();
			
			} catch ( System.Exception ex ) {
				StreamWriter wr = new StreamWriter ( 	"CRITICAL_" + var_Tablename + "_" + "_" + DateTime.Now.Year.ToString() + DateTime.Now.Month.ToString().PadLeft ( 2, '0' ) + DateTime.Now.Day.ToString().PadLeft ( 2, '0' ) + "_" + DateTime.Now.Hour.ToString().PadLeft ( 2, '0' ) + DateTime.Now.Minute.ToString().PadLeft ( 2, '0' ) + DateTime.Now.Second.ToString().PadLeft ( 2, '0' ) + ".txt" );
				wr.WriteLine ( ex.ToString() );
				wr.Flush();
				wr.Close();
			}
			
			return ret; 
		}
			
		public bool select_fk_terminal ( string val_fk_terminal )
		{
			do
			{
				StartSelect();
				fieldSelection();
			
				m_gen_dbStatement.AddWhere ( TB_LOG_TRANSACOES.fk_terminal, val_fk_terminal , TB_LOG_TRANSACOES.type_fk_terminal);
			
				m_gen_dbStatement.AddOrderBy ( TB_LOG_TRANSACOES.dt_transacao );
			
				if ( !executeQuery() )
					return false;
			}
			while ( EndSelect() == false ); // row lock
			
			return HasRows();
		}
			
		public bool select_fk_empresa ( string val_fk_empresa )
		{
			do
			{
				StartSelect();
				fieldSelection();
			
				m_gen_dbStatement.AddWhere ( TB_LOG_TRANSACOES.fk_empresa, val_fk_empresa , TB_LOG_TRANSACOES.type_fk_empresa);
			
				m_gen_dbStatement.AddOrderBy ( TB_LOG_TRANSACOES.dt_transacao );
			
				if ( !executeQuery() )
					return false;
			}
			while ( EndSelect() == false ); // row lock
			
			return HasRows();
		}
			
		public bool select_fk_term_empresa ( string val_fk_terminal, string val_fk_empresa )
		{
			do
			{
				StartSelect();
				fieldSelection();
			
				m_gen_dbStatement.AddWhere ( TB_LOG_TRANSACOES.fk_terminal, val_fk_terminal , TB_LOG_TRANSACOES.type_fk_terminal);
				m_gen_dbStatement.AddWhere ( TB_LOG_TRANSACOES.fk_empresa, val_fk_empresa , TB_LOG_TRANSACOES.type_fk_empresa);
			
				m_gen_dbStatement.AddOrderBy ( TB_LOG_TRANSACOES.dt_transacao );
			
				if ( !executeQuery() )
					return false;
			}
			while ( EndSelect() == false ); // row lock
			
			return HasRows();
		}
			
		public bool select_fk_cartao ( string val_fk_cartao )
		{
			do
			{
				StartSelect();
				fieldSelection();
			
				m_gen_dbStatement.AddWhere ( TB_LOG_TRANSACOES.fk_cartao, val_fk_cartao , TB_LOG_TRANSACOES.type_fk_cartao);
			
				m_gen_dbStatement.AddOrderBy ( TB_LOG_TRANSACOES.dt_transacao );
			
				if ( !executeQuery() )
					return false;
			}
			while ( EndSelect() == false ); // row lock
			
			return HasRows();
		}
			
		public bool select_fk_loj_emp ( string val_fk_loja, string val_fk_empresa )
		{
			do
			{
				StartSelect();
				fieldSelection();
			
				m_gen_dbStatement.AddWhere ( TB_LOG_TRANSACOES.fk_loja, val_fk_loja , TB_LOG_TRANSACOES.type_fk_loja);
				m_gen_dbStatement.AddWhere ( TB_LOG_TRANSACOES.fk_empresa, val_fk_empresa , TB_LOG_TRANSACOES.type_fk_empresa);
			
				m_gen_dbStatement.AddOrderBy ( TB_LOG_TRANSACOES.dt_transacao );
			
				if ( !executeQuery() )
					return false;
			}
			while ( EndSelect() == false ); // row lock
			
			return HasRows();
		}
			
		public bool select_rows_nsu ( string val_nu_nsu, string val_dt_transacao, string val_dt_transacao1 )
		{
			do
			{
				StartSelect();
				fieldSelection();
			
				m_gen_dbStatement.AddWhere ( TB_LOG_TRANSACOES.nu_nsu, val_nu_nsu , TB_LOG_TRANSACOES.type_nu_nsu);
				m_gen_dbStatement.AddWhereGreaterEqual ( TB_LOG_TRANSACOES.dt_transacao, val_dt_transacao , TB_LOG_TRANSACOES.type_dt_transacao);
				m_gen_dbStatement.AddWhereLessThan ( TB_LOG_TRANSACOES.dt_transacao, val_dt_transacao1 , TB_LOG_TRANSACOES.type_dt_transacao);
			
				m_gen_dbStatement.AddOrderBy ( TB_LOG_TRANSACOES.dt_transacao );
			
				if ( !executeQuery() )
					return false;
			}
			while ( EndSelect() == false ); // row lock
			
			return HasRows();
		}
			
		public bool select_rows_parc ( string val_nu_parcelas )
		{
			do
			{
				StartSelect();
				fieldSelection();
			
				m_gen_dbStatement.AddWhereGreaterEqual ( TB_LOG_TRANSACOES.nu_parcelas, val_nu_parcelas , TB_LOG_TRANSACOES.type_nu_parcelas);
			
				m_gen_dbStatement.AddOrderBy ( TB_LOG_TRANSACOES.dt_transacao );
			
				if ( !executeQuery() )
					return false;
			}
			while ( EndSelect() == false ); // row lock
			
			return HasRows();
		}
			
		public bool select_rows_parc_oper ( string val_nu_parcelas, string val_en_operacao )
		{
			do
			{
				StartSelect();
				fieldSelection();
			
				m_gen_dbStatement.AddWhereGreaterEqual ( TB_LOG_TRANSACOES.nu_parcelas, val_nu_parcelas , TB_LOG_TRANSACOES.type_nu_parcelas);
				m_gen_dbStatement.AddWhere ( TB_LOG_TRANSACOES.en_operacao, val_en_operacao , TB_LOG_TRANSACOES.type_en_operacao);
			
				m_gen_dbStatement.AddOrderBy ( TB_LOG_TRANSACOES.dt_transacao );
			
				if ( !executeQuery() )
					return false;
			}
			while ( EndSelect() == false ); // row lock
			
			return HasRows();
		}
			
		public bool select_rows_par_oper_valor ( string val_nu_parcelas, string val_en_operacao, string val_vr_total )
		{
			do
			{
				StartSelect();
				fieldSelection();
			
				m_gen_dbStatement.AddWhereGreaterEqual ( TB_LOG_TRANSACOES.nu_parcelas, val_nu_parcelas , TB_LOG_TRANSACOES.type_nu_parcelas);
				m_gen_dbStatement.AddWhere ( TB_LOG_TRANSACOES.en_operacao, val_en_operacao , TB_LOG_TRANSACOES.type_en_operacao);
				m_gen_dbStatement.AddWhereGreaterEqual ( TB_LOG_TRANSACOES.vr_total, val_vr_total , TB_LOG_TRANSACOES.type_vr_total);
			
				m_gen_dbStatement.AddOrderBy ( TB_LOG_TRANSACOES.dt_transacao );
			
				if ( !executeQuery() )
					return false;
			}
			while ( EndSelect() == false ); // row lock
			
			return HasRows();
		}
			
		public bool select_rows_par_oper_valor_dt ( string val_nu_parcelas, string val_en_operacao, string val_vr_total, string val_dt_transacao, string val_dt_transacao1 )
		{
			do
			{
				StartSelect();
				fieldSelection();
			
				m_gen_dbStatement.AddWhereGreaterEqual ( TB_LOG_TRANSACOES.nu_parcelas, val_nu_parcelas , TB_LOG_TRANSACOES.type_nu_parcelas);
				m_gen_dbStatement.AddWhere ( TB_LOG_TRANSACOES.en_operacao, val_en_operacao , TB_LOG_TRANSACOES.type_en_operacao);
				m_gen_dbStatement.AddWhereGreaterEqual ( TB_LOG_TRANSACOES.vr_total, val_vr_total , TB_LOG_TRANSACOES.type_vr_total);
				m_gen_dbStatement.AddWhereGreaterEqual ( TB_LOG_TRANSACOES.dt_transacao, val_dt_transacao , TB_LOG_TRANSACOES.type_dt_transacao);
				m_gen_dbStatement.AddWhereLessThanEqual ( TB_LOG_TRANSACOES.dt_transacao, val_dt_transacao1 , TB_LOG_TRANSACOES.type_dt_transacao);
			
				m_gen_dbStatement.AddOrderBy ( TB_LOG_TRANSACOES.dt_transacao );
			
				if ( !executeQuery() )
					return false;
			}
			while ( EndSelect() == false ); // row lock
			
			return HasRows();
		}
			
		public bool select_rows_par_oper_valor_dt_ini ( string val_nu_parcelas, string val_en_operacao, string val_vr_total, string val_dt_transacao )
		{
			do
			{
				StartSelect();
				fieldSelection();
			
				m_gen_dbStatement.AddWhereGreaterEqual ( TB_LOG_TRANSACOES.nu_parcelas, val_nu_parcelas , TB_LOG_TRANSACOES.type_nu_parcelas);
				m_gen_dbStatement.AddWhere ( TB_LOG_TRANSACOES.en_operacao, val_en_operacao , TB_LOG_TRANSACOES.type_en_operacao);
				m_gen_dbStatement.AddWhereGreaterEqual ( TB_LOG_TRANSACOES.vr_total, val_vr_total , TB_LOG_TRANSACOES.type_vr_total);
				m_gen_dbStatement.AddWhereGreaterEqual ( TB_LOG_TRANSACOES.dt_transacao, val_dt_transacao , TB_LOG_TRANSACOES.type_dt_transacao);
			
				m_gen_dbStatement.AddOrderBy ( TB_LOG_TRANSACOES.dt_transacao );
			
				if ( !executeQuery() )
					return false;
			}
			while ( EndSelect() == false ); // row lock
			
			return HasRows();
		}
			
		public bool select_rows_term_emp_dt ( string val_fk_terminal, string val_fk_empresa, string val_dt_transacao, string val_dt_transacao1 )
		{
			do
			{
				StartSelect();
				fieldSelection();
			
				m_gen_dbStatement.AddWhere ( TB_LOG_TRANSACOES.fk_terminal, val_fk_terminal , TB_LOG_TRANSACOES.type_fk_terminal);
				m_gen_dbStatement.AddWhere ( TB_LOG_TRANSACOES.fk_empresa, val_fk_empresa , TB_LOG_TRANSACOES.type_fk_empresa);
				m_gen_dbStatement.AddWhereGreaterEqual ( TB_LOG_TRANSACOES.dt_transacao, val_dt_transacao , TB_LOG_TRANSACOES.type_dt_transacao);
				m_gen_dbStatement.AddWhereLessThanEqual ( TB_LOG_TRANSACOES.dt_transacao, val_dt_transacao1 , TB_LOG_TRANSACOES.type_dt_transacao);
			
				m_gen_dbStatement.AddOrderBy ( TB_LOG_TRANSACOES.dt_transacao );
			
				if ( !executeQuery() )
					return false;
			}
			while ( EndSelect() == false ); // row lock
			
			return HasRows();
		}
			
		public bool select_rows_term_emp_dt_ini ( string val_fk_terminal, string val_fk_empresa, string val_dt_transacao )
		{
			do
			{
				StartSelect();
				fieldSelection();
			
				m_gen_dbStatement.AddWhere ( TB_LOG_TRANSACOES.fk_terminal, val_fk_terminal , TB_LOG_TRANSACOES.type_fk_terminal);
				m_gen_dbStatement.AddWhere ( TB_LOG_TRANSACOES.fk_empresa, val_fk_empresa , TB_LOG_TRANSACOES.type_fk_empresa);
				m_gen_dbStatement.AddWhereGreaterEqual ( TB_LOG_TRANSACOES.dt_transacao, val_dt_transacao , TB_LOG_TRANSACOES.type_dt_transacao);
			
				m_gen_dbStatement.AddOrderBy ( TB_LOG_TRANSACOES.dt_transacao );
			
				if ( !executeQuery() )
					return false;
			}
			while ( EndSelect() == false ); // row lock
			
			return HasRows();
		}
			
		public bool select_rows_dt ( string val_dt_transacao, string val_dt_transacao1 )
		{
			do
			{
				StartSelect();
				fieldSelection();
			
				m_gen_dbStatement.AddWhereGreaterEqual ( TB_LOG_TRANSACOES.dt_transacao, val_dt_transacao , TB_LOG_TRANSACOES.type_dt_transacao);
				m_gen_dbStatement.AddWhereLessThanEqual ( TB_LOG_TRANSACOES.dt_transacao, val_dt_transacao1 , TB_LOG_TRANSACOES.type_dt_transacao);
			
				m_gen_dbStatement.AddOrderBy ( TB_LOG_TRANSACOES.dt_transacao );
			
				if ( !executeQuery() )
					return false;
			}
			while ( EndSelect() == false ); // row lock
			
			return HasRows();
		}
			
		public bool select_rows_dt_ini ( string val_dt_transacao )
		{
			do
			{
				StartSelect();
				fieldSelection();
			
				m_gen_dbStatement.AddWhereGreaterEqual ( TB_LOG_TRANSACOES.dt_transacao, val_dt_transacao , TB_LOG_TRANSACOES.type_dt_transacao);
			
				m_gen_dbStatement.AddOrderBy ( TB_LOG_TRANSACOES.dt_transacao );
			
				if ( !executeQuery() )
					return false;
			}
			while ( EndSelect() == false ); // row lock
			
			return HasRows();
		}
			
		public bool select_rows_dt_cart ( string val_dt_transacao, string val_dt_transacao1, string val_fk_cartao )
		{
			do
			{
				StartSelect();
				fieldSelection();
			
				m_gen_dbStatement.AddWhereGreaterEqual ( TB_LOG_TRANSACOES.dt_transacao, val_dt_transacao , TB_LOG_TRANSACOES.type_dt_transacao);
				m_gen_dbStatement.AddWhereLessThan ( TB_LOG_TRANSACOES.dt_transacao, val_dt_transacao1 , TB_LOG_TRANSACOES.type_dt_transacao);
				m_gen_dbStatement.AddWhere ( TB_LOG_TRANSACOES.fk_cartao, val_fk_cartao , TB_LOG_TRANSACOES.type_fk_cartao);
			
				m_gen_dbStatement.AddOrderBy ( TB_LOG_TRANSACOES.dt_transacao );
			
				if ( !executeQuery() )
					return false;
			}
			while ( EndSelect() == false ); // row lock
			
			return HasRows();
		}
			
		public bool select_rows_nsu_oper ( string val_nu_nsu, string val_en_operacao, string val_dt_transacao, string val_dt_transacao1 )
		{
			do
			{
				StartSelect();
				fieldSelection();
			
				m_gen_dbStatement.AddWhere ( TB_LOG_TRANSACOES.nu_nsu, val_nu_nsu , TB_LOG_TRANSACOES.type_nu_nsu);
				m_gen_dbStatement.AddWhere ( TB_LOG_TRANSACOES.en_operacao, val_en_operacao , TB_LOG_TRANSACOES.type_en_operacao);
				m_gen_dbStatement.AddWhereGreaterEqual ( TB_LOG_TRANSACOES.dt_transacao, val_dt_transacao , TB_LOG_TRANSACOES.type_dt_transacao);
				m_gen_dbStatement.AddWhereLessThan ( TB_LOG_TRANSACOES.dt_transacao, val_dt_transacao1 , TB_LOG_TRANSACOES.type_dt_transacao);
			
				if ( !executeQuery() )
					return false;
			}
			while ( EndSelect() == false ); // row lock
			
			return HasRows();
		}
			
		public bool select_rows_repasse ( string val_tg_contabil, string val_tg_confirmada, string val_dt_transacao, string val_dt_transacao1, string val_fk_loja )
		{
			do
			{
				StartSelect();
				fieldSelection();
			
				m_gen_dbStatement.AddWhere ( TB_LOG_TRANSACOES.tg_contabil, val_tg_contabil , TB_LOG_TRANSACOES.type_tg_contabil);
				m_gen_dbStatement.AddWhere ( TB_LOG_TRANSACOES.tg_confirmada, val_tg_confirmada , TB_LOG_TRANSACOES.type_tg_confirmada);
				m_gen_dbStatement.AddWhereGreaterEqual ( TB_LOG_TRANSACOES.dt_transacao, val_dt_transacao , TB_LOG_TRANSACOES.type_dt_transacao);
				m_gen_dbStatement.AddWhereLessThan ( TB_LOG_TRANSACOES.dt_transacao, val_dt_transacao1 , TB_LOG_TRANSACOES.type_dt_transacao);
				m_gen_dbStatement.AddWhere ( TB_LOG_TRANSACOES.fk_loja, val_fk_loja , TB_LOG_TRANSACOES.type_fk_loja);
			
				m_gen_dbStatement.AddOrderBy ( TB_LOG_TRANSACOES.dt_transacao );
			
				if ( !executeQuery() )
					return false;
			}
			while ( EndSelect() == false ); // row lock
			
			return HasRows();
		}
			
		public bool select_rows_term_vr ( string val_fk_terminal, string val_vr_total )
		{
			do
			{
				StartSelect();
				fieldSelection();
			
				m_gen_dbStatement.AddWhere ( TB_LOG_TRANSACOES.fk_terminal, val_fk_terminal , TB_LOG_TRANSACOES.type_fk_terminal);
				m_gen_dbStatement.AddWhere ( TB_LOG_TRANSACOES.vr_total, val_vr_total , TB_LOG_TRANSACOES.type_vr_total);
			
				m_gen_dbStatement.AddOrderBy ( TB_LOG_TRANSACOES.dt_transacao );
			
				if ( !executeQuery() )
					return false;
			}
			while ( EndSelect() == false ); // row lock
			
			return HasRows();
		}

        public bool select_rows_loj_vr(string val_fk_loja, string val_vr_total, string val_nu_nsuOrig)
        {
            do
            {
                StartSelect();
                fieldSelection();

                m_gen_dbStatement.AddWhere(TB_LOG_TRANSACOES.fk_loja, val_fk_loja, TB_LOG_TRANSACOES.type_fk_loja);
                m_gen_dbStatement.AddWhere(TB_LOG_TRANSACOES.vr_total, val_vr_total, TB_LOG_TRANSACOES.type_vr_total);
                m_gen_dbStatement.AddWhere(TB_LOG_TRANSACOES.nu_nsuOrig, val_nu_nsuOrig, TB_LOG_TRANSACOES.type_nu_nsuOrig);

                m_gen_dbStatement.AddOrderBy(TB_LOG_TRANSACOES.dt_transacao);

                if (!executeQuery())
                    return false;
            }
            while (EndSelect() == false); // row lock

            return HasRows();
        }

        public bool select_rows_dt_emp ( string val_dt_transacao, string val_dt_transacao1, string val_fk_empresa )
		{
			do
			{
				StartSelect();
				fieldSelection();
			
				m_gen_dbStatement.AddWhereGreaterEqual ( TB_LOG_TRANSACOES.dt_transacao, val_dt_transacao , TB_LOG_TRANSACOES.type_dt_transacao);
				m_gen_dbStatement.AddWhereLessThan ( TB_LOG_TRANSACOES.dt_transacao, val_dt_transacao1 , TB_LOG_TRANSACOES.type_dt_transacao);
				m_gen_dbStatement.AddWhere ( TB_LOG_TRANSACOES.fk_empresa, val_fk_empresa , TB_LOG_TRANSACOES.type_fk_empresa);
			
				m_gen_dbStatement.AddOrderBy ( TB_LOG_TRANSACOES.dt_transacao );
			
				if ( !executeQuery() )
					return false;
			}
			while ( EndSelect() == false ); // row lock
			
			return HasRows();
		}
			
		public bool select_rows_dt_loj ( string val_dt_transacao, string val_dt_transacao1, string val_fk_loja )
		{
			do
			{
				StartSelect();
				fieldSelection();
			
				m_gen_dbStatement.AddWhereGreaterEqual ( TB_LOG_TRANSACOES.dt_transacao, val_dt_transacao , TB_LOG_TRANSACOES.type_dt_transacao);
				m_gen_dbStatement.AddWhereLessThan ( TB_LOG_TRANSACOES.dt_transacao, val_dt_transacao1 , TB_LOG_TRANSACOES.type_dt_transacao);
				m_gen_dbStatement.AddWhere ( TB_LOG_TRANSACOES.fk_loja, val_fk_loja , TB_LOG_TRANSACOES.type_fk_loja);
			
				m_gen_dbStatement.AddOrderBy ( TB_LOG_TRANSACOES.dt_transacao );
			
				if ( !executeQuery() )
					return false;
			}
			while ( EndSelect() == false ); // row lock
			
			return HasRows();
		}
			
		public bool select_rows_nsu_fix ( string val_nu_nsu, string val_dt_transacao )
		{
			do
			{
				StartSelect();
				fieldSelection();
			
				m_gen_dbStatement.AddWhere ( TB_LOG_TRANSACOES.nu_nsu, val_nu_nsu , TB_LOG_TRANSACOES.type_nu_nsu);
				m_gen_dbStatement.AddWhere ( TB_LOG_TRANSACOES.dt_transacao, val_dt_transacao , TB_LOG_TRANSACOES.type_dt_transacao);
			
				if ( !executeQuery() )
					return false;
			}
			while ( EndSelect() == false ); // row lock
			
			return HasRows();
		}
			
		public bool select_rows_relat_parc ( string val_nu_parcelas )
		{
			do
			{
				StartSelect();
				fieldSelection();
			
				m_gen_dbStatement.AddWhere ( TB_LOG_TRANSACOES.nu_parcelas, val_nu_parcelas , TB_LOG_TRANSACOES.type_nu_parcelas);
			
				if ( !executeQuery() )
					return false;
			}
			while ( EndSelect() == false ); // row lock
			
			return HasRows();
		}
			
		public bool select_rows_graph_financ ( string val_dt_transacao, string val_dt_transacao1, string val_tg_confirmada )
		{
			do
			{
				StartSelect();
				fieldSelection();
			
				m_gen_dbStatement.AddWhereGreaterEqual ( TB_LOG_TRANSACOES.dt_transacao, val_dt_transacao , TB_LOG_TRANSACOES.type_dt_transacao);
				m_gen_dbStatement.AddWhereLessThan ( TB_LOG_TRANSACOES.dt_transacao, val_dt_transacao1 , TB_LOG_TRANSACOES.type_dt_transacao);
				m_gen_dbStatement.AddWhere ( TB_LOG_TRANSACOES.tg_confirmada, val_tg_confirmada , TB_LOG_TRANSACOES.type_tg_confirmada);
			
				m_gen_dbStatement.AddOrderBy ( TB_LOG_TRANSACOES.dt_transacao );
			
				if ( !executeQuery() )
					return false;
			}
			while ( EndSelect() == false ); // row lock
			
			return HasRows();
		}
			
		public bool select_rows_graph_financ_loj ( string val_dt_transacao, string val_dt_transacao1, string val_tg_confirmada, string val_fk_loja, string val_fk_empresa )
		{
			do
			{
				StartSelect();
				fieldSelection();
			
				m_gen_dbStatement.AddWhereGreaterEqual ( TB_LOG_TRANSACOES.dt_transacao, val_dt_transacao , TB_LOG_TRANSACOES.type_dt_transacao);
				m_gen_dbStatement.AddWhereLessThan ( TB_LOG_TRANSACOES.dt_transacao, val_dt_transacao1 , TB_LOG_TRANSACOES.type_dt_transacao);
				m_gen_dbStatement.AddWhere ( TB_LOG_TRANSACOES.tg_confirmada, val_tg_confirmada , TB_LOG_TRANSACOES.type_tg_confirmada);
				m_gen_dbStatement.AddWhere ( TB_LOG_TRANSACOES.fk_loja, val_fk_loja , TB_LOG_TRANSACOES.type_fk_loja);
				m_gen_dbStatement.AddWhere ( TB_LOG_TRANSACOES.fk_empresa, val_fk_empresa , TB_LOG_TRANSACOES.type_fk_empresa);
			
				m_gen_dbStatement.AddOrderBy ( TB_LOG_TRANSACOES.dt_transacao );
			
				if ( !executeQuery() )
					return false;
			}
			while ( EndSelect() == false ); // row lock
			
			return HasRows();
		}
			
		public bool select_rows_graph_financ_emp ( string val_dt_transacao, string val_dt_transacao1, string val_tg_confirmada, string val_fk_empresa )
		{
			do
			{
				StartSelect();
				fieldSelection();
			
				m_gen_dbStatement.AddWhereGreaterEqual ( TB_LOG_TRANSACOES.dt_transacao, val_dt_transacao , TB_LOG_TRANSACOES.type_dt_transacao);
				m_gen_dbStatement.AddWhereLessThan ( TB_LOG_TRANSACOES.dt_transacao, val_dt_transacao1 , TB_LOG_TRANSACOES.type_dt_transacao);
				m_gen_dbStatement.AddWhere ( TB_LOG_TRANSACOES.tg_confirmada, val_tg_confirmada , TB_LOG_TRANSACOES.type_tg_confirmada);
				m_gen_dbStatement.AddWhere ( TB_LOG_TRANSACOES.fk_empresa, val_fk_empresa , TB_LOG_TRANSACOES.type_fk_empresa);
			
				m_gen_dbStatement.AddOrderBy ( TB_LOG_TRANSACOES.dt_transacao );
			
				if ( !executeQuery() )
					return false;
			}
			while ( EndSelect() == false ); // row lock
			
			return HasRows();
		}
			
		public bool select_rows_emp_dt ( string val_fk_empresa, string val_dt_transacao, string val_dt_transacao1, string val_tg_confirmada )
		{
			do
			{
				StartSelect();
				fieldSelection();
			
				m_gen_dbStatement.AddWhere ( TB_LOG_TRANSACOES.fk_empresa, val_fk_empresa , TB_LOG_TRANSACOES.type_fk_empresa);
				m_gen_dbStatement.AddWhereGreaterEqual ( TB_LOG_TRANSACOES.dt_transacao, val_dt_transacao , TB_LOG_TRANSACOES.type_dt_transacao);
				m_gen_dbStatement.AddWhereLessThan ( TB_LOG_TRANSACOES.dt_transacao, val_dt_transacao1 , TB_LOG_TRANSACOES.type_dt_transacao);
				m_gen_dbStatement.AddWhere ( TB_LOG_TRANSACOES.tg_confirmada, val_tg_confirmada , TB_LOG_TRANSACOES.type_tg_confirmada);
			
				m_gen_dbStatement.AddOrderBy ( TB_LOG_TRANSACOES.dt_transacao );
			
				if ( !executeQuery() )
					return false;
			}
			while ( EndSelect() == false ); // row lock
			
			return HasRows();
		}
			
		public bool select_rows_dt_web ( string val_dt_transacao, string val_dt_transacao1, ref ArrayList lst_fk_cartao_2 )
		{
			do
			{
				StartSelect();
				fieldSelection();
			
				m_gen_dbStatement.AddWhereGreaterEqual ( TB_LOG_TRANSACOES.dt_transacao, val_dt_transacao , TB_LOG_TRANSACOES.type_dt_transacao);
				m_gen_dbStatement.AddWhereLessThan ( TB_LOG_TRANSACOES.dt_transacao, val_dt_transacao1 , TB_LOG_TRANSACOES.type_dt_transacao);
				m_gen_dbStatement.AddWhereIn ( TB_LOG_TRANSACOES.fk_cartao, ref lst_fk_cartao_2 );
			
				m_gen_dbStatement.AddOrderBy ( TB_LOG_TRANSACOES.dt_transacao );
			
				if ( !executeQuery() )
					return false;
			}
			while ( EndSelect() == false ); // row lock
			
			return HasRows();
		}
		
		#if DEBUG
		
		public bool setup ( bool IsTruncate, ref string id, string var_fk_terminal, string var_dt_transacao, string var_nu_nsu, string var_fk_empresa, string var_fk_cartao, string var_vr_total, string var_nu_parcelas, string var_nu_cod_erro, string var_tg_confirmada, string var_nu_nsuOrig, string var_en_operacao, string var_st_msg_transacao, string var_tg_contabil, string var_fk_loja, string var_vr_saldo_disp, string var_vr_saldo_disp_tot, string var_st_doc )
		{
			if ( IsTruncate ) 
			{
				i_unique = "";
				this.delete();
			}
		
			set_fk_terminal ( var_fk_terminal );
			set_dt_transacao ( var_dt_transacao );
			set_nu_nsu ( var_nu_nsu );
			set_fk_empresa ( var_fk_empresa );
			set_fk_cartao ( var_fk_cartao );
			set_vr_total ( var_vr_total );
			set_nu_parcelas ( var_nu_parcelas );
			set_nu_cod_erro ( var_nu_cod_erro );
			set_tg_confirmada ( var_tg_confirmada );
			set_nu_nsuOrig ( var_nu_nsuOrig );
			set_en_operacao ( var_en_operacao );
			set_st_msg_transacao ( var_st_msg_transacao );
			set_tg_contabil ( var_tg_contabil );
			set_fk_loja ( var_fk_loja );
			set_vr_saldo_disp ( var_vr_saldo_disp );
			set_vr_saldo_disp_tot ( var_vr_saldo_disp_tot );
			set_st_doc ( var_st_doc );
			
			if ( create_LOG_Transacoes() == false )
			{
				return false;
			}
			
			id = get_identity();
			return true;
		}
		
		#endif
		
	}
}
