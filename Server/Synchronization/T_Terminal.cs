// ###################################################### 
// ## SyCraf Engine Codegen                          #### 
// ###################################################### 
// ## This file is entirely written by               #### 
// ## the construction bot. DO NOT EDIT THIS FILE.   #### 
// ###################################################### 

using System;
using System.IO;
using System.Threading;
using System.Collections;

namespace SyCrafEngine
{
	public class T_Terminal : Synchronization
	{
		private string i_unique = "0";
		private string nu_terminal = "";
		private string fk_loja = "0";
		private string st_localizacao = "";
		
		public int var_FieldCount = 4;
		
		public T_Terminal ()
		{
			var_Serial = TB_T_TERMINAL.serial;
			var_Tablename = TB_T_TERMINAL.Alias;
		}
		
		public T_Terminal ( Transaction trx )
		{
			AcquireTransaction ( ref trx );
			
			var_Serial = TB_T_TERMINAL.serial;
			var_Tablename = TB_T_TERMINAL.Alias;
			
			TraceLog ( var_Tablename + " serial : " + var_serialNumber);
		}
		
		public string exportNames()
		{
			return "nu_terminal,fk_loja,st_localizacao";
		}
		
		public string exportCSV()
		{
			return i_unique + str_field_sep + nu_terminal + str_field_sep + fk_loja + str_field_sep + st_localizacao;
		}
		
		public void Reset()
		{
			i_unique = "0";
			nu_terminal = "";
			fk_loja = "0";
			st_localizacao = "";
		
			ReleaseExclusive();
		}
		
		public void copy ( ref T_Terminal cpy )
		{
			nu_terminal = cpy.nu_terminal;
			fk_loja = cpy.fk_loja;
			st_localizacao = cpy.st_localizacao;
		}
		
		public override void fetchRetrieve ( ref DB_Row row )
		{
			i_unique = row.GetField ( TB_T_TERMINAL.i_unique );
			nu_terminal = row.GetField ( TB_T_TERMINAL.nu_terminal );
			fk_loja = row.GetField ( TB_T_TERMINAL.fk_loja );
			st_localizacao = row.GetField ( TB_T_TERMINAL.st_localizacao );
		}
		
		public bool synchronize_T_Terminal ( )
		{
			try{
			
			if ( m_hshChangedFields.Count == 0 )
				return true;
			
			StartUpdate();
		
			if ( m_hshChangedFields [ "nu_terminal" ] != null )
				m_gen_dbStatement.AddUpdate ( TB_T_TERMINAL.nu_terminal , nu_terminal , TB_T_TERMINAL.type_nu_terminal );
			if ( m_hshChangedFields [ "fk_loja" ] != null )
				m_gen_dbStatement.AddUpdate ( TB_T_TERMINAL.fk_loja , fk_loja , TB_T_TERMINAL.type_fk_loja );
			if ( m_hshChangedFields [ "st_localizacao" ] != null )
				m_gen_dbStatement.AddUpdate ( TB_T_TERMINAL.st_localizacao , st_localizacao , TB_T_TERMINAL.type_st_localizacao );
		
			m_gen_dbStatement.AddWhere ( TB_T_TERMINAL.i_unique, i_unique, TB_T_TERMINAL.type_i_unique );
		
			} catch ( System.Exception ex ) {
				StreamWriter wr = new StreamWriter ( 	"CRITICAL_" + var_Tablename + "_" + "_" + DateTime.Now.Year.ToString() + DateTime.Now.Month.ToString().PadLeft ( 2, '0' ) + DateTime.Now.Day.ToString().PadLeft ( 2, '0' ) + "_" + DateTime.Now.Hour.ToString().PadLeft ( 2, '0' ) + DateTime.Now.Minute.ToString().PadLeft ( 2, '0' ) + DateTime.Now.Second.ToString().PadLeft ( 2, '0' ) + ".txt" );
				wr.WriteLine ( ex.ToString() );
				wr.Flush();
				wr.Close();
			}
		
			return Update();
		}
			
		public string get_identity() { return i_unique; } 
		public string get_nu_terminal() { return nu_terminal; } 
		public string get_fk_loja() { return fk_loja; } 
		public string get_st_localizacao() { return st_localizacao; } 
			
		public long get_int_fk_loja() { return Convert.ToInt64 ( fk_loja ); } 
			
		public void set_nu_terminal ( string val ) { nu_terminal = val; m_hshChangedFields [ "nu_terminal" ]="."; } 
		public void set_fk_loja ( string val ) { fk_loja = val; m_hshChangedFields [ "fk_loja" ]="."; } 
		public void set_st_localizacao ( string val ) { st_localizacao = val; m_hshChangedFields [ "st_localizacao" ]="."; } 
		
		public void set_fk_loja ( long val ) { fk_loja = Convert.ToString(val); m_hshChangedFields [ "fk_loja" ]="."; } 
			
		public void fieldSelection()
		{
			m_gen_dbStatement.AddSelect ( TB_T_TERMINAL.i_unique );
			m_gen_dbStatement.AddSelect ( TB_T_TERMINAL.nu_terminal );
			m_gen_dbStatement.AddSelect ( TB_T_TERMINAL.fk_loja );
			m_gen_dbStatement.AddSelect ( TB_T_TERMINAL.st_localizacao );
		}
			
		public bool selectAll()
		{
			do
			{
				StartSelect();
				fieldSelection();
				
				if ( !executeQuery() )
					return false;
			}
			while ( EndSelect() == false ); // row lock
			
			return  HasRows();
		}
		
		public bool selectIdentity ( string identity )
		{
			do
			{
				StartSelect();
				fieldSelection();
			
				m_gen_dbStatement.AddWhere ( TB_T_TERMINAL.i_unique, identity, TB_T_TERMINAL.type_i_unique );
			
				if ( !executeQuery())
					return false;
			}
			while ( EndSelect() == false ); // row lock
			
			if ( HasRows() == true)
			{
				DB_Row row = m_db_result.GetFirstRow();
				fetchRetrieve ( ref row );
				return true;
			}
			
			return false;
		}
		
		public bool create_T_Terminal ( )
		{
			try{
			string new_id = "";
			
			StartInsert();
			
			m_gen_dbStatement.AddValue ( TB_T_TERMINAL.nu_terminal, nu_terminal, TB_T_TERMINAL.type_nu_terminal );
			m_gen_dbStatement.AddValue ( TB_T_TERMINAL.fk_loja, fk_loja, TB_T_TERMINAL.type_fk_loja );
			m_gen_dbStatement.AddValue ( TB_T_TERMINAL.st_localizacao, st_localizacao, TB_T_TERMINAL.type_st_localizacao );
			
			if ( !ExecuteScalar ( ref new_id ) )
				return false;
			
			i_unique = new_id;
			
			} catch ( System.Exception ex ) {
				StreamWriter wr = new StreamWriter ( 	"CRITICAL_" + var_Tablename + "_" + "_" + DateTime.Now.Year.ToString() + DateTime.Now.Month.ToString().PadLeft ( 2, '0' ) + DateTime.Now.Day.ToString().PadLeft ( 2, '0' ) + "_" + DateTime.Now.Hour.ToString().PadLeft ( 2, '0' ) + DateTime.Now.Minute.ToString().PadLeft ( 2, '0' ) + DateTime.Now.Second.ToString().PadLeft ( 2, '0' ) + ".txt" );
				wr.WriteLine ( ex.ToString() );
				wr.Flush();
				wr.Close();
			}
			
			return true;
		}
			
		public bool delete ( )
		{
		
			bool ret = false;
		
			try{
			StartDelete();
			
			if ( i_unique != "0" )
				m_gen_dbStatement.AddWhere ( TB_T_TERMINAL.i_unique, i_unique, TB_T_TERMINAL.type_i_unique );
			
			ret = Execute();
			
			} catch ( System.Exception ex ) {
				StreamWriter wr = new StreamWriter ( 	"CRITICAL_" + var_Tablename + "_" + "_" + DateTime.Now.Year.ToString() + DateTime.Now.Month.ToString().PadLeft ( 2, '0' ) + DateTime.Now.Day.ToString().PadLeft ( 2, '0' ) + "_" + DateTime.Now.Hour.ToString().PadLeft ( 2, '0' ) + DateTime.Now.Minute.ToString().PadLeft ( 2, '0' ) + DateTime.Now.Second.ToString().PadLeft ( 2, '0' ) + ".txt" );
				wr.WriteLine ( ex.ToString() );
				wr.Flush();
				wr.Close();
			}
			
			return ret; 
		}
			
		public bool select_fk_loja ( string val_fk_loja )
		{
			do
			{
				StartSelect();
				fieldSelection();
			
				m_gen_dbStatement.AddWhere ( TB_T_TERMINAL.fk_loja, val_fk_loja , TB_T_TERMINAL.type_fk_loja);
			
				if ( !executeQuery() )
					return false;
			}
			while ( EndSelect() == false ); // row lock
			
			return HasRows();
		}
			
		public bool select_rows_terminal ( string val_nu_terminal )
		{
			do
			{
				StartSelect();
				fieldSelection();
			
				m_gen_dbStatement.AddWhere ( TB_T_TERMINAL.nu_terminal, val_nu_terminal , TB_T_TERMINAL.type_nu_terminal);
			
				if ( !executeQuery() )
					return false;
			}
			while ( EndSelect() == false ); // row lock
			
			return HasRows();
		}
		
		#if DEBUG
		
		public bool setup ( bool IsTruncate, ref string id, string var_nu_terminal, string var_fk_loja, string var_st_localizacao )
		{
			if ( IsTruncate ) 
			{
				i_unique = "";
				this.delete();
			}
		
			set_nu_terminal ( var_nu_terminal );
			set_fk_loja ( var_fk_loja );
			set_st_localizacao ( var_st_localizacao );
			
			if ( create_T_Terminal() == false )
			{
				return false;
			}
			
			id = get_identity();
			return true;
		}
		
		#endif
		
	}
}
