// ###################################################### 
// ## SyCraf Engine Codegen                          #### 
// ###################################################### 
// ## This file is entirely written by               #### 
// ## the construction bot. DO NOT EDIT THIS FILE.   #### 
// ###################################################### 

using System;
using System.Windows.Forms;
using System.IO;

namespace SyCrafEngine
{
	public class Backup
	{
		public int version = 23;
		
		public void doBackup ( string path_dir, string connectionString, ProgressBar pg )
		{
			DB_Access dbAccess = new DB_Access ( connectionString );
			
			StreamWriter 	configFile;
			FileStream 		file;
		
			if ( File.Exists ( path_dir ) )
			{
				file = new FileStream ( path_dir, FileMode.Truncate, FileAccess.Write );
			}
			else
			{
				file = new FileStream ( path_dir, FileMode.CreateNew, FileAccess.Write );
			}
		    
			configFile = new StreamWriter ( file  );	
				
			configFile.WriteLine ( version.ToString() );
				
 			configFile.WriteLine ( dbAccess.retrievePatchDB() );
				
 			pg.Minimum = 1;
 			pg.Maximum = 46;
 			
 			pg.Value   = 1;
 			Application.DoEvents();
 			
			T_MensagemEdu table_T_MensagemEdu = new T_MensagemEdu();
			table_T_MensagemEdu.SetAccess ( ref dbAccess );
			
			table_T_MensagemEdu.KeepNames = true;
			
			if ( table_T_MensagemEdu.selectAll() )
			{
				configFile.WriteLine ( table_T_MensagemEdu.RowCount() );
			
				while ( table_T_MensagemEdu.fetch() )
				{
					configFile.WriteLine ( table_T_MensagemEdu.exportCSV() );
				}
			}
			else	configFile.WriteLine ( table_T_MensagemEdu.RowCount() );
			
 			
 			pg.Value   = 2;
 			Application.DoEvents();
 			
			LINK_UsuarioTerminal table_LINK_UsuarioTerminal = new LINK_UsuarioTerminal();
			table_LINK_UsuarioTerminal.SetAccess ( ref dbAccess );
			
			table_LINK_UsuarioTerminal.KeepNames = true;
			
			if ( table_LINK_UsuarioTerminal.selectAll() )
			{
				configFile.WriteLine ( table_LINK_UsuarioTerminal.RowCount() );
			
				while ( table_LINK_UsuarioTerminal.fetch() )
				{
					configFile.WriteLine ( table_LINK_UsuarioTerminal.exportCSV() );
				}
			}
			else	configFile.WriteLine ( table_LINK_UsuarioTerminal.RowCount() );
			
 			
 			pg.Value   = 3;
 			Application.DoEvents();
 			
			T_BoletoEdu table_T_BoletoEdu = new T_BoletoEdu();
			table_T_BoletoEdu.SetAccess ( ref dbAccess );
			
			table_T_BoletoEdu.KeepNames = true;
			
			if ( table_T_BoletoEdu.selectAll() )
			{
				configFile.WriteLine ( table_T_BoletoEdu.RowCount() );
			
				while ( table_T_BoletoEdu.fetch() )
				{
					configFile.WriteLine ( table_T_BoletoEdu.exportCSV() );
				}
			}
			else	configFile.WriteLine ( table_T_BoletoEdu.RowCount() );
			
 			
 			pg.Value   = 4;
 			Application.DoEvents();
 			
			T_EmpresaAfiliada table_T_EmpresaAfiliada = new T_EmpresaAfiliada();
			table_T_EmpresaAfiliada.SetAccess ( ref dbAccess );
			
			table_T_EmpresaAfiliada.KeepNames = true;
			
			if ( table_T_EmpresaAfiliada.selectAll() )
			{
				configFile.WriteLine ( table_T_EmpresaAfiliada.RowCount() );
			
				while ( table_T_EmpresaAfiliada.fetch() )
				{
					configFile.WriteLine ( table_T_EmpresaAfiliada.exportCSV() );
				}
			}
			else	configFile.WriteLine ( table_T_EmpresaAfiliada.RowCount() );
			
 			
 			pg.Value   = 5;
 			Application.DoEvents();
 			
			LINK_RepasseParcela table_LINK_RepasseParcela = new LINK_RepasseParcela();
			table_LINK_RepasseParcela.SetAccess ( ref dbAccess );
			
			table_LINK_RepasseParcela.KeepNames = true;
			
			if ( table_LINK_RepasseParcela.selectAll() )
			{
				configFile.WriteLine ( table_LINK_RepasseParcela.RowCount() );
			
				while ( table_LINK_RepasseParcela.fetch() )
				{
					configFile.WriteLine ( table_LINK_RepasseParcela.exportCSV() );
				}
			}
			else	configFile.WriteLine ( table_LINK_RepasseParcela.RowCount() );
			
 			
 			pg.Value   = 6;
 			Application.DoEvents();
 			
			T_RepasseLoja table_T_RepasseLoja = new T_RepasseLoja();
			table_T_RepasseLoja.SetAccess ( ref dbAccess );
			
			table_T_RepasseLoja.KeepNames = true;
			
			if ( table_T_RepasseLoja.selectAll() )
			{
				configFile.WriteLine ( table_T_RepasseLoja.RowCount() );
			
				while ( table_T_RepasseLoja.fetch() )
				{
					configFile.WriteLine ( table_T_RepasseLoja.exportCSV() );
				}
			}
			else	configFile.WriteLine ( table_T_RepasseLoja.RowCount() );
			
 			
 			pg.Value   = 7;
 			Application.DoEvents();
 			
			LOG_GiftRanges table_LOG_GiftRanges = new LOG_GiftRanges();
			table_LOG_GiftRanges.SetAccess ( ref dbAccess );
			
			table_LOG_GiftRanges.KeepNames = true;
			
			if ( table_LOG_GiftRanges.selectAll() )
			{
				configFile.WriteLine ( table_LOG_GiftRanges.RowCount() );
			
				while ( table_LOG_GiftRanges.fetch() )
				{
					configFile.WriteLine ( table_LOG_GiftRanges.exportCSV() );
				}
			}
			else	configFile.WriteLine ( table_LOG_GiftRanges.RowCount() );
			
 			
 			pg.Value   = 8;
 			Application.DoEvents();
 			
			T_ChequesGift table_T_ChequesGift = new T_ChequesGift();
			table_T_ChequesGift.SetAccess ( ref dbAccess );
			
			table_T_ChequesGift.KeepNames = true;
			
			if ( table_T_ChequesGift.selectAll() )
			{
				configFile.WriteLine ( table_T_ChequesGift.RowCount() );
			
				while ( table_T_ChequesGift.fetch() )
				{
					configFile.WriteLine ( table_T_ChequesGift.exportCSV() );
				}
			}
			else	configFile.WriteLine ( table_T_ChequesGift.RowCount() );
			
 			
 			pg.Value   = 9;
 			Application.DoEvents();
 			
			LOG_VendaProdutoGift table_LOG_VendaProdutoGift = new LOG_VendaProdutoGift();
			table_LOG_VendaProdutoGift.SetAccess ( ref dbAccess );
			
			table_LOG_VendaProdutoGift.KeepNames = true;
			
			if ( table_LOG_VendaProdutoGift.selectAll() )
			{
				configFile.WriteLine ( table_LOG_VendaProdutoGift.RowCount() );
			
				while ( table_LOG_VendaProdutoGift.fetch() )
				{
					configFile.WriteLine ( table_LOG_VendaProdutoGift.exportCSV() );
				}
			}
			else	configFile.WriteLine ( table_LOG_VendaProdutoGift.RowCount() );
			
 			
 			pg.Value   = 10;
 			Application.DoEvents();
 			
			LOG_VendaCartaoGift table_LOG_VendaCartaoGift = new LOG_VendaCartaoGift();
			table_LOG_VendaCartaoGift.SetAccess ( ref dbAccess );
			
			table_LOG_VendaCartaoGift.KeepNames = true;
			
			if ( table_LOG_VendaCartaoGift.selectAll() )
			{
				configFile.WriteLine ( table_LOG_VendaCartaoGift.RowCount() );
			
				while ( table_LOG_VendaCartaoGift.fetch() )
				{
					configFile.WriteLine ( table_LOG_VendaCartaoGift.exportCSV() );
				}
			}
			else	configFile.WriteLine ( table_LOG_VendaCartaoGift.RowCount() );
			
 			
 			pg.Value   = 11;
 			Application.DoEvents();
 			
			T_Quiosque table_T_Quiosque = new T_Quiosque();
			table_T_Quiosque.SetAccess ( ref dbAccess );
			
			table_T_Quiosque.KeepNames = true;
			
			if ( table_T_Quiosque.selectAll() )
			{
				configFile.WriteLine ( table_T_Quiosque.RowCount() );
			
				while ( table_T_Quiosque.fetch() )
				{
					configFile.WriteLine ( table_T_Quiosque.exportCSV() );
				}
			}
			else	configFile.WriteLine ( table_T_Quiosque.RowCount() );
			
 			
 			pg.Value   = 12;
 			Application.DoEvents();
 			
			T_ExtraGift table_T_ExtraGift = new T_ExtraGift();
			table_T_ExtraGift.SetAccess ( ref dbAccess );
			
			table_T_ExtraGift.KeepNames = true;
			
			if ( table_T_ExtraGift.selectAll() )
			{
				configFile.WriteLine ( table_T_ExtraGift.RowCount() );
			
				while ( table_T_ExtraGift.fetch() )
				{
					configFile.WriteLine ( table_T_ExtraGift.exportCSV() );
				}
			}
			else	configFile.WriteLine ( table_T_ExtraGift.RowCount() );
			
 			
 			pg.Value   = 13;
 			Application.DoEvents();
 			
			LOG_Chamado table_LOG_Chamado = new LOG_Chamado();
			table_LOG_Chamado.SetAccess ( ref dbAccess );
			
			table_LOG_Chamado.KeepNames = true;
			
			if ( table_LOG_Chamado.selectAll() )
			{
				configFile.WriteLine ( table_LOG_Chamado.RowCount() );
			
				while ( table_LOG_Chamado.fetch() )
				{
					configFile.WriteLine ( table_LOG_Chamado.exportCSV() );
				}
			}
			else	configFile.WriteLine ( table_LOG_Chamado.RowCount() );
			
 			
 			pg.Value   = 14;
 			Application.DoEvents();
 			
			T_Chamado table_T_Chamado = new T_Chamado();
			table_T_Chamado.SetAccess ( ref dbAccess );
			
			table_T_Chamado.KeepNames = true;
			
			if ( table_T_Chamado.selectAll() )
			{
				configFile.WriteLine ( table_T_Chamado.RowCount() );
			
				while ( table_T_Chamado.fetch() )
				{
					configFile.WriteLine ( table_T_Chamado.exportCSV() );
				}
			}
			else	configFile.WriteLine ( table_T_Chamado.RowCount() );
			
 			
 			pg.Value   = 15;
 			Application.DoEvents();
 			
			LOG_NS_FAT table_LOG_NS_FAT = new LOG_NS_FAT();
			table_LOG_NS_FAT.SetAccess ( ref dbAccess );
			
			table_LOG_NS_FAT.KeepNames = true;
			
			if ( table_LOG_NS_FAT.selectAll() )
			{
				configFile.WriteLine ( table_LOG_NS_FAT.RowCount() );
			
				while ( table_LOG_NS_FAT.fetch() )
				{
					configFile.WriteLine ( table_LOG_NS_FAT.exportCSV() );
				}
			}
			else	configFile.WriteLine ( table_LOG_NS_FAT.RowCount() );
			
 			
 			pg.Value   = 16;
 			Application.DoEvents();
 			
			LOG_NSA table_LOG_NSA = new LOG_NSA();
			table_LOG_NSA.SetAccess ( ref dbAccess );
			
			table_LOG_NSA.KeepNames = true;
			
			if ( table_LOG_NSA.selectAll() )
			{
				configFile.WriteLine ( table_LOG_NSA.RowCount() );
			
				while ( table_LOG_NSA.fetch() )
				{
					configFile.WriteLine ( table_LOG_NSA.exportCSV() );
				}
			}
			else	configFile.WriteLine ( table_LOG_NSA.RowCount() );
			
 			
 			pg.Value   = 17;
 			Application.DoEvents();
 			
			T_RetCobranca table_T_RetCobranca = new T_RetCobranca();
			table_T_RetCobranca.SetAccess ( ref dbAccess );
			
			table_T_RetCobranca.KeepNames = true;
			
			if ( table_T_RetCobranca.selectAll() )
			{
				configFile.WriteLine ( table_T_RetCobranca.RowCount() );
			
				while ( table_T_RetCobranca.fetch() )
				{
					configFile.WriteLine ( table_T_RetCobranca.exportCSV() );
				}
			}
			else	configFile.WriteLine ( table_T_RetCobranca.RowCount() );
			
 			
 			pg.Value   = 18;
 			Application.DoEvents();
 			
			T_FaturamentoDetalhes table_T_FaturamentoDetalhes = new T_FaturamentoDetalhes();
			table_T_FaturamentoDetalhes.SetAccess ( ref dbAccess );
			
			table_T_FaturamentoDetalhes.KeepNames = true;
			
			if ( table_T_FaturamentoDetalhes.selectAll() )
			{
				configFile.WriteLine ( table_T_FaturamentoDetalhes.RowCount() );
			
				while ( table_T_FaturamentoDetalhes.fetch() )
				{
					configFile.WriteLine ( table_T_FaturamentoDetalhes.exportCSV() );
				}
			}
			else	configFile.WriteLine ( table_T_FaturamentoDetalhes.RowCount() );
			
 			
 			pg.Value   = 19;
 			Application.DoEvents();
 			
			T_Faturamento table_T_Faturamento = new T_Faturamento();
			table_T_Faturamento.SetAccess ( ref dbAccess );
			
			table_T_Faturamento.KeepNames = true;
			
			if ( table_T_Faturamento.selectAll() )
			{
				configFile.WriteLine ( table_T_Faturamento.RowCount() );
			
				while ( table_T_Faturamento.fetch() )
				{
					configFile.WriteLine ( table_T_Faturamento.exportCSV() );
				}
			}
			else	configFile.WriteLine ( table_T_Faturamento.RowCount() );
			
 			
 			pg.Value   = 20;
 			Application.DoEvents();
 			
			T_WebBlock table_T_WebBlock = new T_WebBlock();
			table_T_WebBlock.SetAccess ( ref dbAccess );
			
			table_T_WebBlock.KeepNames = true;
			
			if ( table_T_WebBlock.selectAll() )
			{
				configFile.WriteLine ( table_T_WebBlock.RowCount() );
			
				while ( table_T_WebBlock.fetch() )
				{
					configFile.WriteLine ( table_T_WebBlock.exportCSV() );
				}
			}
			else	configFile.WriteLine ( table_T_WebBlock.RowCount() );
			
 			
 			pg.Value   = 21;
 			Application.DoEvents();
 			
			LINK_Edu_FundoEmpresa table_LINK_Edu_FundoEmpresa = new LINK_Edu_FundoEmpresa();
			table_LINK_Edu_FundoEmpresa.SetAccess ( ref dbAccess );
			
			table_LINK_Edu_FundoEmpresa.KeepNames = true;
			
			if ( table_LINK_Edu_FundoEmpresa.selectAll() )
			{
				configFile.WriteLine ( table_LINK_Edu_FundoEmpresa.RowCount() );
			
				while ( table_LINK_Edu_FundoEmpresa.fetch() )
				{
					configFile.WriteLine ( table_LINK_Edu_FundoEmpresa.exportCSV() );
				}
			}
			else	configFile.WriteLine ( table_LINK_Edu_FundoEmpresa.RowCount() );
			
 			
 			pg.Value   = 22;
 			Application.DoEvents();
 			
			T_Edu_FundoEmpresa table_T_Edu_FundoEmpresa = new T_Edu_FundoEmpresa();
			table_T_Edu_FundoEmpresa.SetAccess ( ref dbAccess );
			
			table_T_Edu_FundoEmpresa.KeepNames = true;
			
			if ( table_T_Edu_FundoEmpresa.selectAll() )
			{
				configFile.WriteLine ( table_T_Edu_FundoEmpresa.RowCount() );
			
				while ( table_T_Edu_FundoEmpresa.fetch() )
				{
					configFile.WriteLine ( table_T_Edu_FundoEmpresa.exportCSV() );
				}
			}
			else	configFile.WriteLine ( table_T_Edu_FundoEmpresa.RowCount() );
			
 			
 			pg.Value   = 23;
 			Application.DoEvents();
 			
			LOG_Edu_RendimentoEmpresa table_LOG_Edu_RendimentoEmpresa = new LOG_Edu_RendimentoEmpresa();
			table_LOG_Edu_RendimentoEmpresa.SetAccess ( ref dbAccess );
			
			table_LOG_Edu_RendimentoEmpresa.KeepNames = true;
			
			if ( table_LOG_Edu_RendimentoEmpresa.selectAll() )
			{
				configFile.WriteLine ( table_LOG_Edu_RendimentoEmpresa.RowCount() );
			
				while ( table_LOG_Edu_RendimentoEmpresa.fetch() )
				{
					configFile.WriteLine ( table_LOG_Edu_RendimentoEmpresa.exportCSV() );
				}
			}
			else	configFile.WriteLine ( table_LOG_Edu_RendimentoEmpresa.RowCount() );
			
 			
 			pg.Value   = 24;
 			Application.DoEvents();
 			
			T_Edu_AplicacaoVirtual table_T_Edu_AplicacaoVirtual = new T_Edu_AplicacaoVirtual();
			table_T_Edu_AplicacaoVirtual.SetAccess ( ref dbAccess );
			
			table_T_Edu_AplicacaoVirtual.KeepNames = true;
			
			if ( table_T_Edu_AplicacaoVirtual.selectAll() )
			{
				configFile.WriteLine ( table_T_Edu_AplicacaoVirtual.RowCount() );
			
				while ( table_T_Edu_AplicacaoVirtual.fetch() )
				{
					configFile.WriteLine ( table_T_Edu_AplicacaoVirtual.exportCSV() );
				}
			}
			else	configFile.WriteLine ( table_T_Edu_AplicacaoVirtual.RowCount() );
			
 			
 			pg.Value   = 25;
 			Application.DoEvents();
 			
			T_Edu_EmpresaVirtual table_T_Edu_EmpresaVirtual = new T_Edu_EmpresaVirtual();
			table_T_Edu_EmpresaVirtual.SetAccess ( ref dbAccess );
			
			table_T_Edu_EmpresaVirtual.KeepNames = true;
			
			if ( table_T_Edu_EmpresaVirtual.selectAll() )
			{
				configFile.WriteLine ( table_T_Edu_EmpresaVirtual.RowCount() );
			
				while ( table_T_Edu_EmpresaVirtual.fetch() )
				{
					configFile.WriteLine ( table_T_Edu_EmpresaVirtual.exportCSV() );
				}
			}
			else	configFile.WriteLine ( table_T_Edu_EmpresaVirtual.RowCount() );
			
 			
 			pg.Value   = 26;
 			Application.DoEvents();
 			
			I_Batch table_I_Batch = new I_Batch();
			table_I_Batch.SetAccess ( ref dbAccess );
			
			table_I_Batch.KeepNames = true;
			
			if ( table_I_Batch.selectAll() )
			{
				configFile.WriteLine ( table_I_Batch.RowCount() );
			
				while ( table_I_Batch.fetch() )
				{
					configFile.WriteLine ( table_I_Batch.exportCSV() );
				}
			}
			else	configFile.WriteLine ( table_I_Batch.RowCount() );
			
 			
 			pg.Value   = 27;
 			Application.DoEvents();
 			
			LOG_Fechamento table_LOG_Fechamento = new LOG_Fechamento();
			table_LOG_Fechamento.SetAccess ( ref dbAccess );
			
			table_LOG_Fechamento.KeepNames = true;
			
			if ( table_LOG_Fechamento.selectAll() )
			{
				configFile.WriteLine ( table_LOG_Fechamento.RowCount() );
			
				while ( table_LOG_Fechamento.fetch() )
				{
					configFile.WriteLine ( table_LOG_Fechamento.exportCSV() );
				}
			}
			else	configFile.WriteLine ( table_LOG_Fechamento.RowCount() );
			
 			
 			pg.Value   = 28;
 			Application.DoEvents();
 			
			LINK_Agenda table_LINK_Agenda = new LINK_Agenda();
			table_LINK_Agenda.SetAccess ( ref dbAccess );
			
			table_LINK_Agenda.KeepNames = true;
			
			if ( table_LINK_Agenda.selectAll() )
			{
				configFile.WriteLine ( table_LINK_Agenda.RowCount() );
			
				while ( table_LINK_Agenda.fetch() )
				{
					configFile.WriteLine ( table_LINK_Agenda.exportCSV() );
				}
			}
			else	configFile.WriteLine ( table_LINK_Agenda.RowCount() );
			
 			
 			pg.Value   = 29;
 			Application.DoEvents();
 			
			LINK_PFAtivacao table_LINK_PFAtivacao = new LINK_PFAtivacao();
			table_LINK_PFAtivacao.SetAccess ( ref dbAccess );
			
			table_LINK_PFAtivacao.KeepNames = true;
			
			if ( table_LINK_PFAtivacao.selectAll() )
			{
				configFile.WriteLine ( table_LINK_PFAtivacao.RowCount() );
			
				while ( table_LINK_PFAtivacao.fetch() )
				{
					configFile.WriteLine ( table_LINK_PFAtivacao.exportCSV() );
				}
			}
			else	configFile.WriteLine ( table_LINK_PFAtivacao.RowCount() );
			
 			
 			pg.Value   = 30;
 			Application.DoEvents();
 			
			T_PendPayFone table_T_PendPayFone = new T_PendPayFone();
			table_T_PendPayFone.SetAccess ( ref dbAccess );
			
			table_T_PendPayFone.KeepNames = true;
			
			if ( table_T_PendPayFone.selectAll() )
			{
				configFile.WriteLine ( table_T_PendPayFone.RowCount() );
			
				while ( table_T_PendPayFone.fetch() )
				{
					configFile.WriteLine ( table_T_PendPayFone.exportCSV() );
				}
			}
			else	configFile.WriteLine ( table_T_PendPayFone.RowCount() );
			
 			
 			pg.Value   = 31;
 			Application.DoEvents();
 			
			T_PayFone table_T_PayFone = new T_PayFone();
			table_T_PayFone.SetAccess ( ref dbAccess );
			
			table_T_PayFone.KeepNames = true;
			
			if ( table_T_PayFone.selectAll() )
			{
				configFile.WriteLine ( table_T_PayFone.RowCount() );
			
				while ( table_T_PayFone.fetch() )
				{
					configFile.WriteLine ( table_T_PayFone.exportCSV() );
				}
			}
			else	configFile.WriteLine ( table_T_PayFone.RowCount() );
			
 			
 			pg.Value   = 32;
 			Application.DoEvents();
 			
			T_Parcelas table_T_Parcelas = new T_Parcelas();
			table_T_Parcelas.SetAccess ( ref dbAccess );
			
			table_T_Parcelas.KeepNames = true;
			
			if ( table_T_Parcelas.selectAll() )
			{
				configFile.WriteLine ( table_T_Parcelas.RowCount() );
			
				while ( table_T_Parcelas.fetch() )
				{
					configFile.WriteLine ( table_T_Parcelas.exportCSV() );
				}
			}
			else	configFile.WriteLine ( table_T_Parcelas.RowCount() );
			
 			
 			pg.Value   = 33;
 			Application.DoEvents();
 			
			LOG_Transacoes table_LOG_Transacoes = new LOG_Transacoes();
			table_LOG_Transacoes.SetAccess ( ref dbAccess );
			
			table_LOG_Transacoes.KeepNames = true;
			
			if ( table_LOG_Transacoes.selectAll() )
			{
				configFile.WriteLine ( table_LOG_Transacoes.RowCount() );
			
				while ( table_LOG_Transacoes.fetch() )
				{
					configFile.WriteLine ( table_LOG_Transacoes.exportCSV() );
				}
			}
			else	configFile.WriteLine ( table_LOG_Transacoes.RowCount() );
			
 			
 			pg.Value   = 34;
 			Application.DoEvents();
 			
			I_Scheduler table_I_Scheduler = new I_Scheduler();
			table_I_Scheduler.SetAccess ( ref dbAccess );
			
			table_I_Scheduler.KeepNames = true;
			
			if ( table_I_Scheduler.selectAll() )
			{
				configFile.WriteLine ( table_I_Scheduler.RowCount() );
			
				while ( table_I_Scheduler.fetch() )
				{
					configFile.WriteLine ( table_I_Scheduler.exportCSV() );
				}
			}
			else	configFile.WriteLine ( table_I_Scheduler.RowCount() );
			
 			
 			pg.Value   = 35;
 			Application.DoEvents();
 			
			LOG_NSU table_LOG_NSU = new LOG_NSU();
			table_LOG_NSU.SetAccess ( ref dbAccess );
			
			table_LOG_NSU.KeepNames = true;
			
			if ( table_LOG_NSU.selectAll() )
			{
				configFile.WriteLine ( table_LOG_NSU.RowCount() );
			
				while ( table_LOG_NSU.fetch() )
				{
					configFile.WriteLine ( table_LOG_NSU.exportCSV() );
				}
			}
			else	configFile.WriteLine ( table_LOG_NSU.RowCount() );
			
 			
 			pg.Value   = 36;
 			Application.DoEvents();
 			
			LOG_Audit table_LOG_Audit = new LOG_Audit();
			table_LOG_Audit.SetAccess ( ref dbAccess );
			
			table_LOG_Audit.KeepNames = true;
			
			if ( table_LOG_Audit.selectAll() )
			{
				configFile.WriteLine ( table_LOG_Audit.RowCount() );
			
				while ( table_LOG_Audit.fetch() )
				{
					configFile.WriteLine ( table_LOG_Audit.exportCSV() );
				}
			}
			else	configFile.WriteLine ( table_LOG_Audit.RowCount() );
			
 			
 			pg.Value   = 37;
 			Application.DoEvents();
 			
			T_Terminal table_T_Terminal = new T_Terminal();
			table_T_Terminal.SetAccess ( ref dbAccess );
			
			table_T_Terminal.KeepNames = true;
			
			if ( table_T_Terminal.selectAll() )
			{
				configFile.WriteLine ( table_T_Terminal.RowCount() );
			
				while ( table_T_Terminal.fetch() )
				{
					configFile.WriteLine ( table_T_Terminal.exportCSV() );
				}
			}
			else	configFile.WriteLine ( table_T_Terminal.RowCount() );
			
 			
 			pg.Value   = 38;
 			Application.DoEvents();
 			
			T_Empresa table_T_Empresa = new T_Empresa();
			table_T_Empresa.SetAccess ( ref dbAccess );
			
			table_T_Empresa.KeepNames = true;
			
			if ( table_T_Empresa.selectAll() )
			{
				configFile.WriteLine ( table_T_Empresa.RowCount() );
			
				while ( table_T_Empresa.fetch() )
				{
					configFile.WriteLine ( table_T_Empresa.exportCSV() );
				}
			}
			else	configFile.WriteLine ( table_T_Empresa.RowCount() );
			
 			
 			pg.Value   = 39;
 			Application.DoEvents();
 			
			T_Loja table_T_Loja = new T_Loja();
			table_T_Loja.SetAccess ( ref dbAccess );
			
			table_T_Loja.KeepNames = true;
			
			if ( table_T_Loja.selectAll() )
			{
				configFile.WriteLine ( table_T_Loja.RowCount() );
			
				while ( table_T_Loja.fetch() )
				{
					configFile.WriteLine ( table_T_Loja.exportCSV() );
				}
			}
			else	configFile.WriteLine ( table_T_Loja.RowCount() );
			
 			
 			pg.Value   = 40;
 			Application.DoEvents();
 			
			LINK_LojaEmpresa table_LINK_LojaEmpresa = new LINK_LojaEmpresa();
			table_LINK_LojaEmpresa.SetAccess ( ref dbAccess );
			
			table_LINK_LojaEmpresa.KeepNames = true;
			
			if ( table_LINK_LojaEmpresa.selectAll() )
			{
				configFile.WriteLine ( table_LINK_LojaEmpresa.RowCount() );
			
				while ( table_LINK_LojaEmpresa.fetch() )
				{
					configFile.WriteLine ( table_LINK_LojaEmpresa.exportCSV() );
				}
			}
			else	configFile.WriteLine ( table_LINK_LojaEmpresa.RowCount() );
			
 			
 			pg.Value   = 41;
 			Application.DoEvents();
 			
			T_Usuario table_T_Usuario = new T_Usuario();
			table_T_Usuario.SetAccess ( ref dbAccess );
			
			table_T_Usuario.KeepNames = true;
			
			if ( table_T_Usuario.selectAll() )
			{
				configFile.WriteLine ( table_T_Usuario.RowCount() );
			
				while ( table_T_Usuario.fetch() )
				{
					configFile.WriteLine ( table_T_Usuario.exportCSV() );
				}
			}
			else	configFile.WriteLine ( table_T_Usuario.RowCount() );
			
 			
 			pg.Value   = 42;
 			Application.DoEvents();
 			
			LINK_ProprietarioCartao table_LINK_ProprietarioCartao = new LINK_ProprietarioCartao();
			table_LINK_ProprietarioCartao.SetAccess ( ref dbAccess );
			
			table_LINK_ProprietarioCartao.KeepNames = true;
			
			if ( table_LINK_ProprietarioCartao.selectAll() )
			{
				configFile.WriteLine ( table_LINK_ProprietarioCartao.RowCount() );
			
				while ( table_LINK_ProprietarioCartao.fetch() )
				{
					configFile.WriteLine ( table_LINK_ProprietarioCartao.exportCSV() );
				}
			}
			else	configFile.WriteLine ( table_LINK_ProprietarioCartao.RowCount() );
			
 			
 			pg.Value   = 43;
 			Application.DoEvents();
 			
			T_Dependente table_T_Dependente = new T_Dependente();
			table_T_Dependente.SetAccess ( ref dbAccess );
			
			table_T_Dependente.KeepNames = true;
			
			if ( table_T_Dependente.selectAll() )
			{
				configFile.WriteLine ( table_T_Dependente.RowCount() );
			
				while ( table_T_Dependente.fetch() )
				{
					configFile.WriteLine ( table_T_Dependente.exportCSV() );
				}
			}
			else	configFile.WriteLine ( table_T_Dependente.RowCount() );
			
 			
 			pg.Value   = 44;
 			Application.DoEvents();
 			
			T_Proprietario table_T_Proprietario = new T_Proprietario();
			table_T_Proprietario.SetAccess ( ref dbAccess );
			
			table_T_Proprietario.KeepNames = true;
			
			if ( table_T_Proprietario.selectAll() )
			{
				configFile.WriteLine ( table_T_Proprietario.RowCount() );
			
				while ( table_T_Proprietario.fetch() )
				{
					configFile.WriteLine ( table_T_Proprietario.exportCSV() );
				}
			}
			else	configFile.WriteLine ( table_T_Proprietario.RowCount() );
			
 			
 			pg.Value   = 45;
 			Application.DoEvents();
 			
			T_InfoAdicionais table_T_InfoAdicionais = new T_InfoAdicionais();
			table_T_InfoAdicionais.SetAccess ( ref dbAccess );
			
			table_T_InfoAdicionais.KeepNames = true;
			
			if ( table_T_InfoAdicionais.selectAll() )
			{
				configFile.WriteLine ( table_T_InfoAdicionais.RowCount() );
			
				while ( table_T_InfoAdicionais.fetch() )
				{
					configFile.WriteLine ( table_T_InfoAdicionais.exportCSV() );
				}
			}
			else	configFile.WriteLine ( table_T_InfoAdicionais.RowCount() );
			
 			
 			pg.Value   = 46;
 			Application.DoEvents();
 			
			T_Cartao table_T_Cartao = new T_Cartao();
			table_T_Cartao.SetAccess ( ref dbAccess );
			
			table_T_Cartao.KeepNames = true;
			
			if ( table_T_Cartao.selectAll() )
			{
				configFile.WriteLine ( table_T_Cartao.RowCount() );
			
				while ( table_T_Cartao.fetch() )
				{
					configFile.WriteLine ( table_T_Cartao.exportCSV() );
				}
			}
			else	configFile.WriteLine ( table_T_Cartao.RowCount() );
			
			dbAccess.CloseDB();
			
			configFile.Close();
			file.Close();
		}

	 	public void doRestore ( string path_dir, string connectionString, ProgressBar pg, Label lbl )
 		{
	 		DB_Access 		dbAccess 	= new DB_Access 	( connectionString 							);
	 		FileStream 		file 		= new FileStream 	( path_dir, FileMode.Open, FileAccess.Read 	);
 			StreamReader 	configFile 	= new StreamReader 	( file 										);
 			
 			char  [] splitter  = {'•'};
 			
 			long rest_version = Convert.ToInt64 ( configFile.ReadLine() );		
 			
 			if ( rest_version != version )
 			{
 				MessageBox.Show ( "Incompatible version! Restore is exiting.", "SYSTEM" );
 				dbAccess.CloseDB();
 				configFile.Close();
 				file.Close();
 				return;
 			}
 			
 			pg.Minimum = 1;
 			pg.Maximum = 46;
 			
 			dbAccess.patchDB ( Convert.ToInt64 ( configFile.ReadLine() ) );
 			
 			pg.Value   = 1;
 			Application.DoEvents();
 			
 			long table_T_MensagemEdu_count = Convert.ToInt64 ( configFile.ReadLine() );
 							
 			lbl.Text = "Truncating  [T_MensagemEdu]";
 			Application.DoEvents();
 			
 			T_MensagemEdu table_T_MensagemEdu = new T_MensagemEdu();
 			table_T_MensagemEdu.SetAccess ( ref dbAccess );
 			table_T_MensagemEdu.truncate();
			
			table_T_MensagemEdu.KeepNames = true;
			
 			if ( table_T_MensagemEdu_count > 0 )
 			{
 				long table_T_MensagemEdu_last_id = 1;
 								
 				while ( table_T_MensagemEdu_count > 0 )
 				{
 					lbl.Text = "Restoring Database [T_MensagemEdu] " + table_T_MensagemEdu_count.ToString() + " rows remaining";
 					Application.DoEvents();
 				    
 					table_T_MensagemEdu_count--;
 									
 					string[] rowInfo = new string [ table_T_MensagemEdu.var_FieldCount ];
 									
 					rowInfo = configFile.ReadLine().Split ( splitter );
 					
 					long this_id = Convert.ToInt64 ( rowInfo[0] );
 					
 					while ( table_T_MensagemEdu_last_id < this_id )
 					{
 						dbAccess.consumeRow ( 	table_T_MensagemEdu.var_Tablename, 
 												table_T_MensagemEdu.exportNames(), 
 												table_T_MensagemEdu.var_FieldCount - 1, 
 										        table_T_MensagemEdu_last_id++ );
 					}
 					
 					long a = 1;
 					
 					table_T_MensagemEdu.Reset();
 					
					table_T_MensagemEdu.set_st_mens ( rowInfo[a++] );
					table_T_MensagemEdu.set_fk_empresa ( rowInfo[a++] );
					table_T_MensagemEdu.set_dt_ini ( rowInfo[a++] );
					table_T_MensagemEdu.set_dt_fim ( rowInfo[a++] );
					table_T_MensagemEdu.create_T_MensagemEdu();
					table_T_MensagemEdu_last_id = this_id + 1;
				}
			}
 			
 			pg.Value   = 2;
 			Application.DoEvents();
 			
 			long table_LINK_UsuarioTerminal_count = Convert.ToInt64 ( configFile.ReadLine() );
 							
 			lbl.Text = "Truncating  [LINK_UsuarioTerminal]";
 			Application.DoEvents();
 			
 			LINK_UsuarioTerminal table_LINK_UsuarioTerminal = new LINK_UsuarioTerminal();
 			table_LINK_UsuarioTerminal.SetAccess ( ref dbAccess );
 			table_LINK_UsuarioTerminal.truncate();
			
			table_LINK_UsuarioTerminal.KeepNames = true;
			
 			if ( table_LINK_UsuarioTerminal_count > 0 )
 			{
 				long table_LINK_UsuarioTerminal_last_id = 1;
 								
 				while ( table_LINK_UsuarioTerminal_count > 0 )
 				{
 					lbl.Text = "Restoring Database [LINK_UsuarioTerminal] " + table_LINK_UsuarioTerminal_count.ToString() + " rows remaining";
 					Application.DoEvents();
 				    
 					table_LINK_UsuarioTerminal_count--;
 									
 					string[] rowInfo = new string [ table_LINK_UsuarioTerminal.var_FieldCount ];
 									
 					rowInfo = configFile.ReadLine().Split ( splitter );
 					
 					long this_id = Convert.ToInt64 ( rowInfo[0] );
 					
 					while ( table_LINK_UsuarioTerminal_last_id < this_id )
 					{
 						dbAccess.consumeRow ( 	table_LINK_UsuarioTerminal.var_Tablename, 
 												table_LINK_UsuarioTerminal.exportNames(), 
 												table_LINK_UsuarioTerminal.var_FieldCount - 1, 
 										        table_LINK_UsuarioTerminal_last_id++ );
 					}
 					
 					long a = 1;
 					
 					table_LINK_UsuarioTerminal.Reset();
 					
					table_LINK_UsuarioTerminal.set_fk_user ( rowInfo[a++] );
					table_LINK_UsuarioTerminal.set_fk_term ( rowInfo[a++] );
					table_LINK_UsuarioTerminal.create_LINK_UsuarioTerminal();
					table_LINK_UsuarioTerminal_last_id = this_id + 1;
				}
			}
 			
 			pg.Value   = 3;
 			Application.DoEvents();
 			
 			long table_T_BoletoEdu_count = Convert.ToInt64 ( configFile.ReadLine() );
 							
 			lbl.Text = "Truncating  [T_BoletoEdu]";
 			Application.DoEvents();
 			
 			T_BoletoEdu table_T_BoletoEdu = new T_BoletoEdu();
 			table_T_BoletoEdu.SetAccess ( ref dbAccess );
 			table_T_BoletoEdu.truncate();
			
			table_T_BoletoEdu.KeepNames = true;
			
 			if ( table_T_BoletoEdu_count > 0 )
 			{
 				long table_T_BoletoEdu_last_id = 1;
 								
 				while ( table_T_BoletoEdu_count > 0 )
 				{
 					lbl.Text = "Restoring Database [T_BoletoEdu] " + table_T_BoletoEdu_count.ToString() + " rows remaining";
 					Application.DoEvents();
 				    
 					table_T_BoletoEdu_count--;
 									
 					string[] rowInfo = new string [ table_T_BoletoEdu.var_FieldCount ];
 									
 					rowInfo = configFile.ReadLine().Split ( splitter );
 					
 					long this_id = Convert.ToInt64 ( rowInfo[0] );
 					
 					while ( table_T_BoletoEdu_last_id < this_id )
 					{
 						dbAccess.consumeRow ( 	table_T_BoletoEdu.var_Tablename, 
 												table_T_BoletoEdu.exportNames(), 
 												table_T_BoletoEdu.var_FieldCount - 1, 
 										        table_T_BoletoEdu_last_id++ );
 					}
 					
 					long a = 1;
 					
 					table_T_BoletoEdu.Reset();
 					
					table_T_BoletoEdu.set_dt_emissao ( rowInfo[a++] );
					table_T_BoletoEdu.set_vr_imediato ( rowInfo[a++] );
					table_T_BoletoEdu.set_vr_educacional ( rowInfo[a++] );
					table_T_BoletoEdu.set_fk_cartao ( rowInfo[a++] );
					table_T_BoletoEdu.create_T_BoletoEdu();
					table_T_BoletoEdu_last_id = this_id + 1;
				}
			}
 			
 			pg.Value   = 4;
 			Application.DoEvents();
 			
 			long table_T_EmpresaAfiliada_count = Convert.ToInt64 ( configFile.ReadLine() );
 							
 			lbl.Text = "Truncating  [T_EmpresaAfiliada]";
 			Application.DoEvents();
 			
 			T_EmpresaAfiliada table_T_EmpresaAfiliada = new T_EmpresaAfiliada();
 			table_T_EmpresaAfiliada.SetAccess ( ref dbAccess );
 			table_T_EmpresaAfiliada.truncate();
			
			table_T_EmpresaAfiliada.KeepNames = true;
			
 			if ( table_T_EmpresaAfiliada_count > 0 )
 			{
 				long table_T_EmpresaAfiliada_last_id = 1;
 								
 				while ( table_T_EmpresaAfiliada_count > 0 )
 				{
 					lbl.Text = "Restoring Database [T_EmpresaAfiliada] " + table_T_EmpresaAfiliada_count.ToString() + " rows remaining";
 					Application.DoEvents();
 				    
 					table_T_EmpresaAfiliada_count--;
 									
 					string[] rowInfo = new string [ table_T_EmpresaAfiliada.var_FieldCount ];
 									
 					rowInfo = configFile.ReadLine().Split ( splitter );
 					
 					long this_id = Convert.ToInt64 ( rowInfo[0] );
 					
 					while ( table_T_EmpresaAfiliada_last_id < this_id )
 					{
 						dbAccess.consumeRow ( 	table_T_EmpresaAfiliada.var_Tablename, 
 												table_T_EmpresaAfiliada.exportNames(), 
 												table_T_EmpresaAfiliada.var_FieldCount - 1, 
 										        table_T_EmpresaAfiliada_last_id++ );
 					}
 					
 					long a = 1;
 					
 					table_T_EmpresaAfiliada.Reset();
 					
					table_T_EmpresaAfiliada.set_st_nome ( rowInfo[a++] );
					table_T_EmpresaAfiliada.set_fk_empresa ( rowInfo[a++] );
					table_T_EmpresaAfiliada.create_T_EmpresaAfiliada();
					table_T_EmpresaAfiliada_last_id = this_id + 1;
				}
			}
 			
 			pg.Value   = 5;
 			Application.DoEvents();
 			
 			long table_LINK_RepasseParcela_count = Convert.ToInt64 ( configFile.ReadLine() );
 							
 			lbl.Text = "Truncating  [LINK_RepasseParcela]";
 			Application.DoEvents();
 			
 			LINK_RepasseParcela table_LINK_RepasseParcela = new LINK_RepasseParcela();
 			table_LINK_RepasseParcela.SetAccess ( ref dbAccess );
 			table_LINK_RepasseParcela.truncate();
			
			table_LINK_RepasseParcela.KeepNames = true;
			
 			if ( table_LINK_RepasseParcela_count > 0 )
 			{
 				long table_LINK_RepasseParcela_last_id = 1;
 								
 				while ( table_LINK_RepasseParcela_count > 0 )
 				{
 					lbl.Text = "Restoring Database [LINK_RepasseParcela] " + table_LINK_RepasseParcela_count.ToString() + " rows remaining";
 					Application.DoEvents();
 				    
 					table_LINK_RepasseParcela_count--;
 									
 					string[] rowInfo = new string [ table_LINK_RepasseParcela.var_FieldCount ];
 									
 					rowInfo = configFile.ReadLine().Split ( splitter );
 					
 					long this_id = Convert.ToInt64 ( rowInfo[0] );
 					
 					while ( table_LINK_RepasseParcela_last_id < this_id )
 					{
 						dbAccess.consumeRow ( 	table_LINK_RepasseParcela.var_Tablename, 
 												table_LINK_RepasseParcela.exportNames(), 
 												table_LINK_RepasseParcela.var_FieldCount - 1, 
 										        table_LINK_RepasseParcela_last_id++ );
 					}
 					
 					long a = 1;
 					
 					table_LINK_RepasseParcela.Reset();
 					
					table_LINK_RepasseParcela.set_fk_repasseLoja ( rowInfo[a++] );
					table_LINK_RepasseParcela.set_fk_parcela ( rowInfo[a++] );
					table_LINK_RepasseParcela.create_LINK_RepasseParcela();
					table_LINK_RepasseParcela_last_id = this_id + 1;
				}
			}
 			
 			pg.Value   = 6;
 			Application.DoEvents();
 			
 			long table_T_RepasseLoja_count = Convert.ToInt64 ( configFile.ReadLine() );
 							
 			lbl.Text = "Truncating  [T_RepasseLoja]";
 			Application.DoEvents();
 			
 			T_RepasseLoja table_T_RepasseLoja = new T_RepasseLoja();
 			table_T_RepasseLoja.SetAccess ( ref dbAccess );
 			table_T_RepasseLoja.truncate();
			
			table_T_RepasseLoja.KeepNames = true;
			
 			if ( table_T_RepasseLoja_count > 0 )
 			{
 				long table_T_RepasseLoja_last_id = 1;
 								
 				while ( table_T_RepasseLoja_count > 0 )
 				{
 					lbl.Text = "Restoring Database [T_RepasseLoja] " + table_T_RepasseLoja_count.ToString() + " rows remaining";
 					Application.DoEvents();
 				    
 					table_T_RepasseLoja_count--;
 									
 					string[] rowInfo = new string [ table_T_RepasseLoja.var_FieldCount ];
 									
 					rowInfo = configFile.ReadLine().Split ( splitter );
 					
 					long this_id = Convert.ToInt64 ( rowInfo[0] );
 					
 					while ( table_T_RepasseLoja_last_id < this_id )
 					{
 						dbAccess.consumeRow ( 	table_T_RepasseLoja.var_Tablename, 
 												table_T_RepasseLoja.exportNames(), 
 												table_T_RepasseLoja.var_FieldCount - 1, 
 										        table_T_RepasseLoja_last_id++ );
 					}
 					
 					long a = 1;
 					
 					table_T_RepasseLoja.Reset();
 					
					table_T_RepasseLoja.set_fk_loja ( rowInfo[a++] );
					table_T_RepasseLoja.set_tg_opcao ( rowInfo[a++] );
					table_T_RepasseLoja.set_vr_valor ( rowInfo[a++] );
					table_T_RepasseLoja.set_st_ident ( rowInfo[a++] );
					table_T_RepasseLoja.set_dt_efetiva ( rowInfo[a++] );
					table_T_RepasseLoja.create_T_RepasseLoja();
					table_T_RepasseLoja_last_id = this_id + 1;
				}
			}
 			
 			pg.Value   = 7;
 			Application.DoEvents();
 			
 			long table_LOG_GiftRanges_count = Convert.ToInt64 ( configFile.ReadLine() );
 							
 			lbl.Text = "Truncating  [LOG_GiftRanges]";
 			Application.DoEvents();
 			
 			LOG_GiftRanges table_LOG_GiftRanges = new LOG_GiftRanges();
 			table_LOG_GiftRanges.SetAccess ( ref dbAccess );
 			table_LOG_GiftRanges.truncate();
			
			table_LOG_GiftRanges.KeepNames = true;
			
 			if ( table_LOG_GiftRanges_count > 0 )
 			{
 				long table_LOG_GiftRanges_last_id = 1;
 								
 				while ( table_LOG_GiftRanges_count > 0 )
 				{
 					lbl.Text = "Restoring Database [LOG_GiftRanges] " + table_LOG_GiftRanges_count.ToString() + " rows remaining";
 					Application.DoEvents();
 				    
 					table_LOG_GiftRanges_count--;
 									
 					string[] rowInfo = new string [ table_LOG_GiftRanges.var_FieldCount ];
 									
 					rowInfo = configFile.ReadLine().Split ( splitter );
 					
 					long this_id = Convert.ToInt64 ( rowInfo[0] );
 					
 					while ( table_LOG_GiftRanges_last_id < this_id )
 					{
 						dbAccess.consumeRow ( 	table_LOG_GiftRanges.var_Tablename, 
 												table_LOG_GiftRanges.exportNames(), 
 												table_LOG_GiftRanges.var_FieldCount - 1, 
 										        table_LOG_GiftRanges_last_id++ );
 					}
 					
 					long a = 1;
 					
 					table_LOG_GiftRanges.Reset();
 					
					table_LOG_GiftRanges.set_fk_empresa ( rowInfo[a++] );
					table_LOG_GiftRanges.set_nu_inicio ( rowInfo[a++] );
					table_LOG_GiftRanges.set_nu_fim ( rowInfo[a++] );
					table_LOG_GiftRanges.set_dt_requisicao ( rowInfo[a++] );
					table_LOG_GiftRanges.create_LOG_GiftRanges();
					table_LOG_GiftRanges_last_id = this_id + 1;
				}
			}
 			
 			pg.Value   = 8;
 			Application.DoEvents();
 			
 			long table_T_ChequesGift_count = Convert.ToInt64 ( configFile.ReadLine() );
 							
 			lbl.Text = "Truncating  [T_ChequesGift]";
 			Application.DoEvents();
 			
 			T_ChequesGift table_T_ChequesGift = new T_ChequesGift();
 			table_T_ChequesGift.SetAccess ( ref dbAccess );
 			table_T_ChequesGift.truncate();
			
			table_T_ChequesGift.KeepNames = true;
			
 			if ( table_T_ChequesGift_count > 0 )
 			{
 				long table_T_ChequesGift_last_id = 1;
 								
 				while ( table_T_ChequesGift_count > 0 )
 				{
 					lbl.Text = "Restoring Database [T_ChequesGift] " + table_T_ChequesGift_count.ToString() + " rows remaining";
 					Application.DoEvents();
 				    
 					table_T_ChequesGift_count--;
 									
 					string[] rowInfo = new string [ table_T_ChequesGift.var_FieldCount ];
 									
 					rowInfo = configFile.ReadLine().Split ( splitter );
 					
 					long this_id = Convert.ToInt64 ( rowInfo[0] );
 					
 					while ( table_T_ChequesGift_last_id < this_id )
 					{
 						dbAccess.consumeRow ( 	table_T_ChequesGift.var_Tablename, 
 												table_T_ChequesGift.exportNames(), 
 												table_T_ChequesGift.var_FieldCount - 1, 
 										        table_T_ChequesGift_last_id++ );
 					}
 					
 					long a = 1;
 					
 					table_T_ChequesGift.Reset();
 					
					table_T_ChequesGift.set_st_identificador ( rowInfo[a++] );
					table_T_ChequesGift.set_fk_cartao ( rowInfo[a++] );
					table_T_ChequesGift.set_dt_efetiva ( rowInfo[a++] );
					table_T_ChequesGift.set_tg_compensado ( rowInfo[a++] );
					table_T_ChequesGift.set_vr_valor ( rowInfo[a++] );
					table_T_ChequesGift.create_T_ChequesGift();
					table_T_ChequesGift_last_id = this_id + 1;
				}
			}
 			
 			pg.Value   = 9;
 			Application.DoEvents();
 			
 			long table_LOG_VendaProdutoGift_count = Convert.ToInt64 ( configFile.ReadLine() );
 							
 			lbl.Text = "Truncating  [LOG_VendaProdutoGift]";
 			Application.DoEvents();
 			
 			LOG_VendaProdutoGift table_LOG_VendaProdutoGift = new LOG_VendaProdutoGift();
 			table_LOG_VendaProdutoGift.SetAccess ( ref dbAccess );
 			table_LOG_VendaProdutoGift.truncate();
			
			table_LOG_VendaProdutoGift.KeepNames = true;
			
 			if ( table_LOG_VendaProdutoGift_count > 0 )
 			{
 				long table_LOG_VendaProdutoGift_last_id = 1;
 								
 				while ( table_LOG_VendaProdutoGift_count > 0 )
 				{
 					lbl.Text = "Restoring Database [LOG_VendaProdutoGift] " + table_LOG_VendaProdutoGift_count.ToString() + " rows remaining";
 					Application.DoEvents();
 				    
 					table_LOG_VendaProdutoGift_count--;
 									
 					string[] rowInfo = new string [ table_LOG_VendaProdutoGift.var_FieldCount ];
 									
 					rowInfo = configFile.ReadLine().Split ( splitter );
 					
 					long this_id = Convert.ToInt64 ( rowInfo[0] );
 					
 					while ( table_LOG_VendaProdutoGift_last_id < this_id )
 					{
 						dbAccess.consumeRow ( 	table_LOG_VendaProdutoGift.var_Tablename, 
 												table_LOG_VendaProdutoGift.exportNames(), 
 												table_LOG_VendaProdutoGift.var_FieldCount - 1, 
 										        table_LOG_VendaProdutoGift_last_id++ );
 					}
 					
 					long a = 1;
 					
 					table_LOG_VendaProdutoGift.Reset();
 					
					table_LOG_VendaProdutoGift.set_fk_vendaCartao ( rowInfo[a++] );
					table_LOG_VendaProdutoGift.set_st_produto ( rowInfo[a++] );
					table_LOG_VendaProdutoGift.set_vr_valor ( rowInfo[a++] );
					table_LOG_VendaProdutoGift.create_LOG_VendaProdutoGift();
					table_LOG_VendaProdutoGift_last_id = this_id + 1;
				}
			}
 			
 			pg.Value   = 10;
 			Application.DoEvents();
 			
 			long table_LOG_VendaCartaoGift_count = Convert.ToInt64 ( configFile.ReadLine() );
 							
 			lbl.Text = "Truncating  [LOG_VendaCartaoGift]";
 			Application.DoEvents();
 			
 			LOG_VendaCartaoGift table_LOG_VendaCartaoGift = new LOG_VendaCartaoGift();
 			table_LOG_VendaCartaoGift.SetAccess ( ref dbAccess );
 			table_LOG_VendaCartaoGift.truncate();
			
			table_LOG_VendaCartaoGift.KeepNames = true;
			
 			if ( table_LOG_VendaCartaoGift_count > 0 )
 			{
 				long table_LOG_VendaCartaoGift_last_id = 1;
 								
 				while ( table_LOG_VendaCartaoGift_count > 0 )
 				{
 					lbl.Text = "Restoring Database [LOG_VendaCartaoGift] " + table_LOG_VendaCartaoGift_count.ToString() + " rows remaining";
 					Application.DoEvents();
 				    
 					table_LOG_VendaCartaoGift_count--;
 									
 					string[] rowInfo = new string [ table_LOG_VendaCartaoGift.var_FieldCount ];
 									
 					rowInfo = configFile.ReadLine().Split ( splitter );
 					
 					long this_id = Convert.ToInt64 ( rowInfo[0] );
 					
 					while ( table_LOG_VendaCartaoGift_last_id < this_id )
 					{
 						dbAccess.consumeRow ( 	table_LOG_VendaCartaoGift.var_Tablename, 
 												table_LOG_VendaCartaoGift.exportNames(), 
 												table_LOG_VendaCartaoGift.var_FieldCount - 1, 
 										        table_LOG_VendaCartaoGift_last_id++ );
 					}
 					
 					long a = 1;
 					
 					table_LOG_VendaCartaoGift.Reset();
 					
					table_LOG_VendaCartaoGift.set_fk_vendedor ( rowInfo[a++] );
					table_LOG_VendaCartaoGift.set_fk_empresa ( rowInfo[a++] );
					table_LOG_VendaCartaoGift.set_fk_cartao ( rowInfo[a++] );
					table_LOG_VendaCartaoGift.set_tg_tipoPag ( rowInfo[a++] );
					table_LOG_VendaCartaoGift.set_dt_compra ( rowInfo[a++] );
					table_LOG_VendaCartaoGift.set_tg_tipoCartao ( rowInfo[a++] );
					table_LOG_VendaCartaoGift.set_st_cheque ( rowInfo[a++] );
					table_LOG_VendaCartaoGift.set_nu_nsuCartao ( rowInfo[a++] );
					table_LOG_VendaCartaoGift.set_vr_carga ( rowInfo[a++] );
					table_LOG_VendaCartaoGift.set_tg_adesao ( rowInfo[a++] );
					table_LOG_VendaCartaoGift.set_st_codImpresso ( rowInfo[a++] );
					table_LOG_VendaCartaoGift.create_LOG_VendaCartaoGift();
					table_LOG_VendaCartaoGift_last_id = this_id + 1;
				}
			}
 			
 			pg.Value   = 11;
 			Application.DoEvents();
 			
 			long table_T_Quiosque_count = Convert.ToInt64 ( configFile.ReadLine() );
 							
 			lbl.Text = "Truncating  [T_Quiosque]";
 			Application.DoEvents();
 			
 			T_Quiosque table_T_Quiosque = new T_Quiosque();
 			table_T_Quiosque.SetAccess ( ref dbAccess );
 			table_T_Quiosque.truncate();
			
			table_T_Quiosque.KeepNames = true;
			
 			if ( table_T_Quiosque_count > 0 )
 			{
 				long table_T_Quiosque_last_id = 1;
 								
 				while ( table_T_Quiosque_count > 0 )
 				{
 					lbl.Text = "Restoring Database [T_Quiosque] " + table_T_Quiosque_count.ToString() + " rows remaining";
 					Application.DoEvents();
 				    
 					table_T_Quiosque_count--;
 									
 					string[] rowInfo = new string [ table_T_Quiosque.var_FieldCount ];
 									
 					rowInfo = configFile.ReadLine().Split ( splitter );
 					
 					long this_id = Convert.ToInt64 ( rowInfo[0] );
 					
 					while ( table_T_Quiosque_last_id < this_id )
 					{
 						dbAccess.consumeRow ( 	table_T_Quiosque.var_Tablename, 
 												table_T_Quiosque.exportNames(), 
 												table_T_Quiosque.var_FieldCount - 1, 
 										        table_T_Quiosque_last_id++ );
 					}
 					
 					long a = 1;
 					
 					table_T_Quiosque.Reset();
 					
					table_T_Quiosque.set_fk_empresa ( rowInfo[a++] );
					table_T_Quiosque.set_st_nome ( rowInfo[a++] );
					table_T_Quiosque.create_T_Quiosque();
					table_T_Quiosque_last_id = this_id + 1;
				}
			}
 			
 			pg.Value   = 12;
 			Application.DoEvents();
 			
 			long table_T_ExtraGift_count = Convert.ToInt64 ( configFile.ReadLine() );
 							
 			lbl.Text = "Truncating  [T_ExtraGift]";
 			Application.DoEvents();
 			
 			T_ExtraGift table_T_ExtraGift = new T_ExtraGift();
 			table_T_ExtraGift.SetAccess ( ref dbAccess );
 			table_T_ExtraGift.truncate();
			
			table_T_ExtraGift.KeepNames = true;
			
 			if ( table_T_ExtraGift_count > 0 )
 			{
 				long table_T_ExtraGift_last_id = 1;
 								
 				while ( table_T_ExtraGift_count > 0 )
 				{
 					lbl.Text = "Restoring Database [T_ExtraGift] " + table_T_ExtraGift_count.ToString() + " rows remaining";
 					Application.DoEvents();
 				    
 					table_T_ExtraGift_count--;
 									
 					string[] rowInfo = new string [ table_T_ExtraGift.var_FieldCount ];
 									
 					rowInfo = configFile.ReadLine().Split ( splitter );
 					
 					long this_id = Convert.ToInt64 ( rowInfo[0] );
 					
 					while ( table_T_ExtraGift_last_id < this_id )
 					{
 						dbAccess.consumeRow ( 	table_T_ExtraGift.var_Tablename, 
 												table_T_ExtraGift.exportNames(), 
 												table_T_ExtraGift.var_FieldCount - 1, 
 										        table_T_ExtraGift_last_id++ );
 					}
 					
 					long a = 1;
 					
 					table_T_ExtraGift.Reset();
 					
					table_T_ExtraGift.set_st_nome ( rowInfo[a++] );
					table_T_ExtraGift.set_vr_valor ( rowInfo[a++] );
					table_T_ExtraGift.set_fk_empresa ( rowInfo[a++] );
					table_T_ExtraGift.create_T_ExtraGift();
					table_T_ExtraGift_last_id = this_id + 1;
				}
			}
 			
 			pg.Value   = 13;
 			Application.DoEvents();
 			
 			long table_LOG_Chamado_count = Convert.ToInt64 ( configFile.ReadLine() );
 							
 			lbl.Text = "Truncating  [LOG_Chamado]";
 			Application.DoEvents();
 			
 			LOG_Chamado table_LOG_Chamado = new LOG_Chamado();
 			table_LOG_Chamado.SetAccess ( ref dbAccess );
 			table_LOG_Chamado.truncate();
			
			table_LOG_Chamado.KeepNames = true;
			
 			if ( table_LOG_Chamado_count > 0 )
 			{
 				long table_LOG_Chamado_last_id = 1;
 								
 				while ( table_LOG_Chamado_count > 0 )
 				{
 					lbl.Text = "Restoring Database [LOG_Chamado] " + table_LOG_Chamado_count.ToString() + " rows remaining";
 					Application.DoEvents();
 				    
 					table_LOG_Chamado_count--;
 									
 					string[] rowInfo = new string [ table_LOG_Chamado.var_FieldCount ];
 									
 					rowInfo = configFile.ReadLine().Split ( splitter );
 					
 					long this_id = Convert.ToInt64 ( rowInfo[0] );
 					
 					while ( table_LOG_Chamado_last_id < this_id )
 					{
 						dbAccess.consumeRow ( 	table_LOG_Chamado.var_Tablename, 
 												table_LOG_Chamado.exportNames(), 
 												table_LOG_Chamado.var_FieldCount - 1, 
 										        table_LOG_Chamado_last_id++ );
 					}
 					
 					long a = 1;
 					
 					table_LOG_Chamado.Reset();
 					
					table_LOG_Chamado.set_fk_chamado ( rowInfo[a++] );
					table_LOG_Chamado.set_fk_operador ( rowInfo[a++] );
					table_LOG_Chamado.set_st_solucao ( rowInfo[a++] );
					table_LOG_Chamado.set_dt_solucao ( rowInfo[a++] );
					table_LOG_Chamado.create_LOG_Chamado();
					table_LOG_Chamado_last_id = this_id + 1;
				}
			}
 			
 			pg.Value   = 14;
 			Application.DoEvents();
 			
 			long table_T_Chamado_count = Convert.ToInt64 ( configFile.ReadLine() );
 							
 			lbl.Text = "Truncating  [T_Chamado]";
 			Application.DoEvents();
 			
 			T_Chamado table_T_Chamado = new T_Chamado();
 			table_T_Chamado.SetAccess ( ref dbAccess );
 			table_T_Chamado.truncate();
			
			table_T_Chamado.KeepNames = true;
			
 			if ( table_T_Chamado_count > 0 )
 			{
 				long table_T_Chamado_last_id = 1;
 								
 				while ( table_T_Chamado_count > 0 )
 				{
 					lbl.Text = "Restoring Database [T_Chamado] " + table_T_Chamado_count.ToString() + " rows remaining";
 					Application.DoEvents();
 				    
 					table_T_Chamado_count--;
 									
 					string[] rowInfo = new string [ table_T_Chamado.var_FieldCount ];
 									
 					rowInfo = configFile.ReadLine().Split ( splitter );
 					
 					long this_id = Convert.ToInt64 ( rowInfo[0] );
 					
 					while ( table_T_Chamado_last_id < this_id )
 					{
 						dbAccess.consumeRow ( 	table_T_Chamado.var_Tablename, 
 												table_T_Chamado.exportNames(), 
 												table_T_Chamado.var_FieldCount - 1, 
 										        table_T_Chamado_last_id++ );
 					}
 					
 					long a = 1;
 					
 					table_T_Chamado.Reset();
 					
					table_T_Chamado.set_fk_loja ( rowInfo[a++] );
					table_T_Chamado.set_tg_fechado ( rowInfo[a++] );
					table_T_Chamado.set_fk_operador ( rowInfo[a++] );
					table_T_Chamado.set_nu_prioridade ( rowInfo[a++] );
					table_T_Chamado.set_nu_categoria ( rowInfo[a++] );
					table_T_Chamado.set_dt_abertura ( rowInfo[a++] );
					table_T_Chamado.set_dt_fechamento ( rowInfo[a++] );
					table_T_Chamado.set_st_motivo ( rowInfo[a++] );
					table_T_Chamado.set_tg_tecnico ( rowInfo[a++] );
					table_T_Chamado.set_fk_oper_criador ( rowInfo[a++] );
					table_T_Chamado.create_T_Chamado();
					table_T_Chamado_last_id = this_id + 1;
				}
			}
 			
 			pg.Value   = 15;
 			Application.DoEvents();
 			
 			long table_LOG_NS_FAT_count = Convert.ToInt64 ( configFile.ReadLine() );
 							
 			lbl.Text = "Truncating  [LOG_NS_FAT]";
 			Application.DoEvents();
 			
 			LOG_NS_FAT table_LOG_NS_FAT = new LOG_NS_FAT();
 			table_LOG_NS_FAT.SetAccess ( ref dbAccess );
 			table_LOG_NS_FAT.truncate();
			
			table_LOG_NS_FAT.KeepNames = true;
			
 			if ( table_LOG_NS_FAT_count > 0 )
 			{
 				long table_LOG_NS_FAT_last_id = 1;
 								
 				while ( table_LOG_NS_FAT_count > 0 )
 				{
 					lbl.Text = "Restoring Database [LOG_NS_FAT] " + table_LOG_NS_FAT_count.ToString() + " rows remaining";
 					Application.DoEvents();
 				    
 					table_LOG_NS_FAT_count--;
 									
 					string[] rowInfo = new string [ table_LOG_NS_FAT.var_FieldCount ];
 									
 					rowInfo = configFile.ReadLine().Split ( splitter );
 					
 					long this_id = Convert.ToInt64 ( rowInfo[0] );
 					
 					while ( table_LOG_NS_FAT_last_id < this_id )
 					{
 						dbAccess.consumeRow ( 	table_LOG_NS_FAT.var_Tablename, 
 												table_LOG_NS_FAT.exportNames(), 
 												table_LOG_NS_FAT.var_FieldCount - 1, 
 										        table_LOG_NS_FAT_last_id++ );
 					}
 					
 					long a = 1;
 					
 					table_LOG_NS_FAT.Reset();
 					
					table_LOG_NS_FAT.set_dt_log ( rowInfo[a++] );
					table_LOG_NS_FAT.create_LOG_NS_FAT();
					table_LOG_NS_FAT_last_id = this_id + 1;
				}
			}
 			
 			pg.Value   = 16;
 			Application.DoEvents();
 			
 			long table_LOG_NSA_count = Convert.ToInt64 ( configFile.ReadLine() );
 							
 			lbl.Text = "Truncating  [LOG_NSA]";
 			Application.DoEvents();
 			
 			LOG_NSA table_LOG_NSA = new LOG_NSA();
 			table_LOG_NSA.SetAccess ( ref dbAccess );
 			table_LOG_NSA.truncate();
			
			table_LOG_NSA.KeepNames = true;
			
 			if ( table_LOG_NSA_count > 0 )
 			{
 				long table_LOG_NSA_last_id = 1;
 								
 				while ( table_LOG_NSA_count > 0 )
 				{
 					lbl.Text = "Restoring Database [LOG_NSA] " + table_LOG_NSA_count.ToString() + " rows remaining";
 					Application.DoEvents();
 				    
 					table_LOG_NSA_count--;
 									
 					string[] rowInfo = new string [ table_LOG_NSA.var_FieldCount ];
 									
 					rowInfo = configFile.ReadLine().Split ( splitter );
 					
 					long this_id = Convert.ToInt64 ( rowInfo[0] );
 					
 					while ( table_LOG_NSA_last_id < this_id )
 					{
 						dbAccess.consumeRow ( 	table_LOG_NSA.var_Tablename, 
 												table_LOG_NSA.exportNames(), 
 												table_LOG_NSA.var_FieldCount - 1, 
 										        table_LOG_NSA_last_id++ );
 					}
 					
 					long a = 1;
 					
 					table_LOG_NSA.Reset();
 					
					table_LOG_NSA.set_dt_log ( rowInfo[a++] );
					table_LOG_NSA.create_LOG_NSA();
					table_LOG_NSA_last_id = this_id + 1;
				}
			}
 			
 			pg.Value   = 17;
 			Application.DoEvents();
 			
 			long table_T_RetCobranca_count = Convert.ToInt64 ( configFile.ReadLine() );
 							
 			lbl.Text = "Truncating  [T_RetCobranca]";
 			Application.DoEvents();
 			
 			T_RetCobranca table_T_RetCobranca = new T_RetCobranca();
 			table_T_RetCobranca.SetAccess ( ref dbAccess );
 			table_T_RetCobranca.truncate();
			
			table_T_RetCobranca.KeepNames = true;
			
 			if ( table_T_RetCobranca_count > 0 )
 			{
 				long table_T_RetCobranca_last_id = 1;
 								
 				while ( table_T_RetCobranca_count > 0 )
 				{
 					lbl.Text = "Restoring Database [T_RetCobranca] " + table_T_RetCobranca_count.ToString() + " rows remaining";
 					Application.DoEvents();
 				    
 					table_T_RetCobranca_count--;
 									
 					string[] rowInfo = new string [ table_T_RetCobranca.var_FieldCount ];
 									
 					rowInfo = configFile.ReadLine().Split ( splitter );
 					
 					long this_id = Convert.ToInt64 ( rowInfo[0] );
 					
 					while ( table_T_RetCobranca_last_id < this_id )
 					{
 						dbAccess.consumeRow ( 	table_T_RetCobranca.var_Tablename, 
 												table_T_RetCobranca.exportNames(), 
 												table_T_RetCobranca.var_FieldCount - 1, 
 										        table_T_RetCobranca_last_id++ );
 					}
 					
 					long a = 1;
 					
 					table_T_RetCobranca.Reset();
 					
					table_T_RetCobranca.set_nu_codBanco ( rowInfo[a++] );
					table_T_RetCobranca.set_nu_cod ( rowInfo[a++] );
					table_T_RetCobranca.set_tg_tipoCob ( rowInfo[a++] );
					table_T_RetCobranca.set_st_codMsg ( rowInfo[a++] );
					table_T_RetCobranca.create_T_RetCobranca();
					table_T_RetCobranca_last_id = this_id + 1;
				}
			}
 			
 			pg.Value   = 18;
 			Application.DoEvents();
 			
 			long table_T_FaturamentoDetalhes_count = Convert.ToInt64 ( configFile.ReadLine() );
 							
 			lbl.Text = "Truncating  [T_FaturamentoDetalhes]";
 			Application.DoEvents();
 			
 			T_FaturamentoDetalhes table_T_FaturamentoDetalhes = new T_FaturamentoDetalhes();
 			table_T_FaturamentoDetalhes.SetAccess ( ref dbAccess );
 			table_T_FaturamentoDetalhes.truncate();
			
			table_T_FaturamentoDetalhes.KeepNames = true;
			
 			if ( table_T_FaturamentoDetalhes_count > 0 )
 			{
 				long table_T_FaturamentoDetalhes_last_id = 1;
 								
 				while ( table_T_FaturamentoDetalhes_count > 0 )
 				{
 					lbl.Text = "Restoring Database [T_FaturamentoDetalhes] " + table_T_FaturamentoDetalhes_count.ToString() + " rows remaining";
 					Application.DoEvents();
 				    
 					table_T_FaturamentoDetalhes_count--;
 									
 					string[] rowInfo = new string [ table_T_FaturamentoDetalhes.var_FieldCount ];
 									
 					rowInfo = configFile.ReadLine().Split ( splitter );
 					
 					long this_id = Convert.ToInt64 ( rowInfo[0] );
 					
 					while ( table_T_FaturamentoDetalhes_last_id < this_id )
 					{
 						dbAccess.consumeRow ( 	table_T_FaturamentoDetalhes.var_Tablename, 
 												table_T_FaturamentoDetalhes.exportNames(), 
 												table_T_FaturamentoDetalhes.var_FieldCount - 1, 
 										        table_T_FaturamentoDetalhes_last_id++ );
 					}
 					
 					long a = 1;
 					
 					table_T_FaturamentoDetalhes.Reset();
 					
					table_T_FaturamentoDetalhes.set_fk_fatura ( rowInfo[a++] );
					table_T_FaturamentoDetalhes.set_tg_tipoFat ( rowInfo[a++] );
					table_T_FaturamentoDetalhes.set_nu_quantidade ( rowInfo[a++] );
					table_T_FaturamentoDetalhes.set_vr_cobranca ( rowInfo[a++] );
					table_T_FaturamentoDetalhes.set_tg_desconto ( rowInfo[a++] );
					table_T_FaturamentoDetalhes.set_st_extras ( rowInfo[a++] );
					table_T_FaturamentoDetalhes.set_fk_empresa ( rowInfo[a++] );
					table_T_FaturamentoDetalhes.set_fk_loja ( rowInfo[a++] );
					table_T_FaturamentoDetalhes.create_T_FaturamentoDetalhes();
					table_T_FaturamentoDetalhes_last_id = this_id + 1;
				}
			}
 			
 			pg.Value   = 19;
 			Application.DoEvents();
 			
 			long table_T_Faturamento_count = Convert.ToInt64 ( configFile.ReadLine() );
 							
 			lbl.Text = "Truncating  [T_Faturamento]";
 			Application.DoEvents();
 			
 			T_Faturamento table_T_Faturamento = new T_Faturamento();
 			table_T_Faturamento.SetAccess ( ref dbAccess );
 			table_T_Faturamento.truncate();
			
			table_T_Faturamento.KeepNames = true;
			
 			if ( table_T_Faturamento_count > 0 )
 			{
 				long table_T_Faturamento_last_id = 1;
 								
 				while ( table_T_Faturamento_count > 0 )
 				{
 					lbl.Text = "Restoring Database [T_Faturamento] " + table_T_Faturamento_count.ToString() + " rows remaining";
 					Application.DoEvents();
 				    
 					table_T_Faturamento_count--;
 									
 					string[] rowInfo = new string [ table_T_Faturamento.var_FieldCount ];
 									
 					rowInfo = configFile.ReadLine().Split ( splitter );
 					
 					long this_id = Convert.ToInt64 ( rowInfo[0] );
 					
 					while ( table_T_Faturamento_last_id < this_id )
 					{
 						dbAccess.consumeRow ( 	table_T_Faturamento.var_Tablename, 
 												table_T_Faturamento.exportNames(), 
 												table_T_Faturamento.var_FieldCount - 1, 
 										        table_T_Faturamento_last_id++ );
 					}
 					
 					long a = 1;
 					
 					table_T_Faturamento.Reset();
 					
					table_T_Faturamento.set_fk_empresa ( rowInfo[a++] );
					table_T_Faturamento.set_fk_loja ( rowInfo[a++] );
					table_T_Faturamento.set_vr_cobranca ( rowInfo[a++] );
					table_T_Faturamento.set_dt_vencimento ( rowInfo[a++] );
					table_T_Faturamento.set_dt_baixa ( rowInfo[a++] );
					table_T_Faturamento.set_tg_situacao ( rowInfo[a++] );
					table_T_Faturamento.set_tg_retBanco ( rowInfo[a++] );
					table_T_Faturamento.create_T_Faturamento();
					table_T_Faturamento_last_id = this_id + 1;
				}
			}
 			
 			pg.Value   = 20;
 			Application.DoEvents();
 			
 			long table_T_WebBlock_count = Convert.ToInt64 ( configFile.ReadLine() );
 							
 			lbl.Text = "Truncating  [T_WebBlock]";
 			Application.DoEvents();
 			
 			T_WebBlock table_T_WebBlock = new T_WebBlock();
 			table_T_WebBlock.SetAccess ( ref dbAccess );
 			table_T_WebBlock.truncate();
			
			table_T_WebBlock.KeepNames = true;
			
 			if ( table_T_WebBlock_count > 0 )
 			{
 				long table_T_WebBlock_last_id = 1;
 								
 				while ( table_T_WebBlock_count > 0 )
 				{
 					lbl.Text = "Restoring Database [T_WebBlock] " + table_T_WebBlock_count.ToString() + " rows remaining";
 					Application.DoEvents();
 				    
 					table_T_WebBlock_count--;
 									
 					string[] rowInfo = new string [ table_T_WebBlock.var_FieldCount ];
 									
 					rowInfo = configFile.ReadLine().Split ( splitter );
 					
 					long this_id = Convert.ToInt64 ( rowInfo[0] );
 					
 					while ( table_T_WebBlock_last_id < this_id )
 					{
 						dbAccess.consumeRow ( 	table_T_WebBlock.var_Tablename, 
 												table_T_WebBlock.exportNames(), 
 												table_T_WebBlock.var_FieldCount - 1, 
 										        table_T_WebBlock_last_id++ );
 					}
 					
 					long a = 1;
 					
 					table_T_WebBlock.Reset();
 					
					table_T_WebBlock.set_st_ip ( rowInfo[a++] );
					table_T_WebBlock.set_fk_cartao ( rowInfo[a++] );
					table_T_WebBlock.set_dt_expire ( rowInfo[a++] );
					table_T_WebBlock.create_T_WebBlock();
					table_T_WebBlock_last_id = this_id + 1;
				}
			}
 			
 			pg.Value   = 21;
 			Application.DoEvents();
 			
 			long table_LINK_Edu_FundoEmpresa_count = Convert.ToInt64 ( configFile.ReadLine() );
 							
 			lbl.Text = "Truncating  [LINK_Edu_FundoEmpresa]";
 			Application.DoEvents();
 			
 			LINK_Edu_FundoEmpresa table_LINK_Edu_FundoEmpresa = new LINK_Edu_FundoEmpresa();
 			table_LINK_Edu_FundoEmpresa.SetAccess ( ref dbAccess );
 			table_LINK_Edu_FundoEmpresa.truncate();
			
			table_LINK_Edu_FundoEmpresa.KeepNames = true;
			
 			if ( table_LINK_Edu_FundoEmpresa_count > 0 )
 			{
 				long table_LINK_Edu_FundoEmpresa_last_id = 1;
 								
 				while ( table_LINK_Edu_FundoEmpresa_count > 0 )
 				{
 					lbl.Text = "Restoring Database [LINK_Edu_FundoEmpresa] " + table_LINK_Edu_FundoEmpresa_count.ToString() + " rows remaining";
 					Application.DoEvents();
 				    
 					table_LINK_Edu_FundoEmpresa_count--;
 									
 					string[] rowInfo = new string [ table_LINK_Edu_FundoEmpresa.var_FieldCount ];
 									
 					rowInfo = configFile.ReadLine().Split ( splitter );
 					
 					long this_id = Convert.ToInt64 ( rowInfo[0] );
 					
 					while ( table_LINK_Edu_FundoEmpresa_last_id < this_id )
 					{
 						dbAccess.consumeRow ( 	table_LINK_Edu_FundoEmpresa.var_Tablename, 
 												table_LINK_Edu_FundoEmpresa.exportNames(), 
 												table_LINK_Edu_FundoEmpresa.var_FieldCount - 1, 
 										        table_LINK_Edu_FundoEmpresa_last_id++ );
 					}
 					
 					long a = 1;
 					
 					table_LINK_Edu_FundoEmpresa.Reset();
 					
					table_LINK_Edu_FundoEmpresa.set_fk_cartao ( rowInfo[a++] );
					table_LINK_Edu_FundoEmpresa.set_fk_empresa ( rowInfo[a++] );
					table_LINK_Edu_FundoEmpresa.set_vr_fundo ( rowInfo[a++] );
					table_LINK_Edu_FundoEmpresa.create_LINK_Edu_FundoEmpresa();
					table_LINK_Edu_FundoEmpresa_last_id = this_id + 1;
				}
			}
 			
 			pg.Value   = 22;
 			Application.DoEvents();
 			
 			long table_T_Edu_FundoEmpresa_count = Convert.ToInt64 ( configFile.ReadLine() );
 							
 			lbl.Text = "Truncating  [T_Edu_FundoEmpresa]";
 			Application.DoEvents();
 			
 			T_Edu_FundoEmpresa table_T_Edu_FundoEmpresa = new T_Edu_FundoEmpresa();
 			table_T_Edu_FundoEmpresa.SetAccess ( ref dbAccess );
 			table_T_Edu_FundoEmpresa.truncate();
			
			table_T_Edu_FundoEmpresa.KeepNames = true;
			
 			if ( table_T_Edu_FundoEmpresa_count > 0 )
 			{
 				long table_T_Edu_FundoEmpresa_last_id = 1;
 								
 				while ( table_T_Edu_FundoEmpresa_count > 0 )
 				{
 					lbl.Text = "Restoring Database [T_Edu_FundoEmpresa] " + table_T_Edu_FundoEmpresa_count.ToString() + " rows remaining";
 					Application.DoEvents();
 				    
 					table_T_Edu_FundoEmpresa_count--;
 									
 					string[] rowInfo = new string [ table_T_Edu_FundoEmpresa.var_FieldCount ];
 									
 					rowInfo = configFile.ReadLine().Split ( splitter );
 					
 					long this_id = Convert.ToInt64 ( rowInfo[0] );
 					
 					while ( table_T_Edu_FundoEmpresa_last_id < this_id )
 					{
 						dbAccess.consumeRow ( 	table_T_Edu_FundoEmpresa.var_Tablename, 
 												table_T_Edu_FundoEmpresa.exportNames(), 
 												table_T_Edu_FundoEmpresa.var_FieldCount - 1, 
 										        table_T_Edu_FundoEmpresa_last_id++ );
 					}
 					
 					long a = 1;
 					
 					table_T_Edu_FundoEmpresa.Reset();
 					
					table_T_Edu_FundoEmpresa.set_fk_cartao ( rowInfo[a++] );
					table_T_Edu_FundoEmpresa.set_fk_empresaVirtual ( rowInfo[a++] );
					table_T_Edu_FundoEmpresa.set_vr_fundo ( rowInfo[a++] );
					table_T_Edu_FundoEmpresa.set_dt_efetivo ( rowInfo[a++] );
					table_T_Edu_FundoEmpresa.create_T_Edu_FundoEmpresa();
					table_T_Edu_FundoEmpresa_last_id = this_id + 1;
				}
			}
 			
 			pg.Value   = 23;
 			Application.DoEvents();
 			
 			long table_LOG_Edu_RendimentoEmpresa_count = Convert.ToInt64 ( configFile.ReadLine() );
 							
 			lbl.Text = "Truncating  [LOG_Edu_RendimentoEmpresa]";
 			Application.DoEvents();
 			
 			LOG_Edu_RendimentoEmpresa table_LOG_Edu_RendimentoEmpresa = new LOG_Edu_RendimentoEmpresa();
 			table_LOG_Edu_RendimentoEmpresa.SetAccess ( ref dbAccess );
 			table_LOG_Edu_RendimentoEmpresa.truncate();
			
			table_LOG_Edu_RendimentoEmpresa.KeepNames = true;
			
 			if ( table_LOG_Edu_RendimentoEmpresa_count > 0 )
 			{
 				long table_LOG_Edu_RendimentoEmpresa_last_id = 1;
 								
 				while ( table_LOG_Edu_RendimentoEmpresa_count > 0 )
 				{
 					lbl.Text = "Restoring Database [LOG_Edu_RendimentoEmpresa] " + table_LOG_Edu_RendimentoEmpresa_count.ToString() + " rows remaining";
 					Application.DoEvents();
 				    
 					table_LOG_Edu_RendimentoEmpresa_count--;
 									
 					string[] rowInfo = new string [ table_LOG_Edu_RendimentoEmpresa.var_FieldCount ];
 									
 					rowInfo = configFile.ReadLine().Split ( splitter );
 					
 					long this_id = Convert.ToInt64 ( rowInfo[0] );
 					
 					while ( table_LOG_Edu_RendimentoEmpresa_last_id < this_id )
 					{
 						dbAccess.consumeRow ( 	table_LOG_Edu_RendimentoEmpresa.var_Tablename, 
 												table_LOG_Edu_RendimentoEmpresa.exportNames(), 
 												table_LOG_Edu_RendimentoEmpresa.var_FieldCount - 1, 
 										        table_LOG_Edu_RendimentoEmpresa_last_id++ );
 					}
 					
 					long a = 1;
 					
 					table_LOG_Edu_RendimentoEmpresa.Reset();
 					
					table_LOG_Edu_RendimentoEmpresa.set_fk_empresaVirtual ( rowInfo[a++] );
					table_LOG_Edu_RendimentoEmpresa.set_vr_pct ( rowInfo[a++] );
					table_LOG_Edu_RendimentoEmpresa.set_dt_rend ( rowInfo[a++] );
					table_LOG_Edu_RendimentoEmpresa.set_tg_neg ( rowInfo[a++] );
					table_LOG_Edu_RendimentoEmpresa.create_LOG_Edu_RendimentoEmpresa();
					table_LOG_Edu_RendimentoEmpresa_last_id = this_id + 1;
				}
			}
 			
 			pg.Value   = 24;
 			Application.DoEvents();
 			
 			long table_T_Edu_AplicacaoVirtual_count = Convert.ToInt64 ( configFile.ReadLine() );
 							
 			lbl.Text = "Truncating  [T_Edu_AplicacaoVirtual]";
 			Application.DoEvents();
 			
 			T_Edu_AplicacaoVirtual table_T_Edu_AplicacaoVirtual = new T_Edu_AplicacaoVirtual();
 			table_T_Edu_AplicacaoVirtual.SetAccess ( ref dbAccess );
 			table_T_Edu_AplicacaoVirtual.truncate();
			
			table_T_Edu_AplicacaoVirtual.KeepNames = true;
			
 			if ( table_T_Edu_AplicacaoVirtual_count > 0 )
 			{
 				long table_T_Edu_AplicacaoVirtual_last_id = 1;
 								
 				while ( table_T_Edu_AplicacaoVirtual_count > 0 )
 				{
 					lbl.Text = "Restoring Database [T_Edu_AplicacaoVirtual] " + table_T_Edu_AplicacaoVirtual_count.ToString() + " rows remaining";
 					Application.DoEvents();
 				    
 					table_T_Edu_AplicacaoVirtual_count--;
 									
 					string[] rowInfo = new string [ table_T_Edu_AplicacaoVirtual.var_FieldCount ];
 									
 					rowInfo = configFile.ReadLine().Split ( splitter );
 					
 					long this_id = Convert.ToInt64 ( rowInfo[0] );
 					
 					while ( table_T_Edu_AplicacaoVirtual_last_id < this_id )
 					{
 						dbAccess.consumeRow ( 	table_T_Edu_AplicacaoVirtual.var_Tablename, 
 												table_T_Edu_AplicacaoVirtual.exportNames(), 
 												table_T_Edu_AplicacaoVirtual.var_FieldCount - 1, 
 										        table_T_Edu_AplicacaoVirtual_last_id++ );
 					}
 					
 					long a = 1;
 					
 					table_T_Edu_AplicacaoVirtual.Reset();
 					
					table_T_Edu_AplicacaoVirtual.set_fk_cartao ( rowInfo[a++] );
					table_T_Edu_AplicacaoVirtual.set_fk_empresaVirtual ( rowInfo[a++] );
					table_T_Edu_AplicacaoVirtual.set_vr_aplicado ( rowInfo[a++] );
					table_T_Edu_AplicacaoVirtual.set_dt_aplic ( rowInfo[a++] );
					table_T_Edu_AplicacaoVirtual.set_tg_neg ( rowInfo[a++] );
					table_T_Edu_AplicacaoVirtual.set_vr_fundo_hora ( rowInfo[a++] );
					table_T_Edu_AplicacaoVirtual.set_vr_preco_fundo ( rowInfo[a++] );
					table_T_Edu_AplicacaoVirtual.create_T_Edu_AplicacaoVirtual();
					table_T_Edu_AplicacaoVirtual_last_id = this_id + 1;
				}
			}
 			
 			pg.Value   = 25;
 			Application.DoEvents();
 			
 			long table_T_Edu_EmpresaVirtual_count = Convert.ToInt64 ( configFile.ReadLine() );
 							
 			lbl.Text = "Truncating  [T_Edu_EmpresaVirtual]";
 			Application.DoEvents();
 			
 			T_Edu_EmpresaVirtual table_T_Edu_EmpresaVirtual = new T_Edu_EmpresaVirtual();
 			table_T_Edu_EmpresaVirtual.SetAccess ( ref dbAccess );
 			table_T_Edu_EmpresaVirtual.truncate();
			
			table_T_Edu_EmpresaVirtual.KeepNames = true;
			
 			if ( table_T_Edu_EmpresaVirtual_count > 0 )
 			{
 				long table_T_Edu_EmpresaVirtual_last_id = 1;
 								
 				while ( table_T_Edu_EmpresaVirtual_count > 0 )
 				{
 					lbl.Text = "Restoring Database [T_Edu_EmpresaVirtual] " + table_T_Edu_EmpresaVirtual_count.ToString() + " rows remaining";
 					Application.DoEvents();
 				    
 					table_T_Edu_EmpresaVirtual_count--;
 									
 					string[] rowInfo = new string [ table_T_Edu_EmpresaVirtual.var_FieldCount ];
 									
 					rowInfo = configFile.ReadLine().Split ( splitter );
 					
 					long this_id = Convert.ToInt64 ( rowInfo[0] );
 					
 					while ( table_T_Edu_EmpresaVirtual_last_id < this_id )
 					{
 						dbAccess.consumeRow ( 	table_T_Edu_EmpresaVirtual.var_Tablename, 
 												table_T_Edu_EmpresaVirtual.exportNames(), 
 												table_T_Edu_EmpresaVirtual.var_FieldCount - 1, 
 										        table_T_Edu_EmpresaVirtual_last_id++ );
 					}
 					
 					long a = 1;
 					
 					table_T_Edu_EmpresaVirtual.Reset();
 					
					table_T_Edu_EmpresaVirtual.set_st_nome ( rowInfo[a++] );
					table_T_Edu_EmpresaVirtual.set_st_codigo ( rowInfo[a++] );
					table_T_Edu_EmpresaVirtual.set_vr_valorAcao ( rowInfo[a++] );
					table_T_Edu_EmpresaVirtual.create_T_Edu_EmpresaVirtual();
					table_T_Edu_EmpresaVirtual_last_id = this_id + 1;
				}
			}
 			
 			pg.Value   = 26;
 			Application.DoEvents();
 			
 			long table_I_Batch_count = Convert.ToInt64 ( configFile.ReadLine() );
 							
 			lbl.Text = "Truncating  [I_Batch]";
 			Application.DoEvents();
 			
 			I_Batch table_I_Batch = new I_Batch();
 			table_I_Batch.SetAccess ( ref dbAccess );
 			table_I_Batch.truncate();
			
			table_I_Batch.KeepNames = true;
			
 			if ( table_I_Batch_count > 0 )
 			{
 				long table_I_Batch_last_id = 1;
 								
 				while ( table_I_Batch_count > 0 )
 				{
 					lbl.Text = "Restoring Database [I_Batch] " + table_I_Batch_count.ToString() + " rows remaining";
 					Application.DoEvents();
 				    
 					table_I_Batch_count--;
 									
 					string[] rowInfo = new string [ table_I_Batch.var_FieldCount ];
 									
 					rowInfo = configFile.ReadLine().Split ( splitter );
 					
 					long this_id = Convert.ToInt64 ( rowInfo[0] );
 					
 					while ( table_I_Batch_last_id < this_id )
 					{
 						dbAccess.consumeRow ( 	table_I_Batch.var_Tablename, 
 												table_I_Batch.exportNames(), 
 												table_I_Batch.var_FieldCount - 1, 
 										        table_I_Batch_last_id++ );
 					}
 					
 					long a = 1;
 					
 					table_I_Batch.Reset();
 					
					table_I_Batch.set_st_archive ( rowInfo[a++] );
					table_I_Batch.set_dt_start ( rowInfo[a++] );
					table_I_Batch.set_dt_proc_start ( rowInfo[a++] );
					table_I_Batch.set_dt_proc_end ( rowInfo[a++] );
					table_I_Batch.set_tg_processed ( rowInfo[a++] );
					table_I_Batch.set_tg_running ( rowInfo[a++] );
					table_I_Batch.create_I_Batch();
					table_I_Batch_last_id = this_id + 1;
				}
			}
 			
 			pg.Value   = 27;
 			Application.DoEvents();
 			
 			long table_LOG_Fechamento_count = Convert.ToInt64 ( configFile.ReadLine() );
 							
 			lbl.Text = "Truncating  [LOG_Fechamento]";
 			Application.DoEvents();
 			
 			LOG_Fechamento table_LOG_Fechamento = new LOG_Fechamento();
 			table_LOG_Fechamento.SetAccess ( ref dbAccess );
 			table_LOG_Fechamento.truncate();
			
			table_LOG_Fechamento.KeepNames = true;
			
 			if ( table_LOG_Fechamento_count > 0 )
 			{
 				long table_LOG_Fechamento_last_id = 1;
 								
 				while ( table_LOG_Fechamento_count > 0 )
 				{
 					lbl.Text = "Restoring Database [LOG_Fechamento] " + table_LOG_Fechamento_count.ToString() + " rows remaining";
 					Application.DoEvents();
 				    
 					table_LOG_Fechamento_count--;
 									
 					string[] rowInfo = new string [ table_LOG_Fechamento.var_FieldCount ];
 									
 					rowInfo = configFile.ReadLine().Split ( splitter );
 					
 					long this_id = Convert.ToInt64 ( rowInfo[0] );
 					
 					while ( table_LOG_Fechamento_last_id < this_id )
 					{
 						dbAccess.consumeRow ( 	table_LOG_Fechamento.var_Tablename, 
 												table_LOG_Fechamento.exportNames(), 
 												table_LOG_Fechamento.var_FieldCount - 1, 
 										        table_LOG_Fechamento_last_id++ );
 					}
 					
 					long a = 1;
 					
 					table_LOG_Fechamento.Reset();
 					
					table_LOG_Fechamento.set_st_mes ( rowInfo[a++] );
					table_LOG_Fechamento.set_st_ano ( rowInfo[a++] );
					table_LOG_Fechamento.set_vr_valor ( rowInfo[a++] );
					table_LOG_Fechamento.set_dt_fechamento ( rowInfo[a++] );
					table_LOG_Fechamento.set_fk_empresa ( rowInfo[a++] );
					table_LOG_Fechamento.set_fk_loja ( rowInfo[a++] );
					table_LOG_Fechamento.set_fk_cartao ( rowInfo[a++] );
					table_LOG_Fechamento.set_fk_parcela ( rowInfo[a++] );
					table_LOG_Fechamento.set_dt_compra ( rowInfo[a++] );
					table_LOG_Fechamento.set_nu_parcela ( rowInfo[a++] );
					table_LOG_Fechamento.set_st_cartao ( rowInfo[a++] );
					table_LOG_Fechamento.set_st_afiliada ( rowInfo[a++] );
					table_LOG_Fechamento.create_LOG_Fechamento();
					table_LOG_Fechamento_last_id = this_id + 1;
				}
			}
 			
 			pg.Value   = 28;
 			Application.DoEvents();
 			
 			long table_LINK_Agenda_count = Convert.ToInt64 ( configFile.ReadLine() );
 							
 			lbl.Text = "Truncating  [LINK_Agenda]";
 			Application.DoEvents();
 			
 			LINK_Agenda table_LINK_Agenda = new LINK_Agenda();
 			table_LINK_Agenda.SetAccess ( ref dbAccess );
 			table_LINK_Agenda.truncate();
			
			table_LINK_Agenda.KeepNames = true;
			
 			if ( table_LINK_Agenda_count > 0 )
 			{
 				long table_LINK_Agenda_last_id = 1;
 								
 				while ( table_LINK_Agenda_count > 0 )
 				{
 					lbl.Text = "Restoring Database [LINK_Agenda] " + table_LINK_Agenda_count.ToString() + " rows remaining";
 					Application.DoEvents();
 				    
 					table_LINK_Agenda_count--;
 									
 					string[] rowInfo = new string [ table_LINK_Agenda.var_FieldCount ];
 									
 					rowInfo = configFile.ReadLine().Split ( splitter );
 					
 					long this_id = Convert.ToInt64 ( rowInfo[0] );
 					
 					while ( table_LINK_Agenda_last_id < this_id )
 					{
 						dbAccess.consumeRow ( 	table_LINK_Agenda.var_Tablename, 
 												table_LINK_Agenda.exportNames(), 
 												table_LINK_Agenda.var_FieldCount - 1, 
 										        table_LINK_Agenda_last_id++ );
 					}
 					
 					long a = 1;
 					
 					table_LINK_Agenda.Reset();
 					
					table_LINK_Agenda.set_fk_schedule ( rowInfo[a++] );
					table_LINK_Agenda.set_fk_empresa ( rowInfo[a++] );
					table_LINK_Agenda.set_en_atividade ( rowInfo[a++] );
					table_LINK_Agenda.set_st_emp_afiliada ( rowInfo[a++] );
					table_LINK_Agenda.create_LINK_Agenda();
					table_LINK_Agenda_last_id = this_id + 1;
				}
			}
 			
 			pg.Value   = 29;
 			Application.DoEvents();
 			
 			long table_LINK_PFAtivacao_count = Convert.ToInt64 ( configFile.ReadLine() );
 							
 			lbl.Text = "Truncating  [LINK_PFAtivacao]";
 			Application.DoEvents();
 			
 			LINK_PFAtivacao table_LINK_PFAtivacao = new LINK_PFAtivacao();
 			table_LINK_PFAtivacao.SetAccess ( ref dbAccess );
 			table_LINK_PFAtivacao.truncate();
			
			table_LINK_PFAtivacao.KeepNames = true;
			
 			if ( table_LINK_PFAtivacao_count > 0 )
 			{
 				long table_LINK_PFAtivacao_last_id = 1;
 								
 				while ( table_LINK_PFAtivacao_count > 0 )
 				{
 					lbl.Text = "Restoring Database [LINK_PFAtivacao] " + table_LINK_PFAtivacao_count.ToString() + " rows remaining";
 					Application.DoEvents();
 				    
 					table_LINK_PFAtivacao_count--;
 									
 					string[] rowInfo = new string [ table_LINK_PFAtivacao.var_FieldCount ];
 									
 					rowInfo = configFile.ReadLine().Split ( splitter );
 					
 					long this_id = Convert.ToInt64 ( rowInfo[0] );
 					
 					while ( table_LINK_PFAtivacao_last_id < this_id )
 					{
 						dbAccess.consumeRow ( 	table_LINK_PFAtivacao.var_Tablename, 
 												table_LINK_PFAtivacao.exportNames(), 
 												table_LINK_PFAtivacao.var_FieldCount - 1, 
 										        table_LINK_PFAtivacao_last_id++ );
 					}
 					
 					long a = 1;
 					
 					table_LINK_PFAtivacao.Reset();
 					
					table_LINK_PFAtivacao.set_fk_payfone ( rowInfo[a++] );
					table_LINK_PFAtivacao.set_dt_ativacao ( rowInfo[a++] );
					table_LINK_PFAtivacao.set_st_ativacao ( rowInfo[a++] );
					table_LINK_PFAtivacao.set_tg_status ( rowInfo[a++] );
					table_LINK_PFAtivacao.create_LINK_PFAtivacao();
					table_LINK_PFAtivacao_last_id = this_id + 1;
				}
			}
 			
 			pg.Value   = 30;
 			Application.DoEvents();
 			
 			long table_T_PendPayFone_count = Convert.ToInt64 ( configFile.ReadLine() );
 							
 			lbl.Text = "Truncating  [T_PendPayFone]";
 			Application.DoEvents();
 			
 			T_PendPayFone table_T_PendPayFone = new T_PendPayFone();
 			table_T_PendPayFone.SetAccess ( ref dbAccess );
 			table_T_PendPayFone.truncate();
			
			table_T_PendPayFone.KeepNames = true;
			
 			if ( table_T_PendPayFone_count > 0 )
 			{
 				long table_T_PendPayFone_last_id = 1;
 								
 				while ( table_T_PendPayFone_count > 0 )
 				{
 					lbl.Text = "Restoring Database [T_PendPayFone] " + table_T_PendPayFone_count.ToString() + " rows remaining";
 					Application.DoEvents();
 				    
 					table_T_PendPayFone_count--;
 									
 					string[] rowInfo = new string [ table_T_PendPayFone.var_FieldCount ];
 									
 					rowInfo = configFile.ReadLine().Split ( splitter );
 					
 					long this_id = Convert.ToInt64 ( rowInfo[0] );
 					
 					while ( table_T_PendPayFone_last_id < this_id )
 					{
 						dbAccess.consumeRow ( 	table_T_PendPayFone.var_Tablename, 
 												table_T_PendPayFone.exportNames(), 
 												table_T_PendPayFone.var_FieldCount - 1, 
 										        table_T_PendPayFone_last_id++ );
 					}
 					
 					long a = 1;
 					
 					table_T_PendPayFone.Reset();
 					
					table_T_PendPayFone.set_fk_cartao ( rowInfo[a++] );
					table_T_PendPayFone.set_fk_terminal ( rowInfo[a++] );
					table_T_PendPayFone.set_nu_nsu ( rowInfo[a++] );
					table_T_PendPayFone.set_vr_valor ( rowInfo[a++] );
					table_T_PendPayFone.set_dt_inclusao ( rowInfo[a++] );
					table_T_PendPayFone.set_en_situacao ( rowInfo[a++] );
					table_T_PendPayFone.set_fk_empresa ( rowInfo[a++] );
					table_T_PendPayFone.set_fk_loja ( rowInfo[a++] );
					table_T_PendPayFone.create_T_PendPayFone();
					table_T_PendPayFone_last_id = this_id + 1;
				}
			}
 			
 			pg.Value   = 31;
 			Application.DoEvents();
 			
 			long table_T_PayFone_count = Convert.ToInt64 ( configFile.ReadLine() );
 							
 			lbl.Text = "Truncating  [T_PayFone]";
 			Application.DoEvents();
 			
 			T_PayFone table_T_PayFone = new T_PayFone();
 			table_T_PayFone.SetAccess ( ref dbAccess );
 			table_T_PayFone.truncate();
			
			table_T_PayFone.KeepNames = true;
			
 			if ( table_T_PayFone_count > 0 )
 			{
 				long table_T_PayFone_last_id = 1;
 								
 				while ( table_T_PayFone_count > 0 )
 				{
 					lbl.Text = "Restoring Database [T_PayFone] " + table_T_PayFone_count.ToString() + " rows remaining";
 					Application.DoEvents();
 				    
 					table_T_PayFone_count--;
 									
 					string[] rowInfo = new string [ table_T_PayFone.var_FieldCount ];
 									
 					rowInfo = configFile.ReadLine().Split ( splitter );
 					
 					long this_id = Convert.ToInt64 ( rowInfo[0] );
 					
 					while ( table_T_PayFone_last_id < this_id )
 					{
 						dbAccess.consumeRow ( 	table_T_PayFone.var_Tablename, 
 												table_T_PayFone.exportNames(), 
 												table_T_PayFone.var_FieldCount - 1, 
 										        table_T_PayFone_last_id++ );
 					}
 					
 					long a = 1;
 					
 					table_T_PayFone.Reset();
 					
					table_T_PayFone.set_st_telefone ( rowInfo[a++] );
					table_T_PayFone.set_tg_tipoCelular ( rowInfo[a++] );
					table_T_PayFone.set_fk_cartao ( rowInfo[a++] );
					table_T_PayFone.set_fk_terminal ( rowInfo[a++] );
					table_T_PayFone.create_T_PayFone();
					table_T_PayFone_last_id = this_id + 1;
				}
			}
 			
 			pg.Value   = 32;
 			Application.DoEvents();
 			
 			long table_T_Parcelas_count = Convert.ToInt64 ( configFile.ReadLine() );
 							
 			lbl.Text = "Truncating  [T_Parcelas]";
 			Application.DoEvents();
 			
 			T_Parcelas table_T_Parcelas = new T_Parcelas();
 			table_T_Parcelas.SetAccess ( ref dbAccess );
 			table_T_Parcelas.truncate();
			
			table_T_Parcelas.KeepNames = true;
			
 			if ( table_T_Parcelas_count > 0 )
 			{
 				long table_T_Parcelas_last_id = 1;
 								
 				while ( table_T_Parcelas_count > 0 )
 				{
 					lbl.Text = "Restoring Database [T_Parcelas] " + table_T_Parcelas_count.ToString() + " rows remaining";
 					Application.DoEvents();
 				    
 					table_T_Parcelas_count--;
 									
 					string[] rowInfo = new string [ table_T_Parcelas.var_FieldCount ];
 									
 					rowInfo = configFile.ReadLine().Split ( splitter );
 					
 					long this_id = Convert.ToInt64 ( rowInfo[0] );
 					
 					while ( table_T_Parcelas_last_id < this_id )
 					{
 						dbAccess.consumeRow ( 	table_T_Parcelas.var_Tablename, 
 												table_T_Parcelas.exportNames(), 
 												table_T_Parcelas.var_FieldCount - 1, 
 										        table_T_Parcelas_last_id++ );
 					}
 					
 					long a = 1;
 					
 					table_T_Parcelas.Reset();
 					
					table_T_Parcelas.set_nu_nsu ( rowInfo[a++] );
					table_T_Parcelas.set_fk_empresa ( rowInfo[a++] );
					table_T_Parcelas.set_fk_cartao ( rowInfo[a++] );
					table_T_Parcelas.set_dt_inclusao ( rowInfo[a++] );
					table_T_Parcelas.set_nu_parcela ( rowInfo[a++] );
					table_T_Parcelas.set_vr_valor ( rowInfo[a++] );
					table_T_Parcelas.set_nu_indice ( rowInfo[a++] );
					table_T_Parcelas.set_tg_pago ( rowInfo[a++] );
					table_T_Parcelas.set_fk_loja ( rowInfo[a++] );
					table_T_Parcelas.set_nu_tot_parcelas ( rowInfo[a++] );
					table_T_Parcelas.set_fk_terminal ( rowInfo[a++] );
					table_T_Parcelas.set_fk_log_transacoes ( rowInfo[a++] );
					table_T_Parcelas.create_T_Parcelas();
					table_T_Parcelas_last_id = this_id + 1;
				}
			}
 			
 			pg.Value   = 33;
 			Application.DoEvents();
 			
 			long table_LOG_Transacoes_count = Convert.ToInt64 ( configFile.ReadLine() );
 							
 			lbl.Text = "Truncating  [LOG_Transacoes]";
 			Application.DoEvents();
 			
 			LOG_Transacoes table_LOG_Transacoes = new LOG_Transacoes();
 			table_LOG_Transacoes.SetAccess ( ref dbAccess );
 			table_LOG_Transacoes.truncate();
			
			table_LOG_Transacoes.KeepNames = true;
			
 			if ( table_LOG_Transacoes_count > 0 )
 			{
 				long table_LOG_Transacoes_last_id = 1;
 								
 				while ( table_LOG_Transacoes_count > 0 )
 				{
 					lbl.Text = "Restoring Database [LOG_Transacoes] " + table_LOG_Transacoes_count.ToString() + " rows remaining";
 					Application.DoEvents();
 				    
 					table_LOG_Transacoes_count--;
 									
 					string[] rowInfo = new string [ table_LOG_Transacoes.var_FieldCount ];
 									
 					rowInfo = configFile.ReadLine().Split ( splitter );
 					
 					long this_id = Convert.ToInt64 ( rowInfo[0] );
 					
 					while ( table_LOG_Transacoes_last_id < this_id )
 					{
 						dbAccess.consumeRow ( 	table_LOG_Transacoes.var_Tablename, 
 												table_LOG_Transacoes.exportNames(), 
 												table_LOG_Transacoes.var_FieldCount - 1, 
 										        table_LOG_Transacoes_last_id++ );
 					}
 					
 					long a = 1;
 					
 					table_LOG_Transacoes.Reset();
 					
					table_LOG_Transacoes.set_fk_terminal ( rowInfo[a++] );
					table_LOG_Transacoes.set_dt_transacao ( rowInfo[a++] );
					table_LOG_Transacoes.set_nu_nsu ( rowInfo[a++] );
					table_LOG_Transacoes.set_fk_empresa ( rowInfo[a++] );
					table_LOG_Transacoes.set_fk_cartao ( rowInfo[a++] );
					table_LOG_Transacoes.set_vr_total ( rowInfo[a++] );
					table_LOG_Transacoes.set_nu_parcelas ( rowInfo[a++] );
					table_LOG_Transacoes.set_nu_cod_erro ( rowInfo[a++] );
					table_LOG_Transacoes.set_tg_confirmada ( rowInfo[a++] );
					table_LOG_Transacoes.set_nu_nsuOrig ( rowInfo[a++] );
					table_LOG_Transacoes.set_en_operacao ( rowInfo[a++] );
					table_LOG_Transacoes.set_st_msg_transacao ( rowInfo[a++] );
					table_LOG_Transacoes.set_tg_contabil ( rowInfo[a++] );
					table_LOG_Transacoes.set_fk_loja ( rowInfo[a++] );
					table_LOG_Transacoes.set_vr_saldo_disp ( rowInfo[a++] );
					table_LOG_Transacoes.set_vr_saldo_disp_tot ( rowInfo[a++] );
					table_LOG_Transacoes.set_st_doc ( rowInfo[a++] );
					table_LOG_Transacoes.create_LOG_Transacoes();
					table_LOG_Transacoes_last_id = this_id + 1;
				}
			}
 			
 			pg.Value   = 34;
 			Application.DoEvents();
 			
 			long table_I_Scheduler_count = Convert.ToInt64 ( configFile.ReadLine() );
 							
 			lbl.Text = "Truncating  [I_Scheduler]";
 			Application.DoEvents();
 			
 			I_Scheduler table_I_Scheduler = new I_Scheduler();
 			table_I_Scheduler.SetAccess ( ref dbAccess );
 			table_I_Scheduler.truncate();
			
			table_I_Scheduler.KeepNames = true;
			
 			if ( table_I_Scheduler_count > 0 )
 			{
 				long table_I_Scheduler_last_id = 1;
 								
 				while ( table_I_Scheduler_count > 0 )
 				{
 					lbl.Text = "Restoring Database [I_Scheduler] " + table_I_Scheduler_count.ToString() + " rows remaining";
 					Application.DoEvents();
 				    
 					table_I_Scheduler_count--;
 									
 					string[] rowInfo = new string [ table_I_Scheduler.var_FieldCount ];
 									
 					rowInfo = configFile.ReadLine().Split ( splitter );
 					
 					long this_id = Convert.ToInt64 ( rowInfo[0] );
 					
 					while ( table_I_Scheduler_last_id < this_id )
 					{
 						dbAccess.consumeRow ( 	table_I_Scheduler.var_Tablename, 
 												table_I_Scheduler.exportNames(), 
 												table_I_Scheduler.var_FieldCount - 1, 
 										        table_I_Scheduler_last_id++ );
 					}
 					
 					long a = 1;
 					
 					table_I_Scheduler.Reset();
 					
					table_I_Scheduler.set_st_job ( rowInfo[a++] );
					table_I_Scheduler.set_tg_type ( rowInfo[a++] );
					table_I_Scheduler.set_dt_specific ( rowInfo[a++] );
					table_I_Scheduler.set_st_daily_hhmm ( rowInfo[a++] );
					table_I_Scheduler.set_st_weekly_dow ( rowInfo[a++] );
					table_I_Scheduler.set_st_weekly_hhmm ( rowInfo[a++] );
					table_I_Scheduler.set_nu_monthly_day ( rowInfo[a++] );
					table_I_Scheduler.set_st_monthly_hhmm ( rowInfo[a++] );
					table_I_Scheduler.set_dt_last ( rowInfo[a++] );
					table_I_Scheduler.set_tg_status ( rowInfo[a++] );
					table_I_Scheduler.set_dt_prev ( rowInfo[a++] );
					table_I_Scheduler.create_I_Scheduler();
					table_I_Scheduler_last_id = this_id + 1;
				}
			}
 			
 			pg.Value   = 35;
 			Application.DoEvents();
 			
 			long table_LOG_NSU_count = Convert.ToInt64 ( configFile.ReadLine() );
 							
 			lbl.Text = "Truncating  [LOG_NSU]";
 			Application.DoEvents();
 			
 			LOG_NSU table_LOG_NSU = new LOG_NSU();
 			table_LOG_NSU.SetAccess ( ref dbAccess );
 			table_LOG_NSU.truncate();
			
			table_LOG_NSU.KeepNames = true;
			
 			if ( table_LOG_NSU_count > 0 )
 			{
 				long table_LOG_NSU_last_id = 1;
 								
 				while ( table_LOG_NSU_count > 0 )
 				{
 					lbl.Text = "Restoring Database [LOG_NSU] " + table_LOG_NSU_count.ToString() + " rows remaining";
 					Application.DoEvents();
 				    
 					table_LOG_NSU_count--;
 									
 					string[] rowInfo = new string [ table_LOG_NSU.var_FieldCount ];
 									
 					rowInfo = configFile.ReadLine().Split ( splitter );
 					
 					long this_id = Convert.ToInt64 ( rowInfo[0] );
 					
 					while ( table_LOG_NSU_last_id < this_id )
 					{
 						dbAccess.consumeRow ( 	table_LOG_NSU.var_Tablename, 
 												table_LOG_NSU.exportNames(), 
 												table_LOG_NSU.var_FieldCount - 1, 
 										        table_LOG_NSU_last_id++ );
 					}
 					
 					long a = 1;
 					
 					table_LOG_NSU.Reset();
 					
					table_LOG_NSU.set_dt_log ( rowInfo[a++] );
					table_LOG_NSU.create_LOG_NSU();
					table_LOG_NSU_last_id = this_id + 1;
				}
			}
 			
 			pg.Value   = 36;
 			Application.DoEvents();
 			
 			long table_LOG_Audit_count = Convert.ToInt64 ( configFile.ReadLine() );
 							
 			lbl.Text = "Truncating  [LOG_Audit]";
 			Application.DoEvents();
 			
 			LOG_Audit table_LOG_Audit = new LOG_Audit();
 			table_LOG_Audit.SetAccess ( ref dbAccess );
 			table_LOG_Audit.truncate();
			
			table_LOG_Audit.KeepNames = true;
			
 			if ( table_LOG_Audit_count > 0 )
 			{
 				long table_LOG_Audit_last_id = 1;
 								
 				while ( table_LOG_Audit_count > 0 )
 				{
 					lbl.Text = "Restoring Database [LOG_Audit] " + table_LOG_Audit_count.ToString() + " rows remaining";
 					Application.DoEvents();
 				    
 					table_LOG_Audit_count--;
 									
 					string[] rowInfo = new string [ table_LOG_Audit.var_FieldCount ];
 									
 					rowInfo = configFile.ReadLine().Split ( splitter );
 					
 					long this_id = Convert.ToInt64 ( rowInfo[0] );
 					
 					while ( table_LOG_Audit_last_id < this_id )
 					{
 						dbAccess.consumeRow ( 	table_LOG_Audit.var_Tablename, 
 												table_LOG_Audit.exportNames(), 
 												table_LOG_Audit.var_FieldCount - 1, 
 										        table_LOG_Audit_last_id++ );
 					}
 					
 					long a = 1;
 					
 					table_LOG_Audit.Reset();
 					
					table_LOG_Audit.set_fk_usuario ( rowInfo[a++] );
					table_LOG_Audit.set_tg_operacao ( rowInfo[a++] );
					table_LOG_Audit.set_dt_operacao ( rowInfo[a++] );
					table_LOG_Audit.set_st_observacao ( rowInfo[a++] );
					table_LOG_Audit.set_fk_generic ( rowInfo[a++] );
					table_LOG_Audit.create_LOG_Audit();
					table_LOG_Audit_last_id = this_id + 1;
				}
			}
 			
 			pg.Value   = 37;
 			Application.DoEvents();
 			
 			long table_T_Terminal_count = Convert.ToInt64 ( configFile.ReadLine() );
 							
 			lbl.Text = "Truncating  [T_Terminal]";
 			Application.DoEvents();
 			
 			T_Terminal table_T_Terminal = new T_Terminal();
 			table_T_Terminal.SetAccess ( ref dbAccess );
 			table_T_Terminal.truncate();
			
			table_T_Terminal.KeepNames = true;
			
 			if ( table_T_Terminal_count > 0 )
 			{
 				long table_T_Terminal_last_id = 1;
 								
 				while ( table_T_Terminal_count > 0 )
 				{
 					lbl.Text = "Restoring Database [T_Terminal] " + table_T_Terminal_count.ToString() + " rows remaining";
 					Application.DoEvents();
 				    
 					table_T_Terminal_count--;
 									
 					string[] rowInfo = new string [ table_T_Terminal.var_FieldCount ];
 									
 					rowInfo = configFile.ReadLine().Split ( splitter );
 					
 					long this_id = Convert.ToInt64 ( rowInfo[0] );
 					
 					while ( table_T_Terminal_last_id < this_id )
 					{
 						dbAccess.consumeRow ( 	table_T_Terminal.var_Tablename, 
 												table_T_Terminal.exportNames(), 
 												table_T_Terminal.var_FieldCount - 1, 
 										        table_T_Terminal_last_id++ );
 					}
 					
 					long a = 1;
 					
 					table_T_Terminal.Reset();
 					
					table_T_Terminal.set_nu_terminal ( rowInfo[a++] );
					table_T_Terminal.set_fk_loja ( rowInfo[a++] );
					table_T_Terminal.set_st_localizacao ( rowInfo[a++] );
					table_T_Terminal.create_T_Terminal();
					table_T_Terminal_last_id = this_id + 1;
				}
			}
 			
 			pg.Value   = 38;
 			Application.DoEvents();
 			
 			long table_T_Empresa_count = Convert.ToInt64 ( configFile.ReadLine() );
 							
 			lbl.Text = "Truncating  [T_Empresa]";
 			Application.DoEvents();
 			
 			T_Empresa table_T_Empresa = new T_Empresa();
 			table_T_Empresa.SetAccess ( ref dbAccess );
 			table_T_Empresa.truncate();
			
			table_T_Empresa.KeepNames = true;
			
 			if ( table_T_Empresa_count > 0 )
 			{
 				long table_T_Empresa_last_id = 1;
 								
 				while ( table_T_Empresa_count > 0 )
 				{
 					lbl.Text = "Restoring Database [T_Empresa] " + table_T_Empresa_count.ToString() + " rows remaining";
 					Application.DoEvents();
 				    
 					table_T_Empresa_count--;
 									
 					string[] rowInfo = new string [ table_T_Empresa.var_FieldCount ];
 									
 					rowInfo = configFile.ReadLine().Split ( splitter );
 					
 					long this_id = Convert.ToInt64 ( rowInfo[0] );
 					
 					while ( table_T_Empresa_last_id < this_id )
 					{
 						dbAccess.consumeRow ( 	table_T_Empresa.var_Tablename, 
 												table_T_Empresa.exportNames(), 
 												table_T_Empresa.var_FieldCount - 1, 
 										        table_T_Empresa_last_id++ );
 					}
 					
 					long a = 1;
 					
 					table_T_Empresa.Reset();
 					
					table_T_Empresa.set_st_empresa ( rowInfo[a++] );
					table_T_Empresa.set_nu_CNPJ ( rowInfo[a++] );
					table_T_Empresa.set_st_fantasia ( rowInfo[a++] );
					table_T_Empresa.set_st_social ( rowInfo[a++] );
					table_T_Empresa.set_st_endereco ( rowInfo[a++] );
					table_T_Empresa.set_st_cidade ( rowInfo[a++] );
					table_T_Empresa.set_st_estado ( rowInfo[a++] );
					table_T_Empresa.set_nu_CEP ( rowInfo[a++] );
					table_T_Empresa.set_nu_telefone ( rowInfo[a++] );
					table_T_Empresa.set_nu_cartoes ( rowInfo[a++] );
					table_T_Empresa.set_nu_parcelas ( rowInfo[a++] );
					table_T_Empresa.set_tg_blocked ( rowInfo[a++] );
					table_T_Empresa.set_fk_admin ( rowInfo[a++] );
					table_T_Empresa.set_nu_contaDeb ( rowInfo[a++] );
					table_T_Empresa.set_vr_mensalidade ( rowInfo[a++] );
					table_T_Empresa.set_nu_pctValor ( rowInfo[a++] );
					table_T_Empresa.set_vr_transacao ( rowInfo[a++] );
					table_T_Empresa.set_vr_minimo ( rowInfo[a++] );
					table_T_Empresa.set_nu_franquia ( rowInfo[a++] );
					table_T_Empresa.set_nu_periodoFat ( rowInfo[a++] );
					table_T_Empresa.set_nu_diaVenc ( rowInfo[a++] );
					table_T_Empresa.set_tg_tipoCobranca ( rowInfo[a++] );
					table_T_Empresa.set_nu_bancoFat ( rowInfo[a++] );
					table_T_Empresa.set_vr_cartaoAtivo ( rowInfo[a++] );
					table_T_Empresa.set_tg_isentoFat ( rowInfo[a++] );
					table_T_Empresa.set_st_obs ( rowInfo[a++] );
					table_T_Empresa.set_tg_bloq ( rowInfo[a++] );
					table_T_Empresa.create_T_Empresa();
					table_T_Empresa_last_id = this_id + 1;
				}
			}
 			
 			pg.Value   = 39;
 			Application.DoEvents();
 			
 			long table_T_Loja_count = Convert.ToInt64 ( configFile.ReadLine() );
 							
 			lbl.Text = "Truncating  [T_Loja]";
 			Application.DoEvents();
 			
 			T_Loja table_T_Loja = new T_Loja();
 			table_T_Loja.SetAccess ( ref dbAccess );
 			table_T_Loja.truncate();
			
			table_T_Loja.KeepNames = true;
			
 			if ( table_T_Loja_count > 0 )
 			{
 				long table_T_Loja_last_id = 1;
 								
 				while ( table_T_Loja_count > 0 )
 				{
 					lbl.Text = "Restoring Database [T_Loja] " + table_T_Loja_count.ToString() + " rows remaining";
 					Application.DoEvents();
 				    
 					table_T_Loja_count--;
 									
 					string[] rowInfo = new string [ table_T_Loja.var_FieldCount ];
 									
 					rowInfo = configFile.ReadLine().Split ( splitter );
 					
 					long this_id = Convert.ToInt64 ( rowInfo[0] );
 					
 					while ( table_T_Loja_last_id < this_id )
 					{
 						dbAccess.consumeRow ( 	table_T_Loja.var_Tablename, 
 												table_T_Loja.exportNames(), 
 												table_T_Loja.var_FieldCount - 1, 
 										        table_T_Loja_last_id++ );
 					}
 					
 					long a = 1;
 					
 					table_T_Loja.Reset();
 					
					table_T_Loja.set_nu_CNPJ ( rowInfo[a++] );
					table_T_Loja.set_st_nome ( rowInfo[a++] );
					table_T_Loja.set_st_social ( rowInfo[a++] );
					table_T_Loja.set_st_endereco ( rowInfo[a++] );
					table_T_Loja.set_st_enderecoInst ( rowInfo[a++] );
					table_T_Loja.set_nu_inscEst ( rowInfo[a++] );
					table_T_Loja.set_st_cidade ( rowInfo[a++] );
					table_T_Loja.set_st_estado ( rowInfo[a++] );
					table_T_Loja.set_nu_CEP ( rowInfo[a++] );
					table_T_Loja.set_nu_telefone ( rowInfo[a++] );
					table_T_Loja.set_nu_fax ( rowInfo[a++] );
					table_T_Loja.set_st_contato ( rowInfo[a++] );
					table_T_Loja.set_vr_mensalidade ( rowInfo[a++] );
					table_T_Loja.set_nu_contaDeb ( rowInfo[a++] );
					table_T_Loja.set_st_obs ( rowInfo[a++] );
					table_T_Loja.set_st_loja ( rowInfo[a++] );
					table_T_Loja.set_tg_blocked ( rowInfo[a++] );
					table_T_Loja.set_nu_pctValor ( rowInfo[a++] );
					table_T_Loja.set_vr_transacao ( rowInfo[a++] );
					table_T_Loja.set_vr_minimo ( rowInfo[a++] );
					table_T_Loja.set_nu_franquia ( rowInfo[a++] );
					table_T_Loja.set_nu_periodoFat ( rowInfo[a++] );
					table_T_Loja.set_nu_diavenc ( rowInfo[a++] );
					table_T_Loja.set_tg_tipoCobranca ( rowInfo[a++] );
					table_T_Loja.set_nu_bancoFat ( rowInfo[a++] );
					table_T_Loja.set_tg_isentoFat ( rowInfo[a++] );
					table_T_Loja.set_st_senha ( rowInfo[a++] );
					table_T_Loja.set_tg_cancel ( rowInfo[a++] );
					table_T_Loja.create_T_Loja();
					table_T_Loja_last_id = this_id + 1;
				}
			}
 			
 			pg.Value   = 40;
 			Application.DoEvents();
 			
 			long table_LINK_LojaEmpresa_count = Convert.ToInt64 ( configFile.ReadLine() );
 							
 			lbl.Text = "Truncating  [LINK_LojaEmpresa]";
 			Application.DoEvents();
 			
 			LINK_LojaEmpresa table_LINK_LojaEmpresa = new LINK_LojaEmpresa();
 			table_LINK_LojaEmpresa.SetAccess ( ref dbAccess );
 			table_LINK_LojaEmpresa.truncate();
			
			table_LINK_LojaEmpresa.KeepNames = true;
			
 			if ( table_LINK_LojaEmpresa_count > 0 )
 			{
 				long table_LINK_LojaEmpresa_last_id = 1;
 								
 				while ( table_LINK_LojaEmpresa_count > 0 )
 				{
 					lbl.Text = "Restoring Database [LINK_LojaEmpresa] " + table_LINK_LojaEmpresa_count.ToString() + " rows remaining";
 					Application.DoEvents();
 				    
 					table_LINK_LojaEmpresa_count--;
 									
 					string[] rowInfo = new string [ table_LINK_LojaEmpresa.var_FieldCount ];
 									
 					rowInfo = configFile.ReadLine().Split ( splitter );
 					
 					long this_id = Convert.ToInt64 ( rowInfo[0] );
 					
 					while ( table_LINK_LojaEmpresa_last_id < this_id )
 					{
 						dbAccess.consumeRow ( 	table_LINK_LojaEmpresa.var_Tablename, 
 												table_LINK_LojaEmpresa.exportNames(), 
 												table_LINK_LojaEmpresa.var_FieldCount - 1, 
 										        table_LINK_LojaEmpresa_last_id++ );
 					}
 					
 					long a = 1;
 					
 					table_LINK_LojaEmpresa.Reset();
 					
					table_LINK_LojaEmpresa.set_fk_loja ( rowInfo[a++] );
					table_LINK_LojaEmpresa.set_fk_empresa ( rowInfo[a++] );
					table_LINK_LojaEmpresa.set_tx_admin ( rowInfo[a++] );
					table_LINK_LojaEmpresa.set_nu_dias_repasse ( rowInfo[a++] );
					table_LINK_LojaEmpresa.set_st_ag ( rowInfo[a++] );
					table_LINK_LojaEmpresa.set_st_conta ( rowInfo[a++] );
					table_LINK_LojaEmpresa.set_st_banco ( rowInfo[a++] );
					table_LINK_LojaEmpresa.create_LINK_LojaEmpresa();
					table_LINK_LojaEmpresa_last_id = this_id + 1;
				}
			}
 			
 			pg.Value   = 41;
 			Application.DoEvents();
 			
 			long table_T_Usuario_count = Convert.ToInt64 ( configFile.ReadLine() );
 							
 			lbl.Text = "Truncating  [T_Usuario]";
 			Application.DoEvents();
 			
 			T_Usuario table_T_Usuario = new T_Usuario();
 			table_T_Usuario.SetAccess ( ref dbAccess );
 			table_T_Usuario.truncate();
			
			table_T_Usuario.KeepNames = true;
			
 			if ( table_T_Usuario_count > 0 )
 			{
 				long table_T_Usuario_last_id = 1;
 								
 				while ( table_T_Usuario_count > 0 )
 				{
 					lbl.Text = "Restoring Database [T_Usuario] " + table_T_Usuario_count.ToString() + " rows remaining";
 					Application.DoEvents();
 				    
 					table_T_Usuario_count--;
 									
 					string[] rowInfo = new string [ table_T_Usuario.var_FieldCount ];
 									
 					rowInfo = configFile.ReadLine().Split ( splitter );
 					
 					long this_id = Convert.ToInt64 ( rowInfo[0] );
 					
 					while ( table_T_Usuario_last_id < this_id )
 					{
 						dbAccess.consumeRow ( 	table_T_Usuario.var_Tablename, 
 												table_T_Usuario.exportNames(), 
 												table_T_Usuario.var_FieldCount - 1, 
 										        table_T_Usuario_last_id++ );
 					}
 					
 					long a = 1;
 					
 					table_T_Usuario.Reset();
 					
					table_T_Usuario.set_tg_nivel ( rowInfo[a++] );
					table_T_Usuario.set_tg_logoff ( rowInfo[a++] );
					table_T_Usuario.set_dt_trocaSenha ( rowInfo[a++] );
					table_T_Usuario.set_dt_ultUso ( rowInfo[a++] );
					table_T_Usuario.set_nu_senhaErrada ( rowInfo[a++] );
					table_T_Usuario.set_tg_trocaSenha ( rowInfo[a++] );
					table_T_Usuario.set_st_senha_1 ( rowInfo[a++] );
					table_T_Usuario.set_st_senha_2 ( rowInfo[a++] );
					table_T_Usuario.set_st_senha_3 ( rowInfo[a++] );
					table_T_Usuario.set_st_senha_4 ( rowInfo[a++] );
					table_T_Usuario.set_st_senha_5 ( rowInfo[a++] );
					table_T_Usuario.set_st_empresa ( rowInfo[a++] );
					table_T_Usuario.set_st_senha ( rowInfo[a++] );
					table_T_Usuario.set_tg_bloqueio ( rowInfo[a++] );
					table_T_Usuario.set_st_nome ( rowInfo[a++] );
					table_T_Usuario.set_fk_quiosque ( rowInfo[a++] );
					table_T_Usuario.set_tg_aviso ( rowInfo[a++] );
					table_T_Usuario.create_T_Usuario();
					table_T_Usuario_last_id = this_id + 1;
				}
			}
 			
 			pg.Value   = 42;
 			Application.DoEvents();
 			
 			long table_LINK_ProprietarioCartao_count = Convert.ToInt64 ( configFile.ReadLine() );
 							
 			lbl.Text = "Truncating  [LINK_ProprietarioCartao]";
 			Application.DoEvents();
 			
 			LINK_ProprietarioCartao table_LINK_ProprietarioCartao = new LINK_ProprietarioCartao();
 			table_LINK_ProprietarioCartao.SetAccess ( ref dbAccess );
 			table_LINK_ProprietarioCartao.truncate();
			
			table_LINK_ProprietarioCartao.KeepNames = true;
			
 			if ( table_LINK_ProprietarioCartao_count > 0 )
 			{
 				long table_LINK_ProprietarioCartao_last_id = 1;
 								
 				while ( table_LINK_ProprietarioCartao_count > 0 )
 				{
 					lbl.Text = "Restoring Database [LINK_ProprietarioCartao] " + table_LINK_ProprietarioCartao_count.ToString() + " rows remaining";
 					Application.DoEvents();
 				    
 					table_LINK_ProprietarioCartao_count--;
 									
 					string[] rowInfo = new string [ table_LINK_ProprietarioCartao.var_FieldCount ];
 									
 					rowInfo = configFile.ReadLine().Split ( splitter );
 					
 					long this_id = Convert.ToInt64 ( rowInfo[0] );
 					
 					while ( table_LINK_ProprietarioCartao_last_id < this_id )
 					{
 						dbAccess.consumeRow ( 	table_LINK_ProprietarioCartao.var_Tablename, 
 												table_LINK_ProprietarioCartao.exportNames(), 
 												table_LINK_ProprietarioCartao.var_FieldCount - 1, 
 										        table_LINK_ProprietarioCartao_last_id++ );
 					}
 					
 					long a = 1;
 					
 					table_LINK_ProprietarioCartao.Reset();
 					
					table_LINK_ProprietarioCartao.set_fk_cartao ( rowInfo[a++] );
					table_LINK_ProprietarioCartao.set_fk_proprietario ( rowInfo[a++] );
					table_LINK_ProprietarioCartao.create_LINK_ProprietarioCartao();
					table_LINK_ProprietarioCartao_last_id = this_id + 1;
				}
			}
 			
 			pg.Value   = 43;
 			Application.DoEvents();
 			
 			long table_T_Dependente_count = Convert.ToInt64 ( configFile.ReadLine() );
 							
 			lbl.Text = "Truncating  [T_Dependente]";
 			Application.DoEvents();
 			
 			T_Dependente table_T_Dependente = new T_Dependente();
 			table_T_Dependente.SetAccess ( ref dbAccess );
 			table_T_Dependente.truncate();
			
			table_T_Dependente.KeepNames = true;
			
 			if ( table_T_Dependente_count > 0 )
 			{
 				long table_T_Dependente_last_id = 1;
 								
 				while ( table_T_Dependente_count > 0 )
 				{
 					lbl.Text = "Restoring Database [T_Dependente] " + table_T_Dependente_count.ToString() + " rows remaining";
 					Application.DoEvents();
 				    
 					table_T_Dependente_count--;
 									
 					string[] rowInfo = new string [ table_T_Dependente.var_FieldCount ];
 									
 					rowInfo = configFile.ReadLine().Split ( splitter );
 					
 					long this_id = Convert.ToInt64 ( rowInfo[0] );
 					
 					while ( table_T_Dependente_last_id < this_id )
 					{
 						dbAccess.consumeRow ( 	table_T_Dependente.var_Tablename, 
 												table_T_Dependente.exportNames(), 
 												table_T_Dependente.var_FieldCount - 1, 
 										        table_T_Dependente_last_id++ );
 					}
 					
 					long a = 1;
 					
 					table_T_Dependente.Reset();
 					
					table_T_Dependente.set_nu_titularidade ( rowInfo[a++] );
					table_T_Dependente.set_st_nome ( rowInfo[a++] );
					table_T_Dependente.set_fk_proprietario ( rowInfo[a++] );
					table_T_Dependente.create_T_Dependente();
					table_T_Dependente_last_id = this_id + 1;
				}
			}
 			
 			pg.Value   = 44;
 			Application.DoEvents();
 			
 			long table_T_Proprietario_count = Convert.ToInt64 ( configFile.ReadLine() );
 							
 			lbl.Text = "Truncating  [T_Proprietario]";
 			Application.DoEvents();
 			
 			T_Proprietario table_T_Proprietario = new T_Proprietario();
 			table_T_Proprietario.SetAccess ( ref dbAccess );
 			table_T_Proprietario.truncate();
			
			table_T_Proprietario.KeepNames = true;
			
 			if ( table_T_Proprietario_count > 0 )
 			{
 				long table_T_Proprietario_last_id = 1;
 								
 				while ( table_T_Proprietario_count > 0 )
 				{
 					lbl.Text = "Restoring Database [T_Proprietario] " + table_T_Proprietario_count.ToString() + " rows remaining";
 					Application.DoEvents();
 				    
 					table_T_Proprietario_count--;
 									
 					string[] rowInfo = new string [ table_T_Proprietario.var_FieldCount ];
 									
 					rowInfo = configFile.ReadLine().Split ( splitter );
 					
 					long this_id = Convert.ToInt64 ( rowInfo[0] );
 					
 					while ( table_T_Proprietario_last_id < this_id )
 					{
 						dbAccess.consumeRow ( 	table_T_Proprietario.var_Tablename, 
 												table_T_Proprietario.exportNames(), 
 												table_T_Proprietario.var_FieldCount - 1, 
 										        table_T_Proprietario_last_id++ );
 					}
 					
 					long a = 1;
 					
 					table_T_Proprietario.Reset();
 					
					table_T_Proprietario.set_st_cpf ( rowInfo[a++] );
					table_T_Proprietario.set_st_nome ( rowInfo[a++] );
					table_T_Proprietario.set_st_endereco ( rowInfo[a++] );
					table_T_Proprietario.set_st_numero ( rowInfo[a++] );
					table_T_Proprietario.set_st_complemento ( rowInfo[a++] );
					table_T_Proprietario.set_st_bairro ( rowInfo[a++] );
					table_T_Proprietario.set_st_cidade ( rowInfo[a++] );
					table_T_Proprietario.set_st_UF ( rowInfo[a++] );
					table_T_Proprietario.set_st_cep ( rowInfo[a++] );
					table_T_Proprietario.set_st_ddd ( rowInfo[a++] );
					table_T_Proprietario.set_st_telefone ( rowInfo[a++] );
					table_T_Proprietario.set_dt_nasc ( rowInfo[a++] );
					table_T_Proprietario.set_st_email ( rowInfo[a++] );
					table_T_Proprietario.set_vr_renda ( rowInfo[a++] );
					table_T_Proprietario.set_st_senhaEdu ( rowInfo[a++] );
					table_T_Proprietario.create_T_Proprietario();
					table_T_Proprietario_last_id = this_id + 1;
				}
			}
 			
 			pg.Value   = 45;
 			Application.DoEvents();
 			
 			long table_T_InfoAdicionais_count = Convert.ToInt64 ( configFile.ReadLine() );
 							
 			lbl.Text = "Truncating  [T_InfoAdicionais]";
 			Application.DoEvents();
 			
 			T_InfoAdicionais table_T_InfoAdicionais = new T_InfoAdicionais();
 			table_T_InfoAdicionais.SetAccess ( ref dbAccess );
 			table_T_InfoAdicionais.truncate();
			
			table_T_InfoAdicionais.KeepNames = true;
			
 			if ( table_T_InfoAdicionais_count > 0 )
 			{
 				long table_T_InfoAdicionais_last_id = 1;
 								
 				while ( table_T_InfoAdicionais_count > 0 )
 				{
 					lbl.Text = "Restoring Database [T_InfoAdicionais] " + table_T_InfoAdicionais_count.ToString() + " rows remaining";
 					Application.DoEvents();
 				    
 					table_T_InfoAdicionais_count--;
 									
 					string[] rowInfo = new string [ table_T_InfoAdicionais.var_FieldCount ];
 									
 					rowInfo = configFile.ReadLine().Split ( splitter );
 					
 					long this_id = Convert.ToInt64 ( rowInfo[0] );
 					
 					while ( table_T_InfoAdicionais_last_id < this_id )
 					{
 						dbAccess.consumeRow ( 	table_T_InfoAdicionais.var_Tablename, 
 												table_T_InfoAdicionais.exportNames(), 
 												table_T_InfoAdicionais.var_FieldCount - 1, 
 										        table_T_InfoAdicionais_last_id++ );
 					}
 					
 					long a = 1;
 					
 					table_T_InfoAdicionais.Reset();
 					
					table_T_InfoAdicionais.set_st_codigo ( rowInfo[a++] );
					table_T_InfoAdicionais.set_st_empresaAfiliada ( rowInfo[a++] );
					table_T_InfoAdicionais.set_st_presenteado ( rowInfo[a++] );
					table_T_InfoAdicionais.set_st_recado ( rowInfo[a++] );
					table_T_InfoAdicionais.set_dt_edu_nasc ( rowInfo[a++] );
					table_T_InfoAdicionais.set_st_edu_sexo ( rowInfo[a++] );
					table_T_InfoAdicionais.set_st_edu_grau ( rowInfo[a++] );
					table_T_InfoAdicionais.set_st_edu_serie_semestre ( rowInfo[a++] );
					table_T_InfoAdicionais.set_st_edu_turma ( rowInfo[a++] );
					table_T_InfoAdicionais.set_st_edu_curso ( rowInfo[a++] );
					table_T_InfoAdicionais.set_dt_edu_atualizacao ( rowInfo[a++] );
					table_T_InfoAdicionais.set_st_empresa ( rowInfo[a++] );
					table_T_InfoAdicionais.set_st_matricula ( rowInfo[a++] );
					table_T_InfoAdicionais.create_T_InfoAdicionais();
					table_T_InfoAdicionais_last_id = this_id + 1;
				}
			}
 			
 			pg.Value   = 46;
 			Application.DoEvents();
 			
 			long table_T_Cartao_count = Convert.ToInt64 ( configFile.ReadLine() );
 							
 			lbl.Text = "Truncating  [T_Cartao]";
 			Application.DoEvents();
 			
 			T_Cartao table_T_Cartao = new T_Cartao();
 			table_T_Cartao.SetAccess ( ref dbAccess );
 			table_T_Cartao.truncate();
			
			table_T_Cartao.KeepNames = true;
			
 			if ( table_T_Cartao_count > 0 )
 			{
 				long table_T_Cartao_last_id = 1;
 								
 				while ( table_T_Cartao_count > 0 )
 				{
 					lbl.Text = "Restoring Database [T_Cartao] " + table_T_Cartao_count.ToString() + " rows remaining";
 					Application.DoEvents();
 				    
 					table_T_Cartao_count--;
 									
 					string[] rowInfo = new string [ table_T_Cartao.var_FieldCount ];
 									
 					rowInfo = configFile.ReadLine().Split ( splitter );
 					
 					long this_id = Convert.ToInt64 ( rowInfo[0] );
 					
 					while ( table_T_Cartao_last_id < this_id )
 					{
 						dbAccess.consumeRow ( 	table_T_Cartao.var_Tablename, 
 												table_T_Cartao.exportNames(), 
 												table_T_Cartao.var_FieldCount - 1, 
 										        table_T_Cartao_last_id++ );
 					}
 					
 					long a = 1;
 					
 					table_T_Cartao.Reset();
 					
					table_T_Cartao.set_st_empresa ( rowInfo[a++] );
					table_T_Cartao.set_st_matricula ( rowInfo[a++] );
					table_T_Cartao.set_st_titularidade ( rowInfo[a++] );
					table_T_Cartao.set_st_senha ( rowInfo[a++] );
					table_T_Cartao.set_tg_tipoCartao ( rowInfo[a++] );
					table_T_Cartao.set_st_venctoCartao ( rowInfo[a++] );
					table_T_Cartao.set_tg_status ( rowInfo[a++] );
					table_T_Cartao.set_dt_utlPagto ( rowInfo[a++] );
					table_T_Cartao.set_nu_senhaErrada ( rowInfo[a++] );
					table_T_Cartao.set_dt_inclusao ( rowInfo[a++] );
					table_T_Cartao.set_dt_bloqueio ( rowInfo[a++] );
					table_T_Cartao.set_tg_motivoBloqueio ( rowInfo[a++] );
					table_T_Cartao.set_st_banco ( rowInfo[a++] );
					table_T_Cartao.set_st_agencia ( rowInfo[a++] );
					table_T_Cartao.set_st_conta ( rowInfo[a++] );
					table_T_Cartao.set_st_matriculaExtra ( rowInfo[a++] );
					table_T_Cartao.set_st_celCartao ( rowInfo[a++] );
					table_T_Cartao.set_fk_dadosProprietario ( rowInfo[a++] );
					table_T_Cartao.set_fk_infoAdicionais ( rowInfo[a++] );
					table_T_Cartao.set_nu_viaCartao ( rowInfo[a++] );
					table_T_Cartao.set_vr_limiteTotal ( rowInfo[a++] );
					table_T_Cartao.set_vr_limiteMensal ( rowInfo[a++] );
					table_T_Cartao.set_vr_limiteRotativo ( rowInfo[a++] );
					table_T_Cartao.set_vr_extraCota ( rowInfo[a++] );
					table_T_Cartao.set_vr_educacional ( rowInfo[a++] );
					table_T_Cartao.set_vr_disp_educacional ( rowInfo[a++] );
					table_T_Cartao.set_vr_edu_diario ( rowInfo[a++] );
					table_T_Cartao.set_st_aluno ( rowInfo[a++] );
					table_T_Cartao.set_tg_emitido ( rowInfo[a++] );
					table_T_Cartao.set_vr_edu_disp_virtual ( rowInfo[a++] );
					table_T_Cartao.set_nu_rankVirtual ( rowInfo[a++] );
					table_T_Cartao.set_vr_edu_total_ranking ( rowInfo[a++] );
					table_T_Cartao.set_nu_webSenhaErrada ( rowInfo[a++] );
					table_T_Cartao.set_tg_semanaCompleta ( rowInfo[a++] );
					table_T_Cartao.set_tg_excluido ( rowInfo[a++] );
					table_T_Cartao.create_T_Cartao();
					table_T_Cartao_last_id = this_id + 1;
				}
			}
			
			dbAccess.CloseDB();
			
			configFile.Close();
			file.Close();
		}
	}
}

