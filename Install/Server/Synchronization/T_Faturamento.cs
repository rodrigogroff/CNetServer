// ###################################################### 
// ## SyCraf Engine Codegen                          #### 
// ###################################################### 
// ## This file is entirely written by               #### 
// ## the construction bot. DO NOT EDIT THIS FILE.   #### 
// ###################################################### 

using System;
using System.IO;
using System.Threading;
using System.Collections;

namespace SyCrafEngine
{
	public class T_Faturamento : Synchronization
	{
		private string i_unique = "0";
		private string fk_empresa = "0";
		private string fk_loja = "0";
		private string vr_cobranca = "0";
		private string dt_vencimento = "1900-01-01 00:00:00";
		private string dt_baixa = "1900-01-01 00:00:00";
		private string tg_situacao = "";
		private string tg_retBanco = "0";
		
		public int var_FieldCount = 8;
		
		public T_Faturamento ( infra_Patch i_patch )  : base ( i_patch )
		{
			var_Tablename = TB_T_FATURAMENTO.Alias;
		}
		public string exportNames()
		{
			return "fk_empresa,fk_loja,vr_cobranca,dt_vencimento,dt_baixa,tg_situacao,tg_retBanco";
		}
		
		public string exportCSV()
		{
			return i_unique + str_field_sep + fk_empresa + str_field_sep + fk_loja + str_field_sep + vr_cobranca + str_field_sep + dt_vencimento + str_field_sep + dt_baixa + str_field_sep + tg_situacao + str_field_sep + tg_retBanco;
		}
		
		public void Reset()
		{
			i_unique = "0";
			fk_empresa = "0";
			fk_loja = "0";
			vr_cobranca = "0";
			dt_vencimento = "1900-01-01 00:00:00";
			dt_baixa = "1900-01-01 00:00:00";
			tg_situacao = "";
			tg_retBanco = "0";
		}
		
		public void copy ( ref T_Faturamento cpy )
		{
			fk_empresa = cpy.fk_empresa;
			fk_loja = cpy.fk_loja;
			vr_cobranca = cpy.vr_cobranca;
			dt_vencimento = cpy.dt_vencimento;
			dt_baixa = cpy.dt_baixa;
			tg_situacao = cpy.tg_situacao;
			tg_retBanco = cpy.tg_retBanco;
		}
		
		public override void fetchRetrieve ( ref DB_Row row )
		{
			i_unique = row.GetField ( TB_T_FATURAMENTO.i_unique );
			fk_empresa = row.GetField ( TB_T_FATURAMENTO.fk_empresa );
			fk_loja = row.GetField ( TB_T_FATURAMENTO.fk_loja );
			vr_cobranca = row.GetField ( TB_T_FATURAMENTO.vr_cobranca );
			dt_vencimento = ConvertTime ( row.GetField ( TB_T_FATURAMENTO.dt_vencimento ) );
			dt_baixa = ConvertTime ( row.GetField ( TB_T_FATURAMENTO.dt_baixa ) );
			tg_situacao = row.GetField ( TB_T_FATURAMENTO.tg_situacao );
			tg_retBanco = row.GetField ( TB_T_FATURAMENTO.tg_retBanco );
		}
		
		public bool synchronize_T_Faturamento ( )
		{
			try{
			
			if ( m_hshChangedFields.Count == 0 )
				return true;
			
			StartUpdate();
		
			if ( m_hshChangedFields [ "fk_empresa" ] != null )
				m_gen_dbStatement.AddUpdate ( TB_T_FATURAMENTO.fk_empresa , fk_empresa , TB_T_FATURAMENTO.type_fk_empresa );
			if ( m_hshChangedFields [ "fk_loja" ] != null )
				m_gen_dbStatement.AddUpdate ( TB_T_FATURAMENTO.fk_loja , fk_loja , TB_T_FATURAMENTO.type_fk_loja );
			if ( m_hshChangedFields [ "vr_cobranca" ] != null )
				m_gen_dbStatement.AddUpdate ( TB_T_FATURAMENTO.vr_cobranca , vr_cobranca , TB_T_FATURAMENTO.type_vr_cobranca );
			if ( m_hshChangedFields [ "dt_vencimento" ] != null )
				m_gen_dbStatement.AddUpdate ( TB_T_FATURAMENTO.dt_vencimento , dt_vencimento , TB_T_FATURAMENTO.type_dt_vencimento );
			if ( m_hshChangedFields [ "dt_baixa" ] != null )
				m_gen_dbStatement.AddUpdate ( TB_T_FATURAMENTO.dt_baixa , dt_baixa , TB_T_FATURAMENTO.type_dt_baixa );
			if ( m_hshChangedFields [ "tg_situacao" ] != null )
				m_gen_dbStatement.AddUpdate ( TB_T_FATURAMENTO.tg_situacao , tg_situacao , TB_T_FATURAMENTO.type_tg_situacao );
			if ( m_hshChangedFields [ "tg_retBanco" ] != null )
				m_gen_dbStatement.AddUpdate ( TB_T_FATURAMENTO.tg_retBanco , tg_retBanco , TB_T_FATURAMENTO.type_tg_retBanco );
		
			m_gen_dbStatement.AddWhere ( TB_T_FATURAMENTO.i_unique, i_unique, TB_T_FATURAMENTO.type_i_unique );
		
			} catch ( System.Exception ex ) {
				StreamWriter wr = new StreamWriter ( 	"CRITICAL_" + var_Tablename + "_" + "_" + DateTime.Now.Year.ToString() + DateTime.Now.Month.ToString().PadLeft ( 2, '0' ) + DateTime.Now.Day.ToString().PadLeft ( 2, '0' ) + "_" + DateTime.Now.Hour.ToString().PadLeft ( 2, '0' ) + DateTime.Now.Minute.ToString().PadLeft ( 2, '0' ) + DateTime.Now.Second.ToString().PadLeft ( 2, '0' ) + ".txt" );
				wr.WriteLine ( ex.ToString() );
				wr.Flush();
				wr.Close();
			}
		
			return Update();
		}
			
		public string get_identity() { return i_unique; } 
		public string get_fk_empresa() { return fk_empresa; } 
		public string get_fk_loja() { return fk_loja; } 
		public string get_vr_cobranca() { return vr_cobranca; } 
		public string get_dt_vencimento() { return dt_vencimento; } 
		public string get_dt_baixa() { return dt_baixa; } 
		public string get_tg_situacao() { return tg_situacao; } 
		public string get_tg_retBanco() { return tg_retBanco; } 
			
		public long get_int_fk_empresa() { return Convert.ToInt64 ( fk_empresa ); } 
		public long get_int_fk_loja() { return Convert.ToInt64 ( fk_loja ); } 
		public long get_int_vr_cobranca() { return Convert.ToInt64 ( vr_cobranca ); } 
		public long get_int_tg_retBanco() { return Convert.ToInt64 ( tg_retBanco ); } 
			
		public void set_fk_empresa ( string val ) { fk_empresa = val; m_hshChangedFields [ "fk_empresa" ]="."; } 
		public void set_fk_loja ( string val ) { fk_loja = val; m_hshChangedFields [ "fk_loja" ]="."; } 
		public void set_vr_cobranca ( string val ) { vr_cobranca = val; m_hshChangedFields [ "vr_cobranca" ]="."; } 
		public void set_dt_vencimento ( string val ) { dt_vencimento = val; m_hshChangedFields [ "dt_vencimento" ]="."; } 
		public void set_dt_baixa ( string val ) { dt_baixa = val; m_hshChangedFields [ "dt_baixa" ]="."; } 
		public void set_tg_situacao ( string val ) { tg_situacao = val; m_hshChangedFields [ "tg_situacao" ]="."; } 
		public void set_tg_retBanco ( string val ) { tg_retBanco = val; m_hshChangedFields [ "tg_retBanco" ]="."; } 
		
		public void set_fk_empresa ( long val ) { fk_empresa = Convert.ToString(val); m_hshChangedFields [ "fk_empresa" ]="."; } 
		public void set_fk_loja ( long val ) { fk_loja = Convert.ToString(val); m_hshChangedFields [ "fk_loja" ]="."; } 
		public void set_vr_cobranca ( long val ) { vr_cobranca = Convert.ToString(val); m_hshChangedFields [ "vr_cobranca" ]="."; } 
		public void set_tg_retBanco ( long val ) { tg_retBanco = Convert.ToString(val); m_hshChangedFields [ "tg_retBanco" ]="."; } 
			
		public void fieldSelection()
		{
			m_gen_dbStatement.AddSelect ( TB_T_FATURAMENTO.i_unique );
			m_gen_dbStatement.AddSelect ( TB_T_FATURAMENTO.fk_empresa );
			m_gen_dbStatement.AddSelect ( TB_T_FATURAMENTO.fk_loja );
			m_gen_dbStatement.AddSelect ( TB_T_FATURAMENTO.vr_cobranca );
			m_gen_dbStatement.AddSelect ( TB_T_FATURAMENTO.dt_vencimento );
			m_gen_dbStatement.AddSelect ( TB_T_FATURAMENTO.dt_baixa );
			m_gen_dbStatement.AddSelect ( TB_T_FATURAMENTO.tg_situacao );
			m_gen_dbStatement.AddSelect ( TB_T_FATURAMENTO.tg_retBanco );
		}
			
		public bool selectAll()
		{
			do
			{
				StartSelect();
				fieldSelection();
				
				if ( !executeQuery() )
					return false;
			}
			while ( EndSelect() == false ); // row lock
			
			return  HasRows();
		}
		
		public bool selectIdentity ( string identity )
		{
			do
			{
				StartSelect();
				fieldSelection();
			
				m_gen_dbStatement.AddWhere ( TB_T_FATURAMENTO.i_unique, identity, TB_T_FATURAMENTO.type_i_unique );
			
				if ( !executeQuery())
					return false;
			}
			while ( EndSelect() == false ); // row lock
			
			if ( HasRows() == true)
			{
				DB_Row row = m_db_result.GetFirstRow();
				fetchRetrieve ( ref row );
				return true;
			}
			
			return false;
		}
		
		public bool create_T_Faturamento ( )
		{
			try{
			string new_id = "";
			
			StartInsert();
			
			m_gen_dbStatement.AddValue ( TB_T_FATURAMENTO.fk_empresa, fk_empresa, TB_T_FATURAMENTO.type_fk_empresa );
			m_gen_dbStatement.AddValue ( TB_T_FATURAMENTO.fk_loja, fk_loja, TB_T_FATURAMENTO.type_fk_loja );
			m_gen_dbStatement.AddValue ( TB_T_FATURAMENTO.vr_cobranca, vr_cobranca, TB_T_FATURAMENTO.type_vr_cobranca );
			m_gen_dbStatement.AddValue ( TB_T_FATURAMENTO.dt_vencimento, dt_vencimento, TB_T_FATURAMENTO.type_dt_vencimento );
			m_gen_dbStatement.AddValue ( TB_T_FATURAMENTO.dt_baixa, dt_baixa, TB_T_FATURAMENTO.type_dt_baixa );
			m_gen_dbStatement.AddValue ( TB_T_FATURAMENTO.tg_situacao, tg_situacao, TB_T_FATURAMENTO.type_tg_situacao );
			m_gen_dbStatement.AddValue ( TB_T_FATURAMENTO.tg_retBanco, tg_retBanco, TB_T_FATURAMENTO.type_tg_retBanco );
			
			if ( !ExecuteScalar ( ref new_id ) )
				return false;
			
			i_unique = new_id;
			
			} catch ( System.Exception ex ) {
				StreamWriter wr = new StreamWriter ( 	"CRITICAL_" + var_Tablename + "_" + "_" + DateTime.Now.Year.ToString() + DateTime.Now.Month.ToString().PadLeft ( 2, '0' ) + DateTime.Now.Day.ToString().PadLeft ( 2, '0' ) + "_" + DateTime.Now.Hour.ToString().PadLeft ( 2, '0' ) + DateTime.Now.Minute.ToString().PadLeft ( 2, '0' ) + DateTime.Now.Second.ToString().PadLeft ( 2, '0' ) + ".txt" );
				wr.WriteLine ( ex.ToString() );
				wr.Flush();
				wr.Close();
			}
			
			return true;
		}
			
		public bool delete ( )
		{
		
			bool ret = false;
		
			try{
			StartDelete();
			
			if ( i_unique != "0" )
				m_gen_dbStatement.AddWhere ( TB_T_FATURAMENTO.i_unique, i_unique, TB_T_FATURAMENTO.type_i_unique );
			
			ret = Execute();
			
			} catch ( System.Exception ex ) {
				StreamWriter wr = new StreamWriter ( 	"CRITICAL_" + var_Tablename + "_" + "_" + DateTime.Now.Year.ToString() + DateTime.Now.Month.ToString().PadLeft ( 2, '0' ) + DateTime.Now.Day.ToString().PadLeft ( 2, '0' ) + "_" + DateTime.Now.Hour.ToString().PadLeft ( 2, '0' ) + DateTime.Now.Minute.ToString().PadLeft ( 2, '0' ) + DateTime.Now.Second.ToString().PadLeft ( 2, '0' ) + ".txt" );
				wr.WriteLine ( ex.ToString() );
				wr.Flush();
				wr.Close();
			}
			
			return ret; 
		}
			
		public bool select_rows_emp ( string val_fk_empresa )
		{
			do
			{
				StartSelect();
				fieldSelection();
			
				m_gen_dbStatement.AddWhere ( TB_T_FATURAMENTO.fk_empresa, val_fk_empresa , TB_T_FATURAMENTO.type_fk_empresa);
			
				if ( !executeQuery() )
					return false;
			}
			while ( EndSelect() == false ); // row lock
			
			return HasRows();
		}
			
		public bool select_rows_loj ( string val_fk_loja )
		{
			do
			{
				StartSelect();
				fieldSelection();
			
				m_gen_dbStatement.AddWhere ( TB_T_FATURAMENTO.fk_loja, val_fk_loja , TB_T_FATURAMENTO.type_fk_loja);
			
				if ( !executeQuery() )
					return false;
			}
			while ( EndSelect() == false ); // row lock
			
			return HasRows();
		}
			
		public bool select_rows_dt_venc ( string val_dt_vencimento, string val_dt_vencimento1, string val_tg_situacao )
		{
			do
			{
				StartSelect();
				fieldSelection();
			
				m_gen_dbStatement.AddWhereGreaterEqual ( TB_T_FATURAMENTO.dt_vencimento, val_dt_vencimento , TB_T_FATURAMENTO.type_dt_vencimento);
				m_gen_dbStatement.AddWhereLessThan ( TB_T_FATURAMENTO.dt_vencimento, val_dt_vencimento1 , TB_T_FATURAMENTO.type_dt_vencimento);
				m_gen_dbStatement.AddWhere ( TB_T_FATURAMENTO.tg_situacao, val_tg_situacao , TB_T_FATURAMENTO.type_tg_situacao);
			
				if ( !executeQuery() )
					return false;
			}
			while ( EndSelect() == false ); // row lock
			
			return HasRows();
		}
	}
}
