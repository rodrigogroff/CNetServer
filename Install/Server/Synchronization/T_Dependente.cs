// ###################################################### 
// ## SyCraf Engine Codegen                          #### 
// ###################################################### 
// ## This file is entirely written by               #### 
// ## the construction bot. DO NOT EDIT THIS FILE.   #### 
// ###################################################### 

using System;
using System.IO;
using System.Threading;
using System.Collections;

namespace SyCrafEngine
{
	public class T_Dependente : Synchronization
	{
		private string i_unique = "0";
		private string nu_titularidade = "0";
		private string st_nome = "";
		private string fk_proprietario = "0";
		
		public int var_FieldCount = 4;
		
		public T_Dependente ( infra_Patch i_patch )  : base ( i_patch )
		{
			var_Tablename = TB_T_DEPENDENTE.Alias;
		}
		public string exportNames()
		{
			return "nu_titularidade,st_nome,fk_proprietario";
		}
		
		public string exportCSV()
		{
			return i_unique + str_field_sep + nu_titularidade + str_field_sep + st_nome + str_field_sep + fk_proprietario;
		}
		
		public void Reset()
		{
			i_unique = "0";
			nu_titularidade = "0";
			st_nome = "";
			fk_proprietario = "0";
		}
		
		public void copy ( ref T_Dependente cpy )
		{
			nu_titularidade = cpy.nu_titularidade;
			st_nome = cpy.st_nome;
			fk_proprietario = cpy.fk_proprietario;
		}
		
		public override void fetchRetrieve ( ref DB_Row row )
		{
			i_unique = row.GetField ( TB_T_DEPENDENTE.i_unique );
			nu_titularidade = row.GetField ( TB_T_DEPENDENTE.nu_titularidade );
			st_nome = row.GetField ( TB_T_DEPENDENTE.st_nome );
			fk_proprietario = row.GetField ( TB_T_DEPENDENTE.fk_proprietario );
		}
		
		public bool synchronize_T_Dependente ( )
		{
			try{
			
			if ( m_hshChangedFields.Count == 0 )
				return true;
			
			StartUpdate();
		
			if ( m_hshChangedFields [ "nu_titularidade" ] != null )
				m_gen_dbStatement.AddUpdate ( TB_T_DEPENDENTE.nu_titularidade , nu_titularidade , TB_T_DEPENDENTE.type_nu_titularidade );
			if ( m_hshChangedFields [ "st_nome" ] != null )
				m_gen_dbStatement.AddUpdate ( TB_T_DEPENDENTE.st_nome , st_nome , TB_T_DEPENDENTE.type_st_nome );
			if ( m_hshChangedFields [ "fk_proprietario" ] != null )
				m_gen_dbStatement.AddUpdate ( TB_T_DEPENDENTE.fk_proprietario , fk_proprietario , TB_T_DEPENDENTE.type_fk_proprietario );
		
			m_gen_dbStatement.AddWhere ( TB_T_DEPENDENTE.i_unique, i_unique, TB_T_DEPENDENTE.type_i_unique );
		
			} catch ( System.Exception ex ) {
				StreamWriter wr = new StreamWriter ( 	"CRITICAL_" + var_Tablename + "_" + "_" + DateTime.Now.Year.ToString() + DateTime.Now.Month.ToString().PadLeft ( 2, '0' ) + DateTime.Now.Day.ToString().PadLeft ( 2, '0' ) + "_" + DateTime.Now.Hour.ToString().PadLeft ( 2, '0' ) + DateTime.Now.Minute.ToString().PadLeft ( 2, '0' ) + DateTime.Now.Second.ToString().PadLeft ( 2, '0' ) + ".txt" );
				wr.WriteLine ( ex.ToString() );
				wr.Flush();
				wr.Close();
			}
		
			return Update();
		}
			
		public string get_identity() { return i_unique; } 
		public string get_nu_titularidade() { return nu_titularidade; } 
		public string get_st_nome() { return st_nome; } 
		public string get_fk_proprietario() { return fk_proprietario; } 
			
		public long get_int_nu_titularidade() { return Convert.ToInt64 ( nu_titularidade ); } 
		public long get_int_fk_proprietario() { return Convert.ToInt64 ( fk_proprietario ); } 
			
		public void set_nu_titularidade ( string val ) { nu_titularidade = val; m_hshChangedFields [ "nu_titularidade" ]="."; } 
		public void set_st_nome ( string val ) { st_nome = val; m_hshChangedFields [ "st_nome" ]="."; } 
		public void set_fk_proprietario ( string val ) { fk_proprietario = val; m_hshChangedFields [ "fk_proprietario" ]="."; } 
		
		public void set_nu_titularidade ( long val ) { nu_titularidade = Convert.ToString(val); m_hshChangedFields [ "nu_titularidade" ]="."; } 
		public void set_fk_proprietario ( long val ) { fk_proprietario = Convert.ToString(val); m_hshChangedFields [ "fk_proprietario" ]="."; } 
			
		public void fieldSelection()
		{
			m_gen_dbStatement.AddSelect ( TB_T_DEPENDENTE.i_unique );
			m_gen_dbStatement.AddSelect ( TB_T_DEPENDENTE.nu_titularidade );
			m_gen_dbStatement.AddSelect ( TB_T_DEPENDENTE.st_nome );
			m_gen_dbStatement.AddSelect ( TB_T_DEPENDENTE.fk_proprietario );
		}
			
		public bool selectAll()
		{
			do
			{
				StartSelect();
				fieldSelection();
				
				if ( !executeQuery() )
					return false;
			}
			while ( EndSelect() == false ); // row lock
			
			return  HasRows();
		}
		
		public bool selectIdentity ( string identity )
		{
			do
			{
				StartSelect();
				fieldSelection();
			
				m_gen_dbStatement.AddWhere ( TB_T_DEPENDENTE.i_unique, identity, TB_T_DEPENDENTE.type_i_unique );
			
				if ( !executeQuery())
					return false;
			}
			while ( EndSelect() == false ); // row lock
			
			if ( HasRows() == true)
			{
				DB_Row row = m_db_result.GetFirstRow();
				fetchRetrieve ( ref row );
				return true;
			}
			
			return false;
		}
		
		public bool create_T_Dependente ( )
		{
			try{
			string new_id = "";
			
			StartInsert();
			
			m_gen_dbStatement.AddValue ( TB_T_DEPENDENTE.nu_titularidade, nu_titularidade, TB_T_DEPENDENTE.type_nu_titularidade );
			m_gen_dbStatement.AddValue ( TB_T_DEPENDENTE.st_nome, st_nome, TB_T_DEPENDENTE.type_st_nome );
			m_gen_dbStatement.AddValue ( TB_T_DEPENDENTE.fk_proprietario, fk_proprietario, TB_T_DEPENDENTE.type_fk_proprietario );
			
			if ( !ExecuteScalar ( ref new_id ) )
				return false;
			
			i_unique = new_id;
			
			} catch ( System.Exception ex ) {
				StreamWriter wr = new StreamWriter ( 	"CRITICAL_" + var_Tablename + "_" + "_" + DateTime.Now.Year.ToString() + DateTime.Now.Month.ToString().PadLeft ( 2, '0' ) + DateTime.Now.Day.ToString().PadLeft ( 2, '0' ) + "_" + DateTime.Now.Hour.ToString().PadLeft ( 2, '0' ) + DateTime.Now.Minute.ToString().PadLeft ( 2, '0' ) + DateTime.Now.Second.ToString().PadLeft ( 2, '0' ) + ".txt" );
				wr.WriteLine ( ex.ToString() );
				wr.Flush();
				wr.Close();
			}
			
			return true;
		}
			
		public bool delete ( )
		{
		
			bool ret = false;
		
			try{
			StartDelete();
			
			if ( i_unique != "0" )
				m_gen_dbStatement.AddWhere ( TB_T_DEPENDENTE.i_unique, i_unique, TB_T_DEPENDENTE.type_i_unique );
			
			ret = Execute();
			
			} catch ( System.Exception ex ) {
				StreamWriter wr = new StreamWriter ( 	"CRITICAL_" + var_Tablename + "_" + "_" + DateTime.Now.Year.ToString() + DateTime.Now.Month.ToString().PadLeft ( 2, '0' ) + DateTime.Now.Day.ToString().PadLeft ( 2, '0' ) + "_" + DateTime.Now.Hour.ToString().PadLeft ( 2, '0' ) + DateTime.Now.Minute.ToString().PadLeft ( 2, '0' ) + DateTime.Now.Second.ToString().PadLeft ( 2, '0' ) + ".txt" );
				wr.WriteLine ( ex.ToString() );
				wr.Flush();
				wr.Close();
			}
			
			return ret; 
		}
			
		public bool select_fk_proprietario ( string val_fk_proprietario )
		{
			do
			{
				StartSelect();
				fieldSelection();
			
				m_gen_dbStatement.AddWhere ( TB_T_DEPENDENTE.fk_proprietario, val_fk_proprietario , TB_T_DEPENDENTE.type_fk_proprietario);
			
				if ( !executeQuery() )
					return false;
			}
			while ( EndSelect() == false ); // row lock
			
			return HasRows();
		}
			
		public bool select_rows_prop_tit ( string val_fk_proprietario, string val_nu_titularidade )
		{
			do
			{
				StartSelect();
				fieldSelection();
			
				m_gen_dbStatement.AddWhere ( TB_T_DEPENDENTE.fk_proprietario, val_fk_proprietario , TB_T_DEPENDENTE.type_fk_proprietario);
				m_gen_dbStatement.AddWhere ( TB_T_DEPENDENTE.nu_titularidade, val_nu_titularidade , TB_T_DEPENDENTE.type_nu_titularidade);
			
				if ( !executeQuery() )
					return false;
			}
			while ( EndSelect() == false ); // row lock
			
			return HasRows();
		}
	}
}
