// ###################################################### 
// ## SyCraf Engine Codegen                          #### 
// ###################################################### 
// ## This file is entirely written by               #### 
// ## the construction bot. DO NOT EDIT THIS FILE.   #### 
// ###################################################### 

using System;
using System.IO;
using System.Threading;
using System.Collections;

namespace SyCrafEngine
{
	public class T_BoletoEdu : Synchronization
	{
		private string i_unique = "0";
		private string dt_emissao = "1900-01-01 00:00:00";
		private string vr_imediato = "0";
		private string vr_educacional = "0";
		private string fk_cartao = "0";
		
		public int var_FieldCount = 5;
		
		public T_BoletoEdu ( infra_Patch i_patch )  : base ( i_patch )
		{
			var_Tablename = TB_T_BOLETOEDU.Alias;
		}
		public string exportNames()
		{
			return "dt_emissao,vr_imediato,vr_educacional,fk_cartao";
		}
		
		public string exportCSV()
		{
			return i_unique + str_field_sep + dt_emissao + str_field_sep + vr_imediato + str_field_sep + vr_educacional + str_field_sep + fk_cartao;
		}
		
		public void Reset()
		{
			i_unique = "0";
			dt_emissao = "1900-01-01 00:00:00";
			vr_imediato = "0";
			vr_educacional = "0";
			fk_cartao = "0";
		}
		
		public void copy ( ref T_BoletoEdu cpy )
		{
			dt_emissao = cpy.dt_emissao;
			vr_imediato = cpy.vr_imediato;
			vr_educacional = cpy.vr_educacional;
			fk_cartao = cpy.fk_cartao;
		}
		
		public override void fetchRetrieve ( ref DB_Row row )
		{
			i_unique = row.GetField ( TB_T_BOLETOEDU.i_unique );
			dt_emissao = ConvertTime ( row.GetField ( TB_T_BOLETOEDU.dt_emissao ) );
			vr_imediato = row.GetField ( TB_T_BOLETOEDU.vr_imediato );
			vr_educacional = row.GetField ( TB_T_BOLETOEDU.vr_educacional );
			fk_cartao = row.GetField ( TB_T_BOLETOEDU.fk_cartao );
		}
		
		public bool synchronize_T_BoletoEdu ( )
		{
			try{
			
			if ( m_hshChangedFields.Count == 0 )
				return true;
			
			StartUpdate();
		
			if ( m_hshChangedFields [ "dt_emissao" ] != null )
				m_gen_dbStatement.AddUpdate ( TB_T_BOLETOEDU.dt_emissao , dt_emissao , TB_T_BOLETOEDU.type_dt_emissao );
			if ( m_hshChangedFields [ "vr_imediato" ] != null )
				m_gen_dbStatement.AddUpdate ( TB_T_BOLETOEDU.vr_imediato , vr_imediato , TB_T_BOLETOEDU.type_vr_imediato );
			if ( m_hshChangedFields [ "vr_educacional" ] != null )
				m_gen_dbStatement.AddUpdate ( TB_T_BOLETOEDU.vr_educacional , vr_educacional , TB_T_BOLETOEDU.type_vr_educacional );
			if ( m_hshChangedFields [ "fk_cartao" ] != null )
				m_gen_dbStatement.AddUpdate ( TB_T_BOLETOEDU.fk_cartao , fk_cartao , TB_T_BOLETOEDU.type_fk_cartao );
		
			m_gen_dbStatement.AddWhere ( TB_T_BOLETOEDU.i_unique, i_unique, TB_T_BOLETOEDU.type_i_unique );
		
			} catch ( System.Exception ex ) {
				StreamWriter wr = new StreamWriter ( 	"CRITICAL_" + var_Tablename + "_" + "_" + DateTime.Now.Year.ToString() + DateTime.Now.Month.ToString().PadLeft ( 2, '0' ) + DateTime.Now.Day.ToString().PadLeft ( 2, '0' ) + "_" + DateTime.Now.Hour.ToString().PadLeft ( 2, '0' ) + DateTime.Now.Minute.ToString().PadLeft ( 2, '0' ) + DateTime.Now.Second.ToString().PadLeft ( 2, '0' ) + ".txt" );
				wr.WriteLine ( ex.ToString() );
				wr.Flush();
				wr.Close();
			}
		
			return Update();
		}
			
		public string get_identity() { return i_unique; } 
		public string get_dt_emissao() { return dt_emissao; } 
		public string get_vr_imediato() { return vr_imediato; } 
		public string get_vr_educacional() { return vr_educacional; } 
		public string get_fk_cartao() { return fk_cartao; } 
			
		public long get_int_vr_imediato() { return Convert.ToInt64 ( vr_imediato ); } 
		public long get_int_vr_educacional() { return Convert.ToInt64 ( vr_educacional ); } 
		public long get_int_fk_cartao() { return Convert.ToInt64 ( fk_cartao ); } 
			
		public void set_dt_emissao ( string val ) { dt_emissao = val; m_hshChangedFields [ "dt_emissao" ]="."; } 
		public void set_vr_imediato ( string val ) { vr_imediato = val; m_hshChangedFields [ "vr_imediato" ]="."; } 
		public void set_vr_educacional ( string val ) { vr_educacional = val; m_hshChangedFields [ "vr_educacional" ]="."; } 
		public void set_fk_cartao ( string val ) { fk_cartao = val; m_hshChangedFields [ "fk_cartao" ]="."; } 
		
		public void set_vr_imediato ( long val ) { vr_imediato = Convert.ToString(val); m_hshChangedFields [ "vr_imediato" ]="."; } 
		public void set_vr_educacional ( long val ) { vr_educacional = Convert.ToString(val); m_hshChangedFields [ "vr_educacional" ]="."; } 
		public void set_fk_cartao ( long val ) { fk_cartao = Convert.ToString(val); m_hshChangedFields [ "fk_cartao" ]="."; } 
			
		public void fieldSelection()
		{
			m_gen_dbStatement.AddSelect ( TB_T_BOLETOEDU.i_unique );
			m_gen_dbStatement.AddSelect ( TB_T_BOLETOEDU.dt_emissao );
			m_gen_dbStatement.AddSelect ( TB_T_BOLETOEDU.vr_imediato );
			m_gen_dbStatement.AddSelect ( TB_T_BOLETOEDU.vr_educacional );
			m_gen_dbStatement.AddSelect ( TB_T_BOLETOEDU.fk_cartao );
		}
			
		public bool selectAll()
		{
			do
			{
				StartSelect();
				fieldSelection();
				
				if ( !executeQuery() )
					return false;
			}
			while ( EndSelect() == false ); // row lock
			
			return  HasRows();
		}
		
		public bool selectIdentity ( string identity )
		{
			do
			{
				StartSelect();
				fieldSelection();
			
				m_gen_dbStatement.AddWhere ( TB_T_BOLETOEDU.i_unique, identity, TB_T_BOLETOEDU.type_i_unique );
			
				if ( !executeQuery())
					return false;
			}
			while ( EndSelect() == false ); // row lock
			
			if ( HasRows() == true)
			{
				DB_Row row = m_db_result.GetFirstRow();
				fetchRetrieve ( ref row );
				return true;
			}
			
			return false;
		}
		
		public bool create_T_BoletoEdu ( )
		{
			try{
			string new_id = "";
			
			StartInsert();
			
			m_gen_dbStatement.AddValue ( TB_T_BOLETOEDU.dt_emissao, dt_emissao, TB_T_BOLETOEDU.type_dt_emissao );
			m_gen_dbStatement.AddValue ( TB_T_BOLETOEDU.vr_imediato, vr_imediato, TB_T_BOLETOEDU.type_vr_imediato );
			m_gen_dbStatement.AddValue ( TB_T_BOLETOEDU.vr_educacional, vr_educacional, TB_T_BOLETOEDU.type_vr_educacional );
			m_gen_dbStatement.AddValue ( TB_T_BOLETOEDU.fk_cartao, fk_cartao, TB_T_BOLETOEDU.type_fk_cartao );
			
			if ( !ExecuteScalar ( ref new_id ) )
				return false;
			
			i_unique = new_id;
			
			} catch ( System.Exception ex ) {
				StreamWriter wr = new StreamWriter ( 	"CRITICAL_" + var_Tablename + "_" + "_" + DateTime.Now.Year.ToString() + DateTime.Now.Month.ToString().PadLeft ( 2, '0' ) + DateTime.Now.Day.ToString().PadLeft ( 2, '0' ) + "_" + DateTime.Now.Hour.ToString().PadLeft ( 2, '0' ) + DateTime.Now.Minute.ToString().PadLeft ( 2, '0' ) + DateTime.Now.Second.ToString().PadLeft ( 2, '0' ) + ".txt" );
				wr.WriteLine ( ex.ToString() );
				wr.Flush();
				wr.Close();
			}
			
			return true;
		}
			
		public bool delete ( )
		{
		
			bool ret = false;
		
			try{
			StartDelete();
			
			if ( i_unique != "0" )
				m_gen_dbStatement.AddWhere ( TB_T_BOLETOEDU.i_unique, i_unique, TB_T_BOLETOEDU.type_i_unique );
			
			ret = Execute();
			
			} catch ( System.Exception ex ) {
				StreamWriter wr = new StreamWriter ( 	"CRITICAL_" + var_Tablename + "_" + "_" + DateTime.Now.Year.ToString() + DateTime.Now.Month.ToString().PadLeft ( 2, '0' ) + DateTime.Now.Day.ToString().PadLeft ( 2, '0' ) + "_" + DateTime.Now.Hour.ToString().PadLeft ( 2, '0' ) + DateTime.Now.Minute.ToString().PadLeft ( 2, '0' ) + DateTime.Now.Second.ToString().PadLeft ( 2, '0' ) + ".txt" );
				wr.WriteLine ( ex.ToString() );
				wr.Flush();
				wr.Close();
			}
			
			return ret; 
		}
	}
}
