// ###################################################### 
// ## SyCraf Engine Codegen                          #### 
// ###################################################### 
// ## This file is entirely written by               #### 
// ## the construction bot. DO NOT EDIT THIS FILE.   #### 
// ###################################################### 

using System;
using System.IO;
using System.Threading;
using System.Collections;

namespace SyCrafEngine
{
	public class T_InfoAdicionais : Synchronization
	{
		private string i_unique = "0";
		private string st_codigo = "";
		private string st_empresaAfiliada = "";
		private string st_presenteado = "";
		private string st_recado = "";
		private string dt_edu_nasc = "1900-01-01 00:00:00";
		private string st_edu_sexo = "";
		private string st_edu_grau = "";
		private string st_edu_serie_semestre = "";
		private string st_edu_turma = "";
		private string st_edu_curso = "";
		private string dt_edu_atualizacao = "1900-01-01 00:00:00";
		private string st_empresa = "";
		private string st_matricula = "";
		
		public int var_FieldCount = 14;
		
		public T_InfoAdicionais ( infra_Patch i_patch )  : base ( i_patch )
		{
			var_Tablename = TB_T_INFOADICIONAIS.Alias;
		}
		public string exportNames()
		{
			return "st_codigo,st_empresaAfiliada,st_presenteado,st_recado,dt_edu_nasc,st_edu_sexo,st_edu_grau,st_edu_serie_semestre,st_edu_turma,st_edu_curso,dt_edu_atualizacao,st_empresa,st_matricula";
		}
		
		public string exportCSV()
		{
			return i_unique + str_field_sep + st_codigo + str_field_sep + st_empresaAfiliada + str_field_sep + st_presenteado + str_field_sep + st_recado + str_field_sep + dt_edu_nasc + str_field_sep + st_edu_sexo + str_field_sep + st_edu_grau + str_field_sep + st_edu_serie_semestre + str_field_sep + st_edu_turma + str_field_sep + st_edu_curso + str_field_sep + dt_edu_atualizacao + str_field_sep + st_empresa + str_field_sep + st_matricula;
		}
		
		public void Reset()
		{
			i_unique = "0";
			st_codigo = "";
			st_empresaAfiliada = "";
			st_presenteado = "";
			st_recado = "";
			dt_edu_nasc = "1900-01-01 00:00:00";
			st_edu_sexo = "";
			st_edu_grau = "";
			st_edu_serie_semestre = "";
			st_edu_turma = "";
			st_edu_curso = "";
			dt_edu_atualizacao = "1900-01-01 00:00:00";
			st_empresa = "";
			st_matricula = "";
		}
		
		public void copy ( ref T_InfoAdicionais cpy )
		{
			st_codigo = cpy.st_codigo;
			st_empresaAfiliada = cpy.st_empresaAfiliada;
			st_presenteado = cpy.st_presenteado;
			st_recado = cpy.st_recado;
			dt_edu_nasc = cpy.dt_edu_nasc;
			st_edu_sexo = cpy.st_edu_sexo;
			st_edu_grau = cpy.st_edu_grau;
			st_edu_serie_semestre = cpy.st_edu_serie_semestre;
			st_edu_turma = cpy.st_edu_turma;
			st_edu_curso = cpy.st_edu_curso;
			dt_edu_atualizacao = cpy.dt_edu_atualizacao;
			st_empresa = cpy.st_empresa;
			st_matricula = cpy.st_matricula;
		}
		
		public override void fetchRetrieve ( ref DB_Row row )
		{
			i_unique = row.GetField ( TB_T_INFOADICIONAIS.i_unique );
			st_codigo = row.GetField ( TB_T_INFOADICIONAIS.st_codigo );
			st_empresaAfiliada = row.GetField ( TB_T_INFOADICIONAIS.st_empresaAfiliada );
			st_presenteado = row.GetField ( TB_T_INFOADICIONAIS.st_presenteado );
			st_recado = row.GetField ( TB_T_INFOADICIONAIS.st_recado );
			dt_edu_nasc = ConvertTime ( row.GetField ( TB_T_INFOADICIONAIS.dt_edu_nasc ) );
			st_edu_sexo = row.GetField ( TB_T_INFOADICIONAIS.st_edu_sexo );
			st_edu_grau = row.GetField ( TB_T_INFOADICIONAIS.st_edu_grau );
			st_edu_serie_semestre = row.GetField ( TB_T_INFOADICIONAIS.st_edu_serie_semestre );
			st_edu_turma = row.GetField ( TB_T_INFOADICIONAIS.st_edu_turma );
			st_edu_curso = row.GetField ( TB_T_INFOADICIONAIS.st_edu_curso );
			dt_edu_atualizacao = ConvertTime ( row.GetField ( TB_T_INFOADICIONAIS.dt_edu_atualizacao ) );
			st_empresa = row.GetField ( TB_T_INFOADICIONAIS.st_empresa );
			st_matricula = row.GetField ( TB_T_INFOADICIONAIS.st_matricula );
		}
		
		public bool synchronize_T_InfoAdicionais ( )
		{
			try{
			
			if ( m_hshChangedFields.Count == 0 )
				return true;
			
			StartUpdate();
		
			if ( m_hshChangedFields [ "st_codigo" ] != null )
				m_gen_dbStatement.AddUpdate ( TB_T_INFOADICIONAIS.st_codigo , st_codigo , TB_T_INFOADICIONAIS.type_st_codigo );
			if ( m_hshChangedFields [ "st_empresaAfiliada" ] != null )
				m_gen_dbStatement.AddUpdate ( TB_T_INFOADICIONAIS.st_empresaAfiliada , st_empresaAfiliada , TB_T_INFOADICIONAIS.type_st_empresaAfiliada );
			if ( m_hshChangedFields [ "st_presenteado" ] != null )
				m_gen_dbStatement.AddUpdate ( TB_T_INFOADICIONAIS.st_presenteado , st_presenteado , TB_T_INFOADICIONAIS.type_st_presenteado );
			if ( m_hshChangedFields [ "st_recado" ] != null )
				m_gen_dbStatement.AddUpdate ( TB_T_INFOADICIONAIS.st_recado , st_recado , TB_T_INFOADICIONAIS.type_st_recado );
			if ( m_hshChangedFields [ "dt_edu_nasc" ] != null )
				m_gen_dbStatement.AddUpdate ( TB_T_INFOADICIONAIS.dt_edu_nasc , dt_edu_nasc , TB_T_INFOADICIONAIS.type_dt_edu_nasc );
			if ( m_hshChangedFields [ "st_edu_sexo" ] != null )
				m_gen_dbStatement.AddUpdate ( TB_T_INFOADICIONAIS.st_edu_sexo , st_edu_sexo , TB_T_INFOADICIONAIS.type_st_edu_sexo );
			if ( m_hshChangedFields [ "st_edu_grau" ] != null )
				m_gen_dbStatement.AddUpdate ( TB_T_INFOADICIONAIS.st_edu_grau , st_edu_grau , TB_T_INFOADICIONAIS.type_st_edu_grau );
			if ( m_hshChangedFields [ "st_edu_serie_semestre" ] != null )
				m_gen_dbStatement.AddUpdate ( TB_T_INFOADICIONAIS.st_edu_serie_semestre , st_edu_serie_semestre , TB_T_INFOADICIONAIS.type_st_edu_serie_semestre );
			if ( m_hshChangedFields [ "st_edu_turma" ] != null )
				m_gen_dbStatement.AddUpdate ( TB_T_INFOADICIONAIS.st_edu_turma , st_edu_turma , TB_T_INFOADICIONAIS.type_st_edu_turma );
			if ( m_hshChangedFields [ "st_edu_curso" ] != null )
				m_gen_dbStatement.AddUpdate ( TB_T_INFOADICIONAIS.st_edu_curso , st_edu_curso , TB_T_INFOADICIONAIS.type_st_edu_curso );
			if ( m_hshChangedFields [ "dt_edu_atualizacao" ] != null )
				m_gen_dbStatement.AddUpdate ( TB_T_INFOADICIONAIS.dt_edu_atualizacao , dt_edu_atualizacao , TB_T_INFOADICIONAIS.type_dt_edu_atualizacao );
			if ( m_hshChangedFields [ "st_empresa" ] != null )
				m_gen_dbStatement.AddUpdate ( TB_T_INFOADICIONAIS.st_empresa , st_empresa , TB_T_INFOADICIONAIS.type_st_empresa );
			if ( m_hshChangedFields [ "st_matricula" ] != null )
				m_gen_dbStatement.AddUpdate ( TB_T_INFOADICIONAIS.st_matricula , st_matricula , TB_T_INFOADICIONAIS.type_st_matricula );
		
			m_gen_dbStatement.AddWhere ( TB_T_INFOADICIONAIS.i_unique, i_unique, TB_T_INFOADICIONAIS.type_i_unique );
		
			} catch ( System.Exception ex ) {
				StreamWriter wr = new StreamWriter ( 	"CRITICAL_" + var_Tablename + "_" + "_" + DateTime.Now.Year.ToString() + DateTime.Now.Month.ToString().PadLeft ( 2, '0' ) + DateTime.Now.Day.ToString().PadLeft ( 2, '0' ) + "_" + DateTime.Now.Hour.ToString().PadLeft ( 2, '0' ) + DateTime.Now.Minute.ToString().PadLeft ( 2, '0' ) + DateTime.Now.Second.ToString().PadLeft ( 2, '0' ) + ".txt" );
				wr.WriteLine ( ex.ToString() );
				wr.Flush();
				wr.Close();
			}
		
			return Update();
		}
			
		public string get_identity() { return i_unique; } 
		public string get_st_codigo() { return st_codigo; } 
		public string get_st_empresaAfiliada() { return st_empresaAfiliada; } 
		public string get_st_presenteado() { return st_presenteado; } 
		public string get_st_recado() { return st_recado; } 
		public string get_dt_edu_nasc() { return dt_edu_nasc; } 
		public string get_st_edu_sexo() { return st_edu_sexo; } 
		public string get_st_edu_grau() { return st_edu_grau; } 
		public string get_st_edu_serie_semestre() { return st_edu_serie_semestre; } 
		public string get_st_edu_turma() { return st_edu_turma; } 
		public string get_st_edu_curso() { return st_edu_curso; } 
		public string get_dt_edu_atualizacao() { return dt_edu_atualizacao; } 
		public string get_st_empresa() { return st_empresa; } 
		public string get_st_matricula() { return st_matricula; } 
			
		public void set_st_codigo ( string val ) { st_codigo = val; m_hshChangedFields [ "st_codigo" ]="."; } 
		public void set_st_empresaAfiliada ( string val ) { st_empresaAfiliada = val; m_hshChangedFields [ "st_empresaAfiliada" ]="."; } 
		public void set_st_presenteado ( string val ) { st_presenteado = val; m_hshChangedFields [ "st_presenteado" ]="."; } 
		public void set_st_recado ( string val ) { st_recado = val; m_hshChangedFields [ "st_recado" ]="."; } 
		public void set_dt_edu_nasc ( string val ) { dt_edu_nasc = val; m_hshChangedFields [ "dt_edu_nasc" ]="."; } 
		public void set_st_edu_sexo ( string val ) { st_edu_sexo = val; m_hshChangedFields [ "st_edu_sexo" ]="."; } 
		public void set_st_edu_grau ( string val ) { st_edu_grau = val; m_hshChangedFields [ "st_edu_grau" ]="."; } 
		public void set_st_edu_serie_semestre ( string val ) { st_edu_serie_semestre = val; m_hshChangedFields [ "st_edu_serie_semestre" ]="."; } 
		public void set_st_edu_turma ( string val ) { st_edu_turma = val; m_hshChangedFields [ "st_edu_turma" ]="."; } 
		public void set_st_edu_curso ( string val ) { st_edu_curso = val; m_hshChangedFields [ "st_edu_curso" ]="."; } 
		public void set_dt_edu_atualizacao ( string val ) { dt_edu_atualizacao = val; m_hshChangedFields [ "dt_edu_atualizacao" ]="."; } 
		public void set_st_empresa ( string val ) { st_empresa = val; m_hshChangedFields [ "st_empresa" ]="."; } 
		public void set_st_matricula ( string val ) { st_matricula = val; m_hshChangedFields [ "st_matricula" ]="."; } 
		
		public void fieldSelection()
		{
			m_gen_dbStatement.AddSelect ( TB_T_INFOADICIONAIS.i_unique );
			m_gen_dbStatement.AddSelect ( TB_T_INFOADICIONAIS.st_codigo );
			m_gen_dbStatement.AddSelect ( TB_T_INFOADICIONAIS.st_empresaAfiliada );
			m_gen_dbStatement.AddSelect ( TB_T_INFOADICIONAIS.st_presenteado );
			m_gen_dbStatement.AddSelect ( TB_T_INFOADICIONAIS.st_recado );
			m_gen_dbStatement.AddSelect ( TB_T_INFOADICIONAIS.dt_edu_nasc );
			m_gen_dbStatement.AddSelect ( TB_T_INFOADICIONAIS.st_edu_sexo );
			m_gen_dbStatement.AddSelect ( TB_T_INFOADICIONAIS.st_edu_grau );
			m_gen_dbStatement.AddSelect ( TB_T_INFOADICIONAIS.st_edu_serie_semestre );
			m_gen_dbStatement.AddSelect ( TB_T_INFOADICIONAIS.st_edu_turma );
			m_gen_dbStatement.AddSelect ( TB_T_INFOADICIONAIS.st_edu_curso );
			m_gen_dbStatement.AddSelect ( TB_T_INFOADICIONAIS.dt_edu_atualizacao );
			m_gen_dbStatement.AddSelect ( TB_T_INFOADICIONAIS.st_empresa );
			m_gen_dbStatement.AddSelect ( TB_T_INFOADICIONAIS.st_matricula );
		}
			
		public bool selectAll()
		{
			do
			{
				StartSelect();
				fieldSelection();
				
				if ( !executeQuery() )
					return false;
			}
			while ( EndSelect() == false ); // row lock
			
			return  HasRows();
		}
		
		public bool selectIdentity ( string identity )
		{
			do
			{
				StartSelect();
				fieldSelection();
			
				m_gen_dbStatement.AddWhere ( TB_T_INFOADICIONAIS.i_unique, identity, TB_T_INFOADICIONAIS.type_i_unique );
			
				if ( !executeQuery())
					return false;
			}
			while ( EndSelect() == false ); // row lock
			
			if ( HasRows() == true)
			{
				DB_Row row = m_db_result.GetFirstRow();
				fetchRetrieve ( ref row );
				return true;
			}
			
			return false;
		}
		
		public bool create_T_InfoAdicionais ( )
		{
			try{
			string new_id = "";
			
			StartInsert();
			
			m_gen_dbStatement.AddValue ( TB_T_INFOADICIONAIS.st_codigo, st_codigo, TB_T_INFOADICIONAIS.type_st_codigo );
			m_gen_dbStatement.AddValue ( TB_T_INFOADICIONAIS.st_empresaAfiliada, st_empresaAfiliada, TB_T_INFOADICIONAIS.type_st_empresaAfiliada );
			m_gen_dbStatement.AddValue ( TB_T_INFOADICIONAIS.st_presenteado, st_presenteado, TB_T_INFOADICIONAIS.type_st_presenteado );
			m_gen_dbStatement.AddValue ( TB_T_INFOADICIONAIS.st_recado, st_recado, TB_T_INFOADICIONAIS.type_st_recado );
			m_gen_dbStatement.AddValue ( TB_T_INFOADICIONAIS.dt_edu_nasc, dt_edu_nasc, TB_T_INFOADICIONAIS.type_dt_edu_nasc );
			m_gen_dbStatement.AddValue ( TB_T_INFOADICIONAIS.st_edu_sexo, st_edu_sexo, TB_T_INFOADICIONAIS.type_st_edu_sexo );
			m_gen_dbStatement.AddValue ( TB_T_INFOADICIONAIS.st_edu_grau, st_edu_grau, TB_T_INFOADICIONAIS.type_st_edu_grau );
			m_gen_dbStatement.AddValue ( TB_T_INFOADICIONAIS.st_edu_serie_semestre, st_edu_serie_semestre, TB_T_INFOADICIONAIS.type_st_edu_serie_semestre );
			m_gen_dbStatement.AddValue ( TB_T_INFOADICIONAIS.st_edu_turma, st_edu_turma, TB_T_INFOADICIONAIS.type_st_edu_turma );
			m_gen_dbStatement.AddValue ( TB_T_INFOADICIONAIS.st_edu_curso, st_edu_curso, TB_T_INFOADICIONAIS.type_st_edu_curso );
			m_gen_dbStatement.AddValue ( TB_T_INFOADICIONAIS.dt_edu_atualizacao, dt_edu_atualizacao, TB_T_INFOADICIONAIS.type_dt_edu_atualizacao );
			m_gen_dbStatement.AddValue ( TB_T_INFOADICIONAIS.st_empresa, st_empresa, TB_T_INFOADICIONAIS.type_st_empresa );
			m_gen_dbStatement.AddValue ( TB_T_INFOADICIONAIS.st_matricula, st_matricula, TB_T_INFOADICIONAIS.type_st_matricula );
			
			if ( !ExecuteScalar ( ref new_id ) )
				return false;
			
			i_unique = new_id;
			
			} catch ( System.Exception ex ) {
				StreamWriter wr = new StreamWriter ( 	"CRITICAL_" + var_Tablename + "_" + "_" + DateTime.Now.Year.ToString() + DateTime.Now.Month.ToString().PadLeft ( 2, '0' ) + DateTime.Now.Day.ToString().PadLeft ( 2, '0' ) + "_" + DateTime.Now.Hour.ToString().PadLeft ( 2, '0' ) + DateTime.Now.Minute.ToString().PadLeft ( 2, '0' ) + DateTime.Now.Second.ToString().PadLeft ( 2, '0' ) + ".txt" );
				wr.WriteLine ( ex.ToString() );
				wr.Flush();
				wr.Close();
			}
			
			return true;
		}
			
		public bool delete ( )
		{
		
			bool ret = false;
		
			try{
			StartDelete();
			
			if ( i_unique != "0" )
				m_gen_dbStatement.AddWhere ( TB_T_INFOADICIONAIS.i_unique, i_unique, TB_T_INFOADICIONAIS.type_i_unique );
			
			ret = Execute();
			
			} catch ( System.Exception ex ) {
				StreamWriter wr = new StreamWriter ( 	"CRITICAL_" + var_Tablename + "_" + "_" + DateTime.Now.Year.ToString() + DateTime.Now.Month.ToString().PadLeft ( 2, '0' ) + DateTime.Now.Day.ToString().PadLeft ( 2, '0' ) + "_" + DateTime.Now.Hour.ToString().PadLeft ( 2, '0' ) + DateTime.Now.Minute.ToString().PadLeft ( 2, '0' ) + DateTime.Now.Second.ToString().PadLeft ( 2, '0' ) + ".txt" );
				wr.WriteLine ( ex.ToString() );
				wr.Flush();
				wr.Close();
			}
			
			return ret; 
		}
			
		public bool select_rows_emp_mat ( string val_st_empresa, string val_st_matricula )
		{
			do
			{
				StartSelect();
				fieldSelection();
			
				m_gen_dbStatement.AddWhere ( TB_T_INFOADICIONAIS.st_empresa, val_st_empresa , TB_T_INFOADICIONAIS.type_st_empresa);
				m_gen_dbStatement.AddWhere ( TB_T_INFOADICIONAIS.st_matricula, val_st_matricula , TB_T_INFOADICIONAIS.type_st_matricula);
			
				if ( !executeQuery() )
					return false;
			}
			while ( EndSelect() == false ); // row lock
			
			return HasRows();
		}
	}
}
